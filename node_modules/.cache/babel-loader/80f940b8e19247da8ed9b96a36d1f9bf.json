{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/utils/form/CustomRadio.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomRadio = props => {\n  const {\n    classes,\n    radioId,\n    radioName,\n    valueLink,\n    options,\n    disabled,\n    isInline\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `radio-wrapper ${isInline ? \"inline\" : \"\"}`,\n    children: options && options.map((option, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radio-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        /* style={{\n          display: \"block\",\n          // width: \"100%\",\n          // padding: \"0.85rem 0\",\n          // cursor: \"pointer\",\n        }} */\n        type: \"radio\",\n        value: option.key,\n        checked: valueLink.value.indexOf(option.key) > -1,\n        onChange: e => valueLink.requestChange(e.target.value),\n        id: radioId,\n        name: radioName,\n        className: classes.inputField,\n        disabled: disabled\n      }, option.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: option.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomRadio;\nCustomRadio.propTypes = {\n  radioId: PropTypes.string,\n  radioName: PropTypes.string,\n  valueLink: PropTypes.object.isRequired,\n  options: PropTypes.array.isRequired,\n  isInline: PropTypes.bool\n};\nCustomRadio.defaultProps = {\n  isInline: false\n};\nexport default CustomRadio;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomRadio\");","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/utils/form/CustomRadio.js"],"names":["React","PropTypes","CustomRadio","props","classes","radioId","radioName","valueLink","options","disabled","isInline","map","option","key","value","indexOf","e","requestChange","target","inputField","label","propTypes","string","object","isRequired","array","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAM;AACJC,IAAAA,OADI;AACKC,IAAAA,OADL;AACcC,IAAAA,SADd;AACyBC,IAAAA,SADzB;AACoCC,IAAAA,OADpC;AAC6CC,IAAAA,QAD7C;AACuDC,IAAAA;AADvD,MAEFP,KAFJ;AAGA,sBACE;AAAK,IAAA,SAAS,EAAG,iBAAgBO,QAAQ,GAAG,QAAH,GAAc,EAAG,EAA1D;AAAA,cAEIF,OAAO,IACPA,OAAO,CAACG,GAAR,CAAY,CAACC,MAAD,EAASC,GAAT,kBACV;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AACE;AACd;AACA;AACA;AACA;AACA;AACc,QAAA,IAAI,EAAC,OAPP;AASE,QAAA,KAAK,EAAED,MAAM,CAACC,GAThB;AAUE,QAAA,OAAO,EAAEN,SAAS,CAACO,KAAV,CAAgBC,OAAhB,CAAwBH,MAAM,CAACC,GAA/B,IAAsC,CAAC,CAVlD;AAWE,QAAA,QAAQ,EAAEG,CAAC,IAAIT,SAAS,CAACU,aAAV,CAAwBD,CAAC,CAACE,MAAF,CAASJ,KAAjC,CAXjB;AAYE,QAAA,EAAE,EAAET,OAZN;AAaE,QAAA,IAAI,EAAEC,SAbR;AAcE,QAAA,SAAS,EAAEF,OAAO,CAACe,UAdrB;AAeE,QAAA,QAAQ,EAAEV;AAfZ,SAQOG,MAAM,CAACC,GARd;AAAA;AAAA;AAAA;AAAA,cADF,eAkBE;AAAA,kBAAOD,MAAM,CAACQ;AAAd;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA,OAAoCP,GAApC;AAAA;AAAA;AAAA;AAAA,YADF;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAhCD;;KAAMX,W;AAkCNA,WAAW,CAACmB,SAAZ,GAAwB;AACtBhB,EAAAA,OAAO,EAAEJ,SAAS,CAACqB,MADG;AAEtBhB,EAAAA,SAAS,EAAEL,SAAS,CAACqB,MAFC;AAGtBf,EAAAA,SAAS,EAAEN,SAAS,CAACsB,MAAV,CAAiBC,UAHN;AAItBhB,EAAAA,OAAO,EAAEP,SAAS,CAACwB,KAAV,CAAgBD,UAJH;AAKtBd,EAAAA,QAAQ,EAAET,SAAS,CAACyB;AALE,CAAxB;AAQAxB,WAAW,CAACyB,YAAZ,GAA2B;AACzBjB,EAAAA,QAAQ,EAAE;AADe,CAA3B;AAIA,eAAeR,WAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CustomRadio = props => {\n  const {\n    classes, radioId, radioName, valueLink, options, disabled, isInline\n  } = props;\n  return (\n    <div className={`radio-wrapper ${isInline ? \"inline\" : \"\"}`}>\n      {\n        options &&\n        options.map((option, key) => (\n          <div className=\"radio-control\" key={key}>\n            <input\n              /* style={{\n                display: \"block\",\n                // width: \"100%\",\n                // padding: \"0.85rem 0\",\n                // cursor: \"pointer\",\n              }} */\n              type=\"radio\"\n              key={option.key}\n              value={option.key}\n              checked={valueLink.value.indexOf(option.key) > -1}\n              onChange={e => valueLink.requestChange(e.target.value)}\n              id={radioId}\n              name={radioName}\n              className={classes.inputField}\n              disabled={disabled}\n            />\n            <span>{option.label}</span>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nCustomRadio.propTypes = {\n  radioId: PropTypes.string,\n  radioName: PropTypes.string,\n  valueLink: PropTypes.object.isRequired,\n  options: PropTypes.array.isRequired,\n  isInline: PropTypes.bool,\n};\n\nCustomRadio.defaultProps = {\n  isInline: false,\n};\n\nexport default CustomRadio;\n"]},"metadata":{},"sourceType":"module"}