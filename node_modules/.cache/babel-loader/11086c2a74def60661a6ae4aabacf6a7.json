{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { postLoginInstance } from \"../../utils\";\nimport { API_LIMIT, START_PAGE } from \"../../utils/Constant\";\nimport { calculateTotalPageCount } from \"../../utils/ReusableFunctions\";\nimport { getAllVehiclesApi } from \"../vehicles/Api\"; // import {setFranchiseLocation} from './FranchiseAction';\n\nexport const getAllFranchiseApi = function (ctx) {\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : START_PAGE;\n  return function (dispatch, getState) {\n    let data = new URLSearchParams();\n\n    if (page === -1) {\n      data.append(\"start\", -1);\n      data.append(\"limit\", -1);\n    } else {\n      data.append(\"start\", page * API_LIMIT || START_PAGE);\n      data.append(\"limit\", API_LIMIT);\n    }\n\n    data.append(\"conditions\", JSON.stringify(ctx.state.conditions || []));\n    data.append(\"sorts\", JSON.stringify([]));\n    postLoginInstance.post(\"/organisation/user/search-franchises\", data).then(res => {\n      if (page === -1) {\n        let franchiseOptionsList = res.data.data.results.map(item => ({\n          value: item.id,\n          label: item.legal_name\n        }));\n        ctx.setState({\n          franchiseOptionsList\n        });\n      } else {\n        ctx.setState({\n          data: res.data.data.results,\n          totalCount: res.data.data.total_count,\n          totalPage: calculateTotalPageCount(res.data.data.total_count),\n          page: page\n        });\n      }\n    }).catch(err => {\n      console.log(\"Catch\", err);\n    });\n  };\n};\nexport const addEditFranchiseApi = (data, cb) => {\n  return postLoginInstance.post(\"/organisation/user/add-new-franchise\", data).then(res => {\n    if (!res.data.error) {\n      cb();\n      toast.success(res.data.message || \"Something went wrong\");\n    } else {\n      toast.error(res.data.message || \"Something went wrong\");\n    }\n  }).catch(err => {\n    toast.error(err.message || \"Something went wrong\");\n  });\n};\nexport const updatetFranchiseApi = (data, cb) => {\n  return postLoginInstance.post(\"/organisation/user/update-franchise\", data).then(res => {\n    if (!res.data.error) {\n      cb();\n      toast.success(res.data.message || \"Something went wrong\");\n    } else {\n      toast.error(res.data.message || \"Something went wrong\");\n    }\n  }).catch(err => {\n    toast.error(err.message || \"Something went wrong\");\n  });\n};\nexport const getFranchiseByIdApi = (franchiseId, cb) => {\n  return function (dispatch, getState) {\n    let data = new URLSearchParams();\n    data.append(\"franchise_id\", franchiseId);\n    postLoginInstance.post(\"/organisation/user/get-franchise-details\", data).then(res => {\n      cb(res.data.data.franchise); // ctx.setState({\n      //     franchiseSet:,\n      // })\n    }).catch(err => {\n      console.log(\"Catch\", err);\n    });\n  };\n};\nexport const getAllFranchiseLocationApi = function (ctx) {\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : START_PAGE;\n  let optionsList = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return function (dispatch, getState) {\n    let data = new URLSearchParams(); // data.append(\"franchise_id\", ctx.state.franchiseId);\n\n    if (optionsList) {\n      data.append(\"start\", -1);\n      data.append(\"limit\", -1);\n    } else {\n      data.append(\"start\", page * API_LIMIT || START_PAGE);\n      data.append(\"limit\", API_LIMIT);\n    }\n\n    data.append(\"conditions\", JSON.stringify(ctx.state.conditions || []));\n    data.append(\"sorts\", JSON.stringify([]));\n    postLoginInstance.post(\"/offering/franchise/search-franchise-locations\", data).then(res => {\n      // console.log('res',res);\n      let franchiseLocationOption = res.data.data.franchise_locations.results.map(item => {\n        var _item$location_detail;\n\n        return {\n          label: ((_item$location_detail = item.location_details) === null || _item$location_detail === void 0 ? void 0 : _item$location_detail.formatted_address) || \"Null\",\n          value: item.id\n        };\n      });\n\n      if (optionsList) {\n        ctx.setState({\n          franchiseLocationOption\n        });\n      } else {\n        ctx.setState({\n          data: res.data.data.franchise_locations.results,\n          totalCount: res.data.data.franchise_locations.total_count,\n          totalPage: calculateTotalPageCount(res.data.data.franchise_locations.total_count),\n          page: page\n        });\n      }\n    }).catch(err => {\n      console.log(\"Catch\", err);\n    });\n  };\n};\nexport const addUpdateFranchiseLocationApi = (data, cb) => {\n  // return function (dispatch, getState) {\n  postLoginInstance.post(\"/offering/franchise/add-update-franchise-location\", data).then(res => {\n    if (!res.data.error) {\n      cb();\n      toast.success(res.data.message || \"Something went wrong\");\n    } else {\n      toast.error(res.data.message || \"Something went wrong\");\n    }\n  }).catch(err => {\n    console.log(\"Catch\", err);\n  }); // };\n};\nexport const getFranchiseLocationByIdApi = ctx => {\n  let data = new URLSearchParams();\n  data.append(\"franchise_location_id\", ctx.state.locationId);\n  postLoginInstance.post(\"/offering/franchise/get-franchise-location-details\", data).then(res => {\n    if (!res.data.error) {\n      // console.log('res',res);\n      ctx.setState({\n        data: res.data.data.franchise_location,\n        conditions: [{\n          key: \"SEARCH_BY_FRANCHISE_LOCATION_ID\",\n          value: res.data.data.franchise_location.id\n        }]\n      }, () => {\n        getAllVehiclesApi(ctx);\n      }); // toast.success(res.data.message || \"Something went wrong\")\n    } else {\n      toast.error(res.data.message || \"Something went wrong\");\n    }\n  }).catch(err => {\n    console.log(\"Catch\", err);\n  });\n};","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/franchise/Api.js"],"names":["toast","postLoginInstance","API_LIMIT","START_PAGE","calculateTotalPageCount","getAllVehiclesApi","getAllFranchiseApi","ctx","page","dispatch","getState","data","URLSearchParams","append","JSON","stringify","state","conditions","post","then","res","franchiseOptionsList","results","map","item","value","id","label","legal_name","setState","totalCount","total_count","totalPage","catch","err","console","log","addEditFranchiseApi","cb","error","success","message","updatetFranchiseApi","getFranchiseByIdApi","franchiseId","franchise","getAllFranchiseLocationApi","optionsList","franchiseLocationOption","franchise_locations","location_details","formatted_address","addUpdateFranchiseLocationApi","getFranchiseLocationByIdApi","locationId","franchise_location","key"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\"\nimport { postLoginInstance } from \"../../utils\"\nimport { API_LIMIT, START_PAGE } from \"../../utils/Constant\"\nimport { calculateTotalPageCount } from \"../../utils/ReusableFunctions\"\nimport { getAllVehiclesApi } from \"../vehicles/Api\"\n// import {setFranchiseLocation} from './FranchiseAction';\n\nexport const getAllFranchiseApi = (ctx, page = START_PAGE) => {\n  return function (dispatch, getState) {\n    let data = new URLSearchParams()\n    if (page === -1) {\n      data.append(\"start\", -1)\n      data.append(\"limit\", -1)\n    } else {\n      data.append(\"start\", page * API_LIMIT || START_PAGE)\n      data.append(\"limit\", API_LIMIT)\n    }\n    data.append(\"conditions\", JSON.stringify(ctx.state.conditions || []))\n    data.append(\"sorts\", JSON.stringify([]))\n\n    postLoginInstance\n      .post(\"/organisation/user/search-franchises\", data)\n      .then((res) => {\n        if (page === -1) {\n          let franchiseOptionsList = res.data.data.results.map((item) => ({\n            value: item.id,\n            label: item.legal_name\n          }))\n          ctx.setState({\n            franchiseOptionsList\n          })\n        } else {\n          ctx.setState({\n            data: res.data.data.results,\n            totalCount: res.data.data.total_count,\n            totalPage: calculateTotalPageCount(res.data.data.total_count),\n            page: page\n          })\n        }\n      })\n      .catch((err) => {\n        console.log(\"Catch\", err)\n      })\n  }\n}\n\nexport const addEditFranchiseApi = (data, cb) => {\n  return postLoginInstance\n    .post(\"/organisation/user/add-new-franchise\", data)\n    .then((res) => {\n      if (!res.data.error) {\n        cb()\n        toast.success(res.data.message || \"Something went wrong\")\n      } else {\n        toast.error(res.data.message || \"Something went wrong\")\n      }\n    })\n    .catch((err) => {\n      toast.error(err.message || \"Something went wrong\")\n    })\n}\n\nexport const updatetFranchiseApi = (data, cb) => {\n  return postLoginInstance\n    .post(\"/organisation/user/update-franchise\", data)\n    .then((res) => {\n      if (!res.data.error) {\n        cb()\n        toast.success(res.data.message || \"Something went wrong\")\n      } else {\n        toast.error(res.data.message || \"Something went wrong\")\n      }\n    })\n    .catch((err) => {\n      toast.error(err.message || \"Something went wrong\")\n    })\n}\n\nexport const getFranchiseByIdApi = (franchiseId, cb) => {\n  return function (dispatch, getState) {\n    let data = new URLSearchParams()\n    data.append(\"franchise_id\", franchiseId)\n\n    postLoginInstance\n      .post(\"/organisation/user/get-franchise-details\", data)\n      .then((res) => {\n        cb(res.data.data.franchise)\n        // ctx.setState({\n        //     franchiseSet:,\n        // })\n      })\n      .catch((err) => {\n        console.log(\"Catch\", err)\n      })\n  }\n}\n\nexport const getAllFranchiseLocationApi = (\n  ctx,\n  page = START_PAGE,\n  optionsList = false\n) => {\n  return function (dispatch, getState) {\n    let data = new URLSearchParams()\n    // data.append(\"franchise_id\", ctx.state.franchiseId);\n    if (optionsList) {\n      data.append(\"start\", -1)\n      data.append(\"limit\", -1)\n    } else {\n      data.append(\"start\", page * API_LIMIT || START_PAGE)\n      data.append(\"limit\", API_LIMIT)\n    }\n    data.append(\"conditions\", JSON.stringify(ctx.state.conditions || []))\n    data.append(\"sorts\", JSON.stringify([]))\n    postLoginInstance\n      .post(\"/offering/franchise/search-franchise-locations\", data)\n      .then((res) => {\n        // console.log('res',res);\n        let franchiseLocationOption =\n          res.data.data.franchise_locations.results.map((item) => ({\n            label: item.location_details?.formatted_address || \"Null\",\n            value: item.id\n          }))\n        if (optionsList) {\n          ctx.setState({ franchiseLocationOption })\n        } else {\n          ctx.setState({\n            data: res.data.data.franchise_locations.results,\n            totalCount: res.data.data.franchise_locations.total_count,\n            totalPage: calculateTotalPageCount(\n              res.data.data.franchise_locations.total_count\n            ),\n            page: page\n          })\n        }\n      })\n      .catch((err) => {\n        console.log(\"Catch\", err)\n      })\n  }\n}\n\nexport const addUpdateFranchiseLocationApi = (data, cb) => {\n  // return function (dispatch, getState) {\n  postLoginInstance\n    .post(\"/offering/franchise/add-update-franchise-location\", data)\n    .then((res) => {\n      if (!res.data.error) {\n        cb()\n        toast.success(res.data.message || \"Something went wrong\")\n      } else {\n        toast.error(res.data.message || \"Something went wrong\")\n      }\n    })\n    .catch((err) => {\n      console.log(\"Catch\", err)\n    })\n  // };\n}\n\nexport const getFranchiseLocationByIdApi = (ctx) => {\n  let data = new URLSearchParams()\n  data.append(\"franchise_location_id\", ctx.state.locationId)\n  postLoginInstance\n    .post(\"/offering/franchise/get-franchise-location-details\", data)\n    .then((res) => {\n      if (!res.data.error) {\n        // console.log('res',res);\n        ctx.setState(\n          {\n            data: res.data.data.franchise_location,\n            conditions: [\n              {\n                key: \"SEARCH_BY_FRANCHISE_LOCATION_ID\",\n                value: res.data.data.franchise_location.id\n              }\n            ]\n          },\n          () => {\n            getAllVehiclesApi(ctx)\n          }\n        )\n        // toast.success(res.data.message || \"Something went wrong\")\n      } else {\n        toast.error(res.data.message || \"Something went wrong\")\n      }\n    })\n    .catch((err) => {\n      console.log(\"Catch\", err)\n    })\n}\n"]},"metadata":{},"sourceType":"module"}