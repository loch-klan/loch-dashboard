{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/app/vehicles/UpdateStatusModal.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { BaseReactComponent, Form, FormElement, FormSubmitButton, CustomTextControl, FormValidator, SelectControl } from \"../../utils/form\";\nimport { CustomModal } from \"../common\";\nimport { Col, Row, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { VehicleStatusOptions } from \"../../utils/Constant\";\nimport { updateStatusApi } from \"./Api\"; // import { addRewardsApi } from \"./Api\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdateStatusModal extends BaseReactComponent {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = () => {\n      const data = new URLSearchParams();\n      data.append(\"vehicle_status\", this.state.status);\n      data.append(\"vehicle_id\", this.props.vehicleInfo.id);\n      updateStatusApi(data, this.props.handleUpdate);\n    };\n\n    this.state = {\n      status: props.vehicleInfo.status || \"\"\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(CustomModal, {\n      show: this.props.show,\n      onHide: () => this.props.handleClose(),\n      title: \"Update Status\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onValidSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(FormElement, {\n            valueLink: this.linkState(this, \"status\"),\n            label: \"Vehicle Status\",\n            required: true,\n            validations: [{\n              validate: FormValidator.isRequired,\n              message: \"Vehicle status cannot be empty\"\n            }],\n            control: {\n              type: SelectControl,\n              settings: {\n                placeholder: \"Select Status\",\n                options: VehicleStatusOptions,\n                multiple: false,\n                searchable: true,\n                onChangeCallback: onBlur => {\n                  onBlur(this.state.status);\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-wrapper\",\n          style: {\n            justifyContent: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(FormSubmitButton, {\n            customClass: `btn black-btn ${!this.state.status && \"inactive-btn\"}`,\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({ ...state\n});\n\nconst mapDispatchToProps = {// getPosts: fetchPosts\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateStatusModal);","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/vehicles/UpdateStatusModal.js"],"names":["React","PropTypes","BaseReactComponent","Form","FormElement","FormSubmitButton","CustomTextControl","FormValidator","SelectControl","CustomModal","Col","Row","Button","connect","VehicleStatusOptions","updateStatusApi","UpdateStatusModal","constructor","props","onSubmit","data","URLSearchParams","append","state","status","vehicleInfo","id","handleUpdate","componentDidMount","render","show","handleClose","linkState","validate","isRequired","message","type","settings","placeholder","options","multiple","searchable","onChangeCallback","onBlur","justifyContent","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  BaseReactComponent,\n  Form,\n  FormElement,\n  FormSubmitButton,\n  CustomTextControl,\n  FormValidator,\n  SelectControl,\n} from \"../../utils/form\";\nimport { CustomModal } from \"../common\";\nimport { Col, Row, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { VehicleStatusOptions } from \"../../utils/Constant\";\nimport { updateStatusApi } from \"./Api\";\n// import { addRewardsApi } from \"./Api\";\n\nclass UpdateStatusModal extends BaseReactComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: props.vehicleInfo.status || \"\",\n    };\n  }\n\n  componentDidMount() {}\n\n  onSubmit = () => {\n    const data = new URLSearchParams();\n    data.append(\"vehicle_status\", this.state.status);\n    data.append(\"vehicle_id\", this.props.vehicleInfo.id);\n    updateStatusApi(data, this.props.handleUpdate);\n  };\n\n  render() {\n    return (\n      <CustomModal\n        show={this.props.show}\n        onHide={() => this.props.handleClose()}\n        title={\"Update Status\"}\n      >\n        <Form onValidSubmit={this.onSubmit}>\n          <div className=\"modal-wrapper\">\n            <FormElement\n              valueLink={this.linkState(this, \"status\")}\n              label=\"Vehicle Status\"\n              required\n              validations={[\n                {\n                  validate: FormValidator.isRequired,\n                  message: \"Vehicle status cannot be empty\",\n                },\n              ]}\n              control={{\n                type: SelectControl,\n                settings: {\n                  placeholder: \"Select Status\",\n                  options: VehicleStatusOptions,\n                  multiple: false,\n                  searchable: true,\n                  onChangeCallback: (onBlur) => {\n                    onBlur(this.state.status);\n                  },\n                },\n              }}\n            />\n          </div>\n          <div className=\"submit-wrapper\" style={{ justifyContent: \"right\" }}>\n            <FormSubmitButton\n              customClass={`btn black-btn ${\n                !this.state.status && \"inactive-btn\"\n              }`}\n            >\n              Done\n            </FormSubmitButton>\n          </div>\n        </Form>\n      </CustomModal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ...state,\n});\n\nconst mapDispatchToProps = {\n  // getPosts: fetchPosts\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateStatusModal);\n"]},"metadata":{},"sourceType":"module"}