{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { postLoginInstance, preLoginInstance } from \"../../utils\";\nimport { LocationType } from \"../../utils/Constant\";\nexport const getAllLocationApi = (ctx, locationType) => {\n  return function (dispatch, getState) {\n    let data = new URLSearchParams();\n    data.append(\"location_type\", locationType);\n    if (locationType === LocationType.STATE && ctx.state.countryId) data.append(\"parent_id\", ctx.state.countryId);\n    if (locationType === LocationType.CITY && ctx.state.stateId) data.append(\"parent_id\", ctx.state.stateId);\n    preLoginInstance.post(\"/common/master/get-location-by-type\", data).then(res => {\n      let locationList = res.data.data.location.map(item => ({ ...item,\n        value: item.id,\n        label: item.name\n      }));\n      ctx.setState({ ...(locationType === LocationType.COUNTRY && {\n          countryList: locationList\n        }),\n        ...(locationType === LocationType.STATE && {\n          stateList: locationList\n        }),\n        ...(locationType === LocationType.CITY && {\n          cityList: locationList\n        }),\n        ...(locationType === LocationType.AREA && {\n          areaList: locationList\n        })\n      });\n    }).catch(err => {\n      console.log(\"Catch\", err);\n    });\n  };\n};\nexport const updateLocationApi = (data, ctx) => {\n  return function (dispatch, getState) {\n    preLoginInstance.post(\"/common/master/add-update-location\", data).then(res => {\n      // let countryList = ctx.state.countryList\n      // countryList =\n      ctx.setState({ ...(ctx.state.countryList && {\n          countryList: ctx.state.countryList.map(item => item.id !== res.data.data.location.id ? item : res.data.data.location)\n        }),\n        ...(ctx.state.cityList && {\n          cityList: ctx.state.cityList.map(item => item.id !== res.data.data.location.id ? item : res.data.data.location)\n        }),\n        ...(ctx.state.areaList && {\n          areaList: ctx.state.areaList.map(item => item.id !== res.data.data.location.id ? item : res.data.data.location)\n        })\n      });\n    }).catch(err => {\n      console.log(\"Catch\", err);\n    });\n  };\n};\nexport const addUpdateLocationApi = (data, cb) => {\n  // return function (dispatch, getState) {\n  preLoginInstance.post(\"/common/master/add-update-location\", data).then(res => {\n    // console.log(\"res\", res);\n    if (!res.data.error) {\n      cb();\n      toast.success(res.data.message || \"Something went wrong\");\n    } else {\n      toast.error(res.data.message || \"Something went wrong\");\n    }\n  }).catch(err => {\n    console.log(\"Catch\", err);\n  }); // };\n};\nexport const resetPasswordApi = (ctx, data) => {\n  preLoginInstance.post(\"organisation/user/set-reset-password\", data).then(res => {\n    toast.success(res.data.message || \"Password set successfully\");\n    ctx.props.history.push(\"/login\");\n  }).catch(err => {\n    console.log(\"Catch\", err);\n  });\n};\nexport const changePasswordApi = (ctx, data) => {\n  postLoginInstance.post(\"organisation/user/change-password\", data).then(res => {\n    if (!res.data.error) {\n      // console.log('ctx.props', ctx.props.handleClose);\n      toast.success(\"Password changed successfully\"); // ctx.props.history.push('/login');\n\n      ctx.props.handleClose();\n    } else {\n      toast.error(res.data.message || \"Something went wrong\");\n    }\n  }).catch(err => {\n    console.log(\"Catch\", err);\n  });\n};\nexport const forgotPasswordApi = (data, handleClose) => {\n  preLoginInstance.post(\"organisation/user/forgot-password\", data).then(res => {\n    if (!res.data.error) {\n      toast.success(res.data.message || \"Please check your email\");\n      handleClose();\n    } else {\n      toast.error(res.data.message || \"Something went wrong\");\n    }\n  }).catch(err => {\n    console.log(\"Catch\", err);\n  });\n};","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/common/Api.js"],"names":["toast","postLoginInstance","preLoginInstance","LocationType","getAllLocationApi","ctx","locationType","dispatch","getState","data","URLSearchParams","append","STATE","state","countryId","CITY","stateId","post","then","res","locationList","location","map","item","value","id","label","name","setState","COUNTRY","countryList","stateList","cityList","AREA","areaList","catch","err","console","log","updateLocationApi","addUpdateLocationApi","cb","error","success","message","resetPasswordApi","props","history","push","changePasswordApi","handleClose","forgotPasswordApi"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\nimport { postLoginInstance, preLoginInstance } from \"../../utils\";\nimport { LocationType } from \"../../utils/Constant\";\nexport const getAllLocationApi = (ctx, locationType) => {\n  return function (dispatch, getState) {\n    let data = new URLSearchParams();\n    data.append(\"location_type\", locationType);\n\n    if (locationType === LocationType.STATE && ctx.state.countryId)\n      data.append(\"parent_id\", ctx.state.countryId);\n\n    if (locationType === LocationType.CITY && ctx.state.stateId)\n      data.append(\"parent_id\", ctx.state.stateId);\n\n    preLoginInstance\n      .post(\"/common/master/get-location-by-type\", data)\n      .then((res) => {\n        let locationList = res.data.data.location.map((item) => ({\n          ...item,\n          value: item.id,\n          label: item.name,\n        }));\n        ctx.setState({\n          ...(locationType === LocationType.COUNTRY && {\n            countryList: locationList,\n          }),\n          ...(locationType === LocationType.STATE && {\n            stateList: locationList,\n          }),\n          ...(locationType === LocationType.CITY && { cityList: locationList }),\n          ...(locationType === LocationType.AREA && { areaList: locationList }),\n        });\n      })\n      .catch((err) => {\n        console.log(\"Catch\", err);\n      });\n  };\n};\n\nexport const updateLocationApi = (data, ctx) => {\n  return function (dispatch, getState) {\n    preLoginInstance\n      .post(\"/common/master/add-update-location\", data)\n      .then((res) => {\n        // let countryList = ctx.state.countryList\n        // countryList =\n        ctx.setState({\n          ...(ctx.state.countryList && {\n            countryList: ctx.state.countryList.map((item) =>\n              item.id !== res.data.data.location.id\n                ? item\n                : res.data.data.location\n            ),\n          }),\n          ...(ctx.state.cityList && {\n            cityList: ctx.state.cityList.map((item) =>\n              item.id !== res.data.data.location.id\n                ? item\n                : res.data.data.location\n            ),\n          }),\n          ...(ctx.state.areaList && {\n            areaList: ctx.state.areaList.map((item) =>\n              item.id !== res.data.data.location.id\n                ? item\n                : res.data.data.location\n            ),\n          }),\n        });\n      })\n      .catch((err) => {\n        console.log(\"Catch\", err);\n      });\n  };\n};\n\nexport const addUpdateLocationApi = (data, cb) => {\n  // return function (dispatch, getState) {\n  preLoginInstance\n    .post(\"/common/master/add-update-location\", data)\n    .then((res) => {\n      // console.log(\"res\", res);\n      if (!res.data.error) {\n        cb();\n        toast.success(res.data.message || \"Something went wrong\");\n      } else {\n        toast.error(res.data.message || \"Something went wrong\");\n      }\n    })\n    .catch((err) => {\n      console.log(\"Catch\", err);\n    });\n  // };\n};\n\nexport const resetPasswordApi = (ctx, data) => {\n  preLoginInstance\n    .post(\"organisation/user/set-reset-password\", data)\n    .then((res) => {\n      toast.success(res.data.message || \"Password set successfully\");\n      ctx.props.history.push(\"/login\");\n    })\n    .catch((err) => {\n      console.log(\"Catch\", err);\n    });\n};\n\nexport const changePasswordApi = (ctx, data) => {\n  postLoginInstance\n    .post(\"organisation/user/change-password\", data)\n    .then((res) => {\n      if (!res.data.error) {\n        // console.log('ctx.props', ctx.props.handleClose);\n        toast.success(\"Password changed successfully\");\n        // ctx.props.history.push('/login');\n        ctx.props.handleClose();\n      } else {\n        toast.error(res.data.message || \"Something went wrong\");\n      }\n    })\n    .catch((err) => {\n      console.log(\"Catch\", err);\n    });\n};\n\nexport const forgotPasswordApi = (data, handleClose) => {\n  preLoginInstance\n    .post(\"organisation/user/forgot-password\", data)\n    .then((res) => {\n      if (!res.data.error) {\n        toast.success(res.data.message || \"Please check your email\");\n        handleClose();\n      } else {\n        toast.error(res.data.message || \"Something went wrong\");\n      }\n    })\n    .catch((err) => {\n      console.log(\"Catch\", err);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}