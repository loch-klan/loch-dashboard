{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/utils/form/FormSubmitButtonComponent.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport BaseReactComponent from \"./BaseReactComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormSubmitButtonComponent extends BaseReactComponent {\n  constructor(props) {\n    super(props);\n\n    this.updateInProgress = inProgress => {\n      this.setState({\n        inProgress\n      });\n    };\n\n    this.state = {\n      inProgress: false\n    };\n  }\n  /* componentWillMount() {\n      this.props.formContext.registerSubmitButton(this);\n  } */\n\n\n  componentDidMount() {\n    this.props.formContext.registerSubmitButton(this);\n  }\n\n  componentWillUnmount() {\n    this.props.formContext.unRegisterSubmitButton(this);\n  }\n\n  render() {\n    const {\n      progressMessage,\n      fullWidth,\n      children,\n      formError = false,\n      customClass = '',\n      name = \"\"\n    } = this.props;\n    const inProgress = this.state.inProgress && formError;\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"raised\",\n      bsStyle: \"primary\",\n      type: \"submit\",\n      disabled: inProgress,\n      bsSize: fullWidth,\n      className: customClass,\n      name: name,\n      children: inProgress ? progressMessage : children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nFormSubmitButtonComponent.propTypes = {\n  classes: PropTypes.object,\n  formContext: PropTypes.object.isRequired,\n  progressMessage: PropTypes.string.isRequired,\n  fullWidth: PropTypes.bool\n};\nFormSubmitButtonComponent.defaultProps = {\n  fullWidth: false\n};\nexport default FormSubmitButtonComponent;","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/utils/form/FormSubmitButtonComponent.js"],"names":["React","PropTypes","Button","BaseReactComponent","FormSubmitButtonComponent","constructor","props","updateInProgress","inProgress","setState","state","componentDidMount","formContext","registerSubmitButton","componentWillUnmount","unRegisterSubmitButton","render","progressMessage","fullWidth","children","formError","customClass","name","propTypes","classes","object","isRequired","string","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;;AAEA,MAAMC,yBAAN,SAAwCD,kBAAxC,CAA2D;AACzDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmBnBC,gBAnBmB,GAmBAC,UAAU,IAAI;AAC/B,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KArBkB;;AAEjB,SAAKE,KAAL,GAAa;AACXF,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;AAED;AACF;AACA;;;AAEEG,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,KAAL,CAAWM,WAAX,CAAuBC,oBAAvB,CAA4C,IAA5C;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKR,KAAL,CAAWM,WAAX,CAAuBG,sBAAvB,CAA8C,IAA9C;AACD;;AAMDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA,SAAnB;AAA8BC,MAAAA,QAA9B;AAAwCC,MAAAA,SAAS,GAAG,KAApD;AAA2DC,MAAAA,WAAW,GAAG,EAAzE;AAA6EC,MAAAA,IAAI,GAAG;AAApF,QAA2F,KAAKhB,KAAtG;AACA,UAAME,UAAU,GAAI,KAAKE,KAAL,CAAWF,UAAX,IAAyBY,SAA7C;AACA,wBACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,QADV;AAEE,MAAA,OAAO,EAAC,SAFV;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,QAAQ,EAAEZ,UAJZ;AAKE,MAAA,MAAM,EAAEU,SALV;AAME,MAAA,SAAS,EAAEG,WANb;AAOE,MAAA,IAAI,EAAEC,IAPR;AAAA,gBASGd,UAAU,GAAGS,eAAH,GAAqBE;AATlC;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAxCwD;;AA2C3Df,yBAAyB,CAACmB,SAA1B,GAAsC;AACpCC,EAAAA,OAAO,EAAEvB,SAAS,CAACwB,MADiB;AAEpCb,EAAAA,WAAW,EAAEX,SAAS,CAACwB,MAAV,CAAiBC,UAFM;AAGpCT,EAAAA,eAAe,EAAEhB,SAAS,CAAC0B,MAAV,CAAiBD,UAHE;AAIpCR,EAAAA,SAAS,EAAEjB,SAAS,CAAC2B;AAJe,CAAtC;AAOAxB,yBAAyB,CAACyB,YAA1B,GAAyC;AACvCX,EAAAA,SAAS,EAAE;AAD4B,CAAzC;AAIA,eAAed,yBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport BaseReactComponent from \"./BaseReactComponent\";\n\nclass FormSubmitButtonComponent extends BaseReactComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inProgress: false\n    };\n  }\n\n  /* componentWillMount() {\n      this.props.formContext.registerSubmitButton(this);\n  } */\n\n  componentDidMount() {\n    this.props.formContext.registerSubmitButton(this);\n  }\n\n  componentWillUnmount() {\n    this.props.formContext.unRegisterSubmitButton(this);\n  }\n\n  updateInProgress = inProgress => {\n    this.setState({ inProgress });\n  };\n\n  render() {\n    const { progressMessage, fullWidth, children, formError = false, customClass = '', name = \"\" } = this.props;\n    const inProgress = (this.state.inProgress && formError);\n    return (\n      <Button\n        variant=\"raised\"\n        bsStyle=\"primary\"\n        type=\"submit\"\n        disabled={inProgress}\n        bsSize={fullWidth}\n        className={customClass}\n        name={name}\n      >\n        {inProgress ? progressMessage : children}\n      </Button>\n    );\n  }\n}\n\nFormSubmitButtonComponent.propTypes = {\n  classes: PropTypes.object,\n  formContext: PropTypes.object.isRequired,\n  progressMessage: PropTypes.string.isRequired,\n  fullWidth: PropTypes.bool\n};\n\nFormSubmitButtonComponent.defaultProps = {\n  fullWidth: false\n};\n\nexport default FormSubmitButtonComponent;\n"]},"metadata":{},"sourceType":"module"}