{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/app/customers/CustomerFilterModal.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { BaseReactComponent, Form, FormElement, FormSubmitButton, FormValidator, SelectControl } from '../../utils/form';\nimport { CustomModal } from \"../common\";\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CustomerFilterModal extends BaseReactComponent {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = () => {};\n\n    this.handleClearFilter = () => {\n      console.log('Hey');\n      this.setState({\n        oem: \"\",\n        dealer: \"\",\n        status: \"\"\n      });\n    };\n\n    this.state = {\n      oem: \"\",\n      dealer: \"\",\n      status: \"\"\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(CustomModal, {\n      show: this.props.show,\n      onHide: this.props.handleClose,\n      title: \"Filters\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onValidSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(FormElement, {\n            valueLink: this.linkState(this, \"oem\"),\n            label: \"OEM\",\n            required: true,\n            validations: [{\n              validate: FormValidator.isRequired,\n              message: \"Field cannot be empty\"\n            }],\n            control: {\n              type: SelectControl,\n              settings: {\n                placeholder: \"Select OEM\",\n                options: [{\n                  value: 1,\n                  label: \"Ola\"\n                }, {\n                  value: 2,\n                  label: \"Uber\"\n                }, {\n                  value: 3,\n                  label: \"Delhi\"\n                }],\n                multiple: false,\n                searchable: true,\n                onChangeCallback: onBlur => {\n                  onBlur(this.state.oem);\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), this.state.oem && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FormElement, {\n              valueLink: this.linkState(this, \"dealer\"),\n              label: \"Dealer\",\n              required: true,\n              validations: [{\n                validate: FormValidator.isRequired,\n                message: \"Field cannot be empty\"\n              }],\n              control: {\n                type: SelectControl,\n                settings: {\n                  placeholder: \"Select Dealer\",\n                  options: [{\n                    value: 1,\n                    label: \"A\"\n                  }, {\n                    value: 2,\n                    label: \"B\"\n                  }, {\n                    value: 3,\n                    label: \"C\"\n                  }],\n                  multiple: false,\n                  searchable: true,\n                  onChangeCallback: onBlur => {\n                    onBlur(this.state.dealer);\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormElement, {\n              valueLink: this.linkState(this, \"status\"),\n              label: \"Status\",\n              required: true,\n              validations: [{\n                validate: FormValidator.isRequired,\n                message: \"Field cannot be empty\"\n              }],\n              control: {\n                type: SelectControl,\n                settings: {\n                  placeholder: \"Select Status\",\n                  options: [{\n                    value: 1,\n                    label: \"Active\"\n                  }, {\n                    value: 2,\n                    label: \"Inactive\"\n                  }, {\n                    value: 3,\n                    label: \"Processing\"\n                  }],\n                  multiple: false,\n                  searchable: true,\n                  onChangeCallback: onBlur => {\n                    onBlur(this.state.status);\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: `btn clear-btn ${!this.state.oem && \"inactive-state\"}`,\n            onClick: this.state.oem && this.handleClearFilter,\n            children: \"Clear All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormSubmitButton, {\n            customClass: \"btn black-btn\",\n            children: \"Apply Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCustomerFilterModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\nexport default CustomerFilterModal;","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/customers/CustomerFilterModal.js"],"names":["React","PropTypes","BaseReactComponent","Form","FormElement","FormSubmitButton","FormValidator","SelectControl","CustomModal","Button","CustomerFilterModal","constructor","props","onSubmit","handleClearFilter","console","log","setState","oem","dealer","status","state","componentDidMount","render","show","handleClose","linkState","validate","isRequired","message","type","settings","placeholder","options","value","label","multiple","searchable","onChangeCallback","onBlur","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  BaseReactComponent, Form, FormElement, FormSubmitButton, FormValidator, SelectControl\n} from '../../utils/form';\nimport { CustomModal } from \"../common\";\nimport { Button } from 'react-bootstrap';\n\nclass CustomerFilterModal extends BaseReactComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      oem: \"\",\n      dealer: \"\",\n      status: \"\",\n    }\n  }\n  componentDidMount() { }\n\n  onSubmit = () => {\n\n  }\n\n  handleClearFilter = () => {\n    console.log('Hey');\n    this.setState({\n      oem: \"\",\n      dealer: \"\",\n      status: \"\",\n    })\n  }\n  render() {\n    return (\n      <CustomModal\n        show={this.props.show}\n        onHide={this.props.handleClose}\n        title={\"Filters\"}\n      >\n\n        <Form onValidSubmit={this.onSubmit}>\n          <div className='modal-wrapper'>\n            <FormElement\n              valueLink={this.linkState(this, \"oem\")}\n              label=\"OEM\"\n              required\n              validations={[\n                {\n                  validate: FormValidator.isRequired,\n                  message: \"Field cannot be empty\"\n                }\n              ]}\n              control={{\n                type: SelectControl,\n                settings: {\n                  placeholder: \"Select OEM\",\n                  options: [\n                    { value: 1, label: \"Ola\" },\n                    { value: 2, label: \"Uber\" },\n                    { value: 3, label: \"Delhi\" },\n                  ],\n                  multiple: false,\n                  searchable: true,\n                  onChangeCallback: (onBlur) => {\n                    onBlur(this.state.oem);\n                  }\n                }\n              }}\n            />\n            {\n              this.state.oem &&\n              <>\n                <FormElement\n                  valueLink={this.linkState(this, \"dealer\")}\n                  label=\"Dealer\"\n                  required\n                  validations={[\n                    {\n                      validate: FormValidator.isRequired,\n                      message: \"Field cannot be empty\"\n                    }\n                  ]}\n                  control={{\n                    type: SelectControl,\n                    settings: {\n                      placeholder: \"Select Dealer\",\n                      options: [\n                        { value: 1, label: \"A\" },\n                        { value: 2, label: \"B\" },\n                        { value: 3, label: \"C\" },\n                      ],\n                      multiple: false,\n                      searchable: true,\n                      onChangeCallback: (onBlur) => {\n                        onBlur(this.state.dealer);\n                      }\n                    }\n                  }}\n                />\n                <FormElement\n                  valueLink={this.linkState(this, \"status\")}\n                  label=\"Status\"\n                  required\n                  validations={[\n                    {\n                      validate: FormValidator.isRequired,\n                      message: \"Field cannot be empty\"\n                    }\n                  ]}\n                  control={{\n                    type: SelectControl,\n                    settings: {\n                      placeholder: \"Select Status\",\n                      options: [\n                        { value: 1, label: \"Active\" },\n                        { value: 2, label: \"Inactive\" },\n                        { value: 3, label: \"Processing\" },\n                      ],\n                      multiple: false,\n                      searchable: true,\n                      onChangeCallback: (onBlur) => {\n                        onBlur(this.state.status);\n                      }\n                    }\n                  }}\n                />\n              </>\n            }\n          </div>\n          <div className=\"submit-wrapper\">\n            <Button className={`btn clear-btn ${!this.state.oem && \"inactive-state\"}`} onClick={this.state.oem && this.handleClearFilter}>Clear All</Button>\n            <FormSubmitButton customClass=\"btn black-btn\">Apply Filter</FormSubmitButton>\n          </div>\n        </Form>\n      </CustomModal>\n    )\n  }\n}\n\nCustomerFilterModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\n\nexport default CustomerFilterModal;"]},"metadata":{},"sourceType":"module"}