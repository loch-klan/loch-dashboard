{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/app/bikeModel/BikeModel.js\";\nimport React, { Component } from \"react\"; // import PropTypes from 'prop-types';\n\nimport { connect } from \"react-redux\";\nimport CustomTable from \"../../utils/commonComponent/CustomTable\";\nimport { PermissionList } from \"../../utils/Constant\";\nimport { getAssignedPermission, replaceHistory } from \"../../utils/ReusableFunctions\";\nimport { ComponentHeader } from \"../common\";\nimport ActionDropdown from \"../common/_utils/ActionDropdown\";\nimport { getAllBikeModelsApi } from \"./Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass BikeModel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFilter = () => {\n      this.setState({\n        showFilter: !this.state.showFilter\n      });\n    };\n\n    this.handleAddBikeModel = () => {\n      this.props.history.push(\"/master/bike-models/add-bike-model\");\n    };\n\n    this.clearSearch = () => {\n      this.onChangeMethod({\n        search: \"\"\n      });\n    };\n\n    this.onChangeMethod = value => {\n      this.setState({\n        searchText: value.search,\n        page: 1\n      }, () => {\n        replaceHistory(this.props.history, 1, value.search);\n      });\n    };\n\n    this.handleEditBikeModel = rowData => {\n      this.props.history.push({\n        pathname: `/master/bike-models/edit-bike-model/`,\n        state: {\n          editData: rowData\n        }\n      });\n    };\n\n    const search = props.location.search;\n    const params = new URLSearchParams(search);\n    const page = params.get(\"p\");\n    const searchText = params.get(\"search\");\n    this.state = {\n      bikeModels: [],\n      page: page ? parseInt(page, 10) : 1,\n      totalPages: 1,\n      searchText,\n      searchKey: \"SEARCH_BY_TEXT\",\n      showFilter: false\n    };\n  }\n\n  componentDidMount() {\n    getAllBikeModelsApi(this);\n    this.props.history.replace({\n      search: `?p=${this.state.page}`\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevParams = new URLSearchParams(prevProps.location.search);\n    const prevPage = parseInt(prevParams.get(\"p\"), 10) || 1;\n    const prevSearchText = prevParams.get(\"search\");\n    const params = new URLSearchParams(this.props.location.search);\n    const page = parseInt(params.get(\"p\"), 10) || 1;\n    const searchText = params.get(\"search\");\n\n    if (prevPage !== page || prevSearchText !== searchText) {\n      this.setState({\n        page,\n        searchText\n      }, () => {\n        getAllBikeModelsApi(this);\n      });\n    }\n  }\n\n  render() {\n    const {\n      bikeModels\n    } = this.state;\n    const permissionList = getAssignedPermission();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ComponentHeader, {\n        backArrowBtn: false,\n        breadcrumb: true,\n        currentPage: \"Bike Models\",\n        title: \"Bike Models\",\n        isFilter: false,\n        isPrimaryBtn: this.handleAddBikeModel,\n        primaryBtnText: permissionList.includes(PermissionList.ADD_UPDATE_VEHICLE_MODEL) ? \"+ Add Bike Model\" : \"\",\n        isSearch: true,\n        placeholder: \"Search Bike Model\",\n        onChangeMethod: this.onChangeMethod,\n        clearSearch: this.clearSearch,\n        searchValue: {\n          search: this.state.searchText\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-table-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(CustomTable, {\n          tableData: bikeModels,\n          columnList: [{\n            coumnWidth: 250,\n            labelName: \"Model Name\",\n            dataKey: \"modelName\",\n            className: \"red-hat-display-bold\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"modelName\") {\n                return rowData.modelName;\n              }\n            }\n          }, {\n            coumnWidth: 300,\n            labelName: \"Manufacturer Name\",\n            dataKey: \"modelCompany\",\n            className: \"\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"modelCompany\") {\n                return rowData.modelCompany;\n              }\n            }\n          }, {\n            coumnWidth: 250,\n            labelName: \"No of Batteries\",\n            dataKey: \"noOfBatteries\",\n            className: \"\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"noOfBatteries\") {\n                return rowData.noOfBatteries;\n              }\n            }\n          }, {\n            coumnWidth: 200,\n            labelName: \"Tax (in percentage)\",\n            dataKey: \"taxPercentage\",\n            className: \"\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"taxPercentage\") {\n                return rowData.taxPercentage;\n              }\n            }\n          }, {\n            coumnWidth: 250,\n            labelName: \"Tax Code\",\n            dataKey: \"taxCode\",\n            className: \"\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"taxCode\") {\n                return rowData.taxCode;\n              }\n            }\n          }, {\n            coumnWidth: 50,\n            labelName: \"\",\n            dataKey: \"options\",\n            className: \"options-column\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"options\") {\n                const menuItem = [{\n                  title: \"View Details\",\n                  type: \"\",\n                  linkUrl: `/master/bike-models/view-details/${rowData.id}`\n                }];\n\n                if (permissionList.includes(PermissionList.ADD_UPDATE_VEHICLE_MODEL)) {\n                  menuItem.push({\n                    title: \"Edit\",\n                    type: \"event\",\n                    handleClick: () => this.handleEditBikeModel(rowData)\n                  });\n                }\n\n                return /*#__PURE__*/_jsxDEV(ActionDropdown, {\n                  menuItem: menuItem\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 28\n                }, this);\n              }\n            }\n          }] // For Pagination\n          ,\n          history: this.props.history,\n          location: this.props.location,\n          totalPages: this.state.totalPages,\n          currentPage: this.state.page - 1 // because of 0 based indexing\n          ,\n          message: \"Bike models not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  bikeModelState: state.BikeModelState\n});\n\nconst mapDispatchToProps = {// getPosts: fetchPosts\n}; // Customers.propTypes = {\n//   // getPosts: PropTypes.func\n// };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BikeModel);","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/bikeModel/BikeModel.js"],"names":["React","Component","connect","CustomTable","PermissionList","getAssignedPermission","replaceHistory","ComponentHeader","ActionDropdown","getAllBikeModelsApi","BikeModel","constructor","props","handleFilter","setState","showFilter","state","handleAddBikeModel","history","push","clearSearch","onChangeMethod","search","value","searchText","page","handleEditBikeModel","rowData","pathname","editData","location","params","URLSearchParams","get","bikeModels","parseInt","totalPages","searchKey","componentDidMount","replace","componentDidUpdate","prevProps","prevState","prevParams","prevPage","prevSearchText","render","permissionList","includes","ADD_UPDATE_VEHICLE_MODEL","coumnWidth","labelName","dataKey","className","isCell","cell","modelName","modelCompany","noOfBatteries","taxPercentage","taxCode","menuItem","title","type","linkUrl","id","handleClick","mapStateToProps","bikeModelState","BikeModelState","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport CustomTable from \"../../utils/commonComponent/CustomTable\";\nimport { PermissionList } from \"../../utils/Constant\";\nimport {\n  getAssignedPermission,\n  replaceHistory,\n} from \"../../utils/ReusableFunctions\";\nimport { ComponentHeader } from \"../common\";\nimport ActionDropdown from \"../common/_utils/ActionDropdown\";\nimport { getAllBikeModelsApi } from \"./Api\";\n\nclass BikeModel extends Component {\n  constructor(props) {\n    super(props);\n    const search = props.location.search;\n    const params = new URLSearchParams(search);\n    const page = params.get(\"p\");\n    const searchText = params.get(\"search\");\n    this.state = {\n      bikeModels: [],\n      page: page ? parseInt(page, 10) : 1,\n      totalPages: 1,\n      searchText,\n      searchKey: \"SEARCH_BY_TEXT\",\n      showFilter: false,\n    };\n  }\n\n  componentDidMount() {\n    getAllBikeModelsApi(this);\n    this.props.history.replace({\n      search: `?p=${this.state.page}`\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevParams = new URLSearchParams(prevProps.location.search);\n    const prevPage = parseInt(prevParams.get(\"p\"), 10) || 1;\n    const prevSearchText = prevParams.get(\"search\");\n\n    const params = new URLSearchParams(this.props.location.search);\n    const page = parseInt(params.get(\"p\"), 10) || 1;\n    const searchText = params.get(\"search\");\n\n    if (prevPage !== page || prevSearchText !== searchText) {\n      this.setState({ page, searchText }, () => {\n        getAllBikeModelsApi(this);\n      });\n    }\n  }\n\n  handleFilter = () => {\n    this.setState({\n      showFilter: !this.state.showFilter,\n    });\n  };\n\n  handleAddBikeModel = () => {\n    this.props.history.push(\"/master/bike-models/add-bike-model\");\n  };\n\n  clearSearch = () => {\n    this.onChangeMethod({ search: \"\" });\n  };\n\n  onChangeMethod = (value) => {\n    this.setState({ searchText: value.search, page: 1 }, () => {\n      replaceHistory(this.props.history, 1, value.search);\n    });\n  };\n\n  handleEditBikeModel = (rowData) => {\n    this.props.history.push({\n      pathname: `/master/bike-models/edit-bike-model/`,\n      state: { editData: rowData },\n    });\n  };\n\n  render() {\n    const { bikeModels } = this.state;\n    const permissionList = getAssignedPermission();\n    return (\n      <>\n        <ComponentHeader\n          backArrowBtn={false}\n          breadcrumb={true}\n          currentPage={\"Bike Models\"}\n          title={\"Bike Models\"}\n          isFilter={false}\n          isPrimaryBtn={this.handleAddBikeModel}\n          primaryBtnText={\n            permissionList.includes(PermissionList.ADD_UPDATE_VEHICLE_MODEL)\n              ? \"+ Add Bike Model\"\n              : \"\"\n          }\n          isSearch={true}\n          placeholder={\"Search Bike Model\"}\n          onChangeMethod={this.onChangeMethod}\n          clearSearch={this.clearSearch}\n          searchValue={{ search: this.state.searchText }}\n        />\n        <div className=\"custom-table-wrapper\">\n          <CustomTable\n            tableData={bikeModels}\n            columnList={[\n              {\n                coumnWidth: 250,\n                labelName: \"Model Name\",\n                dataKey: \"modelName\",\n                className: \"red-hat-display-bold\",\n                isCell: true,\n                cell: (rowData, dataKey) => {\n                  if (dataKey === \"modelName\") {\n                    return rowData.modelName;\n                  }\n                },\n              },\n              {\n                coumnWidth: 300,\n                labelName: \"Manufacturer Name\",\n                dataKey: \"modelCompany\",\n                className: \"\",\n                isCell: true,\n                cell: (rowData, dataKey) => {\n                  if (dataKey === \"modelCompany\") {\n                    return rowData.modelCompany;\n                  }\n                },\n              },\n              {\n                coumnWidth: 250,\n                labelName: \"No of Batteries\",\n                dataKey: \"noOfBatteries\",\n                className: \"\",\n                isCell: true,\n                cell: (rowData, dataKey) => {\n                  if (dataKey === \"noOfBatteries\") {\n                    return rowData.noOfBatteries;\n                  }\n                },\n              },\n              {\n                coumnWidth: 200,\n                labelName: \"Tax (in percentage)\",\n                dataKey: \"taxPercentage\",\n                className: \"\",\n                isCell: true,\n                cell: (rowData, dataKey) => {\n                  if (dataKey === \"taxPercentage\") {\n                    return rowData.taxPercentage;\n                  }\n                },\n              },\n              {\n                coumnWidth: 250,\n                labelName: \"Tax Code\",\n                dataKey: \"taxCode\",\n                className: \"\",\n                isCell: true,\n                cell: (rowData, dataKey) => {\n                  if (dataKey === \"taxCode\") {\n                    return rowData.taxCode;\n                  }\n                },\n              },\n              {\n                coumnWidth: 50,\n                labelName: \"\",\n                dataKey: \"options\",\n                className: \"options-column\",\n                isCell: true,\n                cell: (rowData, dataKey) => {\n                  if (dataKey === \"options\") {\n                    const menuItem = [{\n                      title: \"View Details\",\n                      type: \"\",\n                      linkUrl: `/master/bike-models/view-details/${rowData.id}`,\n                    }];\n                    if (permissionList.includes(PermissionList.ADD_UPDATE_VEHICLE_MODEL)){\n                      menuItem.push({\n                        title: \"Edit\",\n                        type: \"event\",\n                        handleClick: () => this.handleEditBikeModel(rowData),\n                      })\n                    }\n                    return <ActionDropdown menuItem={menuItem} />\n                  }\n                },\n              },\n            ]}\n            // For Pagination\n            history={this.props.history}\n            location={this.props.location}\n            totalPages={this.state.totalPages}\n            currentPage={this.state.page - 1} // because of 0 based indexing\n            message={\"Bike models not found\"}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  bikeModelState: state.BikeModelState,\n});\nconst mapDispatchToProps = {\n  // getPosts: fetchPosts\n};\n// Customers.propTypes = {\n//   // getPosts: PropTypes.func\n// };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BikeModel);\n"]},"metadata":{},"sourceType":"module"}