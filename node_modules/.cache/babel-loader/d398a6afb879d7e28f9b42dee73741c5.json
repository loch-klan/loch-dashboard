{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/utils/commonComponent/CustomTable.js\";\nimport React from 'react';\nimport { AutoSizer, Table } from \"react-virtualized\";\nimport { Column } from \"react-virtualized\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Image } from \"react-bootstrap\";\nimport notFoundDefault from '../../assets/images/empty-table.png';\nimport Pagination from './Pagination';\nimport FormElement from '../form/FormElement';\nimport BaseReactComponent from '../form/BaseReactComponent';\nimport FormValidator from '../form/FormValidator';\nimport SelectControl from \"../form/SelectControl\";\nimport Form from '../form/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CustomTable extends BaseReactComponent {\n  constructor(props) {\n    super(props);\n\n    this.onValidSubmit = () => {};\n\n    this.state = {\n      pageSize: 10\n    };\n  }\n\n  render() {\n    const {\n      istopPagination = false,\n      tableData,\n      className = \"\",\n      columnList = [],\n      notFoundImage = notFoundDefault,\n      moduleName,\n      message = \"\",\n      isButton,\n      buttonText,\n      linkUrl,\n      linkText,\n      currentPage = 1,\n      totalPages,\n      history,\n      location,\n      pageSize = false,\n      pageSizeOptions = [],\n      handlePageSize = \"\"\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-navigation\",\n        children: [istopPagination && tableData && tableData.length >= 1 && totalPages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n          history: history,\n          location: location,\n          page: currentPage,\n          pageCount: totalPages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), pageSize && /*#__PURE__*/_jsxDEV(Form, {\n          onValidSubmit: this.onValidSubmit,\n          ref: el => this.form = el,\n          children: /*#__PURE__*/_jsxDEV(FormElement, {\n            valueLink: this.linkState(this, \"pageSize\"),\n            label: \"Page Size\",\n            hint: {\n              title: \"Title Custom\",\n              description: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" Custom Hint Bro! \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 32\n              }, this)\n            },\n            validations: [{\n              validate: FormValidator.isRequired,\n              message: \"Field cannot be empty\"\n            }],\n            control: {\n              type: SelectControl,\n              settings: {\n                options: pageSizeOptions,\n                multiple: false,\n                searchable: true,\n                // menuIsOpen: true,\n                onChangeCallback: onBlur => {\n                  onBlur(this.state.pageSize);\n                  handlePageSize(this.state.pageSize);\n                  console.log('Hello world!');\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), tableData && tableData.length > 0 ? /*#__PURE__*/_jsxDEV(AutoSizer, {\n        disableHeight: true,\n        children: _ref => {\n          let {\n            width\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Table, {\n            width: width,\n            height: 50 * (tableData.length + 1) - 10,\n            headerHeight: 50,\n            rowHeight: 50,\n            rowCount: tableData.length,\n            rowGetter: _ref2 => {\n              let {\n                index\n              } = _ref2;\n              return tableData[index];\n            },\n            className: `custom-table ${className}`,\n            children: columnList && columnList.length > 0 && columnList.map((item, key) => {\n              return /*#__PURE__*/_jsxDEV(Column, {\n                width: item.coumnWidth,\n                className: item.className,\n                label: item.labelName,\n                dataKey: item.dataKey,\n                cellRenderer: _ref3 => {\n                  let {\n                    rowData\n                  } = _ref3;\n                  return item.cell(rowData, item.dataKey);\n                }\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"not-found-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: notFoundImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"red-hat-display-medium f-s-16 black-404\",\n          children: [\" \", moduleName ? \"No \" + moduleName + \" Found\" : message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), isButton && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"primary-btn\",\n          onClick: isButton,\n          children: buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), linkUrl && /*#__PURE__*/_jsxDEV(Link, {\n          className: \"primary-btn\",\n          to: linkUrl,\n          children: linkText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), tableData && tableData.length >= 1 && totalPages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n        history: history,\n        location: location,\n        page: currentPage + 1,\n        pageCount: totalPages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CustomTable;","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/utils/commonComponent/CustomTable.js"],"names":["React","AutoSizer","Table","Column","Link","Button","Image","notFoundDefault","Pagination","FormElement","BaseReactComponent","FormValidator","SelectControl","Form","CustomTable","constructor","props","onValidSubmit","state","pageSize","render","istopPagination","tableData","className","columnList","notFoundImage","moduleName","message","isButton","buttonText","linkUrl","linkText","currentPage","totalPages","history","location","pageSizeOptions","handlePageSize","length","el","form","linkState","title","description","validate","isRequired","type","settings","options","multiple","searchable","onChangeCallback","onBlur","console","log","width","index","map","item","key","coumnWidth","labelName","dataKey","rowData","cell"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { AutoSizer, Table } from \"react-virtualized\";\nimport { Column } from \"react-virtualized\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Image } from \"react-bootstrap\";\nimport notFoundDefault from '../../assets/images/empty-table.png';\nimport Pagination from './Pagination';\nimport FormElement from '../form/FormElement';\nimport BaseReactComponent from '../form/BaseReactComponent';\nimport FormValidator from '../form/FormValidator';\nimport SelectControl from \"../form/SelectControl\";\nimport Form from '../form/Form';\n\n\nclass CustomTable extends BaseReactComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageSize: 10,\n    }\n  }\n  onValidSubmit = () => {\n\n  }\n  render() {\n    const { istopPagination = false, tableData, className = \"\", columnList = [], notFoundImage = notFoundDefault, moduleName, message = \"\", isButton, buttonText, linkUrl, linkText, currentPage = 1, totalPages, history, location, pageSize = false, pageSizeOptions = [], handlePageSize = \"\" } = this.props;\n    return (\n      <div className=\"table-wrapper\">\n        <div className=\"header-navigation\">\n          {\n            istopPagination && tableData && tableData.length >= 1 && totalPages > 1 &&\n            <Pagination\n              history={history}\n              location={location}\n              page={currentPage}\n              pageCount={totalPages}\n            />\n          }\n          {\n            pageSize &&\n            <Form onValidSubmit={this.onValidSubmit} ref={el => this.form = el}>\n              <FormElement\n                valueLink={this.linkState(this, \"pageSize\")}\n                label=\"Page Size\"\n                hint={{\n                  title: \"Title Custom\",\n                  description: <span> Custom Hint Bro! </span>\n                }}\n                validations={[\n                  {\n                    validate: FormValidator.isRequired,\n                    message: \"Field cannot be empty\"\n                  }\n                ]}\n                control={{\n                  type: SelectControl,\n                  settings: {\n                    options: pageSizeOptions,\n                    multiple: false,\n                    searchable: true,\n                    // menuIsOpen: true,\n                    onChangeCallback: (onBlur) => {\n                      onBlur(this.state.pageSize);\n                      handlePageSize(this.state.pageSize);\n                      console.log('Hello world!');\n                    }\n                  }\n                }}\n              />\n            </Form>\n          }\n        </div>\n        {\n          tableData && tableData.length > 0\n            ?\n            <AutoSizer disableHeight>\n              {({ width }) => (\n                <Table\n                  width={width}\n                  height={(50 * (tableData.length + 1)) - 10}\n                  headerHeight={50}\n                  rowHeight={50}\n                  rowCount={tableData.length}\n                  rowGetter={({ index }) => tableData[index]}\n                  className={`custom-table ${className}`}\n                >\n                  {\n                    columnList && columnList.length > 0 &&\n                    columnList.map((item, key) => {\n                      return (\n                        <Column\n                          key={key}\n                          width={item.coumnWidth}\n                          className={item.className}\n                          label={item.labelName}\n                          dataKey={item.dataKey}\n                          cellRenderer={({ rowData }) => { return item.cell(rowData, item.dataKey) }}\n                        />\n                      )\n                    })\n                  }\n                </Table>\n              )}\n            </AutoSizer>\n            :\n            <div className=\"not-found-wrapper\">\n              <Image src={notFoundImage} />\n              <p className=\"red-hat-display-medium f-s-16 black-404\"> {moduleName ? \"No \" + moduleName + \" Found\" : message}</p>\n              {\n                isButton &&\n                <Button\n                  className=\"primary-btn\"\n                  onClick={isButton}\n                >\n                  {buttonText}\n                </Button>\n              }\n              {\n                linkUrl &&\n                <Link className=\"primary-btn\" to={linkUrl}>\n                  {linkText}\n                </Link>\n              }\n            </div>\n        }\n        {\n          tableData && tableData.length >= 1 && totalPages > 1 &&\n          <Pagination\n            history={history}\n            location={location}\n            page={currentPage + 1}\n            pageCount={totalPages}\n          />\n        }\n      </div>\n    );\n  };\n}\n\nexport default CustomTable;"]},"metadata":{},"sourceType":"module"}