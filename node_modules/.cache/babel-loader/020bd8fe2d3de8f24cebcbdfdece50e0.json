{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/app/franchise/_utils/VehicleAllocationModal.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { BaseReactComponent, Form, FormElement, FormSubmitButton, FormValidator, SelectControl } from '../../../utils/form';\nimport { CustomModal } from \"../../common\"; // import { updateVehicleRegistrationApi } from '../../vehicles/Api';\n\nimport { getAllVehiclesApi, assignVehiclesToFranchiseApi, assignVehiclesToFranchiseLocationApi } from '../../vehicles/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass VehicleAllocationModal extends BaseReactComponent {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = () => {\n      const data = new URLSearchParams();\n      data.append('vehicle_ids', JSON.stringify(this.state.vehicleIds));\n\n      if (this.props.isFranchiseLocation) {\n        data.append('franchise_location_id', this.props.locationId);\n        assignVehiclesToFranchiseLocationApi(data, this.props.handleClose, this.props.ctx);\n      } else {\n        data.append('franchise_id', this.props.franchiseId);\n        assignVehiclesToFranchiseApi(data, this.props.handleClose, this.props.ctx);\n      }\n    };\n\n    this.state = {\n      regNo: \"\",\n      vehicleData: \"\",\n      isApiCall: false,\n      bikeOptions: [],\n      vehicleIds: \"\",\n      page: 1,\n      totalPages: 1,\n      // searchText: \"\",\n      // searchKey: 'SEARCH_BY_ACCOUNT_ID',\n      conditions: props.isFranchiseLocation ? [{\n        \"key\": \"SEARCH_BY_ACCOUNT_ID\",\n        \"value\": props.franchiseId\n      }, {\n        \"key\": \"SEARCH_BY_FRANCHISE_LOCATION_ID\",\n        \"value\": null\n      }] : [{\n        \"key\": \"SEARCH_BY_ACCOUNT_ID\",\n        \"value\": []\n      }]\n    };\n  }\n\n  componentDidMount() {\n    getAllVehiclesApi(this, true);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(CustomModal, {\n      show: this.props.show,\n      onHide: () => this.props.handleClose(),\n      title: \"Allocate Vehicle\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onValidSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(FormElement, {\n            valueLink: this.linkState(this, \"vehicleIds\"),\n            label: \"Vechicle\",\n            required: true,\n            validations: [{\n              validate: FormValidator.isRequired,\n              message: \"Vechicle name cannot be empty\"\n            }],\n            control: {\n              type: SelectControl,\n              settings: {\n                placeholder: \"Select Vehicle\",\n                options: this.state.bikeOptions,\n                multiple: true,\n                searchable: true,\n                onChangeCallback: () => {}\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-wrapper\",\n          style: {\n            justifyContent: 'right'\n          },\n          children: /*#__PURE__*/_jsxDEV(FormSubmitButton, {\n            customClass: `btn black-btn ${!this.state.vehicleIds && \"inactive-btn\"}`,\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nVehicleAllocationModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\nexport default VehicleAllocationModal;","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/franchise/_utils/VehicleAllocationModal.js"],"names":["React","PropTypes","BaseReactComponent","Form","FormElement","FormSubmitButton","FormValidator","SelectControl","CustomModal","getAllVehiclesApi","assignVehiclesToFranchiseApi","assignVehiclesToFranchiseLocationApi","VehicleAllocationModal","constructor","props","onSubmit","data","URLSearchParams","append","JSON","stringify","state","vehicleIds","isFranchiseLocation","locationId","handleClose","ctx","franchiseId","regNo","vehicleData","isApiCall","bikeOptions","page","totalPages","conditions","componentDidMount","render","show","linkState","validate","isRequired","message","type","settings","placeholder","options","multiple","searchable","onChangeCallback","justifyContent","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  BaseReactComponent, Form, FormElement, FormSubmitButton, FormValidator, SelectControl\n} from '../../../utils/form';\nimport { CustomModal } from \"../../common\";\n// import { updateVehicleRegistrationApi } from '../../vehicles/Api';\nimport { getAllVehiclesApi, assignVehiclesToFranchiseApi, assignVehiclesToFranchiseLocationApi } from '../../vehicles/Api';\n\nclass VehicleAllocationModal extends BaseReactComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      regNo: \"\",\n      vehicleData: \"\",\n      isApiCall: false,\n      bikeOptions: [],\n      vehicleIds: \"\",\n      page: 1,\n      totalPages: 1,\n      // searchText: \"\",\n      // searchKey: 'SEARCH_BY_ACCOUNT_ID',\n      conditions: props.isFranchiseLocation\n                  ?\n                  [\n                    {\"key\": \"SEARCH_BY_ACCOUNT_ID\", \"value\": props.franchiseId},\n                    {\"key\": \"SEARCH_BY_FRANCHISE_LOCATION_ID\", \"value\": null},\n                  ]\n                  :\n                  [{\"key\": \"SEARCH_BY_ACCOUNT_ID\", \"value\": []}],\n    }\n  }\n  componentDidMount() {\n    getAllVehiclesApi(this, true);\n  }\n\n  onSubmit = () => {\n    const data = new URLSearchParams();\n    data.append('vehicle_ids', JSON.stringify(this.state.vehicleIds));\n\n    if(this.props.isFranchiseLocation){\n      data.append('franchise_location_id', this.props.locationId);\n      assignVehiclesToFranchiseLocationApi(data, this.props.handleClose, this.props.ctx)\n    } else {\n      data.append('franchise_id', this.props.franchiseId)\n      assignVehiclesToFranchiseApi(data, this.props.handleClose, this.props.ctx)\n    }\n\n  }\n\n  render() {\n    return (\n      <CustomModal\n        show={this.props.show}\n        onHide={() => this.props.handleClose()}\n        title={\"Allocate Vehicle\"}\n      >\n        <Form onValidSubmit={this.onSubmit}>\n          <div className='modal-wrapper'>\n            <FormElement\n              valueLink={this.linkState(this, \"vehicleIds\")}\n              label=\"Vechicle\"\n              required\n              validations={[\n                {\n                  validate: FormValidator.isRequired,\n                  message: \"Vechicle name cannot be empty\",\n                },\n              ]}\n              control={{\n                type: SelectControl,\n                settings: {\n                  placeholder: \"Select Vehicle\",\n                  options: this.state.bikeOptions,\n                  multiple: true,\n                  searchable: true,\n                  onChangeCallback: () => {\n                  },\n                },\n              }}\n            />\n          </div>\n          <div className=\"submit-wrapper\" style={{ justifyContent: 'right' }}>\n            <FormSubmitButton customClass={`btn black-btn ${!this.state.vehicleIds && \"inactive-btn\"}`}>Done</FormSubmitButton>\n          </div>\n        </Form>\n\n      </CustomModal>\n    )\n  }\n}\n\nVehicleAllocationModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\n\nexport default VehicleAllocationModal;"]},"metadata":{},"sourceType":"module"}