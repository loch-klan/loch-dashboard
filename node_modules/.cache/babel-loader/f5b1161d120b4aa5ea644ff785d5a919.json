{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/app/settlement/Settlement.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { ComponentHeader } from \"../common\";\nimport { Grid, Image, Row, Col, Button, Tab, Tabs } from \"react-bootstrap\";\nimport CustomTable from \"../../utils/commonComponent/CustomTable\";\nimport SettlePaymentModal from \"./SettlePayment\";\nimport settleIcon from \"../../assets/images/icons/settlement-icon.svg\";\nimport { getSettlementReportApi } from \"./Api\";\nimport { OrderStatus } from \"../../utils/Constant\";\nimport moment from \"moment\";\nimport { AccountType, PermissionList, START_PAGE } from \"../../utils/Constant\";\nimport ActionDropdown from \"../common/_utils/ActionDropdown\";\nimport { getAssignedPermission, replaceHistory } from \"../../utils/ReusableFunctions\";\nimport { getAllFranchiseApi } from \"../franchise/Api\";\nimport notFoundImage from \"../../assets/images/empty-table.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Settlement extends Component {\n  constructor(props) {\n    super(props);\n\n    this.filterSearch = (fromDate, toDate, franchiseId) => {\n      this.setState({\n        fromDate,\n        toDate,\n        franchiseId\n      });\n      this.getSettlementReport(this.state.selectedTab, fromDate, toDate, franchiseId);\n    };\n\n    this.getSettlementReport = (selectedTab, fromDate, toDate, franchiseId) => {\n      getSettlementReportApi(this, selectedTab, fromDate, toDate, franchiseId);\n    };\n\n    this.setKey = k => {\n      this.setState({\n        selectedTab: k,\n        page: 1,\n        conditions: [{\n          key: k === \"default\" ? \"Settled\" : \"Unsettled\",\n          value: k === \"default\" ? true : parseInt(k)\n        }]\n      }, () => {\n        const data2 = new URLSearchParams();\n        this.getSettlementReport(this.state.selectedTab, this.state.fromDate, this.state.toDate, this.state.franchiseId);\n      });\n      this.props.history.replace({\n        search: `?tab=${k}&p=1`\n      });\n    };\n\n    this.handleSettlementPayModal = () => {\n      this.setState({\n        showSettlePaymentModal: !this.state.showSettlePaymentModal\n      });\n    };\n\n    this.showSettledData = (pricingData, permissionList) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-table-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(CustomTable, {\n          tableData: pricingData,\n          columnList: [{\n            coumnWidth: 280,\n            labelName: \"Settlement ID\",\n            dataKey: \"id\",\n            className: \"red-hat-display-bold\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"id\") {\n                return rowData.id;\n              }\n            }\n          }, {\n            coumnWidth: 250,\n            labelName: \"Amount (₹)\",\n            dataKey: \"final_amount\",\n            className: \"\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"final_amount\") {\n                return rowData.final_amount;\n              }\n            }\n          }, {\n            coumnWidth: 300,\n            labelName: \"End Time\",\n            dataKey: \"settled_on\",\n            className: \"\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"settled_on\") {\n                return moment(rowData.settled_on).format(\"LLL\");\n              }\n            }\n          }, {\n            coumnWidth: 350,\n            labelName: \"Transaction Reference ID\",\n            dataKey: \"reference_id\",\n            className: \"\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"reference_id\") {\n                return rowData.reference_id;\n              }\n            }\n          }] // For Pagination\n          //   history={this.props.history}\n          //   location={this.props.location}\n          //   totalPages={this.state.totalPages}\n          //   currentPage={this.state.page - 1} // because of 0 based indexing\n          //   message={\"Pricing list is empty\"}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.showTable = (pricingData, permissionList) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-table-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(CustomTable, {\n          tableData: pricingData,\n          columnList: [{\n            coumnWidth: 150,\n            labelName: \"Order Id\",\n            dataKey: \"code\",\n            className: \"red-hat-display-bold\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"code\") {\n                return rowData.code;\n              }\n            }\n          }, {\n            coumnWidth: 150,\n            labelName: \"Vehicle\",\n            dataKey: \"status\",\n            className: \"\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"status\") {\n                var _rowData$vehicle_inve, _rowData$vehicle_inve2;\n\n                return (rowData === null || rowData === void 0 ? void 0 : (_rowData$vehicle_inve = rowData.vehicle_inventory_details) === null || _rowData$vehicle_inve === void 0 ? void 0 : _rowData$vehicle_inve.name) + \"-\" + (rowData === null || rowData === void 0 ? void 0 : (_rowData$vehicle_inve2 = rowData.vehicle_inventory_details) === null || _rowData$vehicle_inve2 === void 0 ? void 0 : _rowData$vehicle_inve2.registration_no);\n              }\n            }\n          }, {\n            coumnWidth: 250,\n            labelName: \"Start Time\",\n            dataKey: \"start_datetime\",\n            className: \"\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"start_datetime\") {\n                return moment(rowData.start_datetime).format(\"LLL\");\n              }\n            }\n          }, {\n            coumnWidth: 250,\n            labelName: \"End Time\",\n            dataKey: \"end_datetime\",\n            className: \"\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"end_datetime\") {\n                return moment(rowData.end_datetime).format(\"LLL\");\n              }\n            }\n          }, // {\n          //   coumnWidth: 300,\n          //   labelName: \"Franchisee Name\",\n          //   dataKey: \"end_datetime\",\n          //   className: \"\",\n          //   isCell: true,\n          //   cell: (rowData, dataKey) => {\n          //     if (dataKey === \"end_datetime\") {\n          //       return moment(rowData.end_datetime).format('LLL')\n          //     }\n          //   }\n          // },\n          {\n            coumnWidth: 150,\n            labelName: \"Total Fare (₹)\",\n            dataKey: \"total_amount\",\n            className: \"red-hat-display-bold\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"total_amount\") {\n                return rowData.total_amount;\n              }\n            }\n          }, {\n            coumnWidth: 150,\n            labelName: \"Status\",\n            dataKey: \"status\",\n            className: \"\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"status\") {\n                return OrderStatus.getText(rowData.status);\n              }\n            }\n          } // {\n          //     coumnWidth: 50,\n          //     labelName: \"\",\n          //     dataKey: \"options\",\n          //     className: \"options-column\",\n          //     isCell: true,\n          //     cell: (rowData, dataKey) => {\n          //         if (dataKey === \"options\") {\n          //             const menuItem = [];\n          //             menuItem.push({\n          //                 title: \"View Details\",\n          //                 type: \"\",\n          //                 linkUrl: `booking-management/view-booking/${rowData.id}`,\n          //             })\n          //             if (permissionList.includes(PermissionList.ADD_UPDATE_TELEMATICS_INVENTORY)) {\n          //                 return (\n          //                     <ActionDropdown\n          //                         menuItem={menuItem}\n          //                     />\n          //                 )\n          //             }\n          //         }\n          //     }\n          // }\n          ] // For Pagination\n          //   history={this.props.history}\n          //   location={this.props.location}\n          //   totalPages={this.state.totalPages}\n          //   currentPage={this.state.page - 1} // because of 0 based indexing\n          ,\n          message: \"No Data Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this);\n    };\n\n    const userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n    this.state = {\n      settlementReport: [],\n      selectedTab: \"30\",\n      showSettlePaymentModal: false,\n      userDetails,\n      isFranchise: false\n    };\n  }\n\n  componentDidMount() {\n    // this.getSettlementReport();\n    // API CALL FOR SETTLEMENT FILTER\n    if (this.state.userDetails.user_account_type !== AccountType.COMPANY) {\n      this.setState({\n        isFranchise: true\n      });\n    } else {\n      this.props.getAllFranchiseApi(this, -1);\n    }\n  }\n\n  render() {\n    const {\n      settlementData,\n      settlementReport,\n      franchiseOptionsList\n    } = this.state;\n    const permissionList = getAssignedPermission();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.state.showSettlePaymentModal && /*#__PURE__*/_jsxDEV(SettlePaymentModal, {\n        bookingId: this.state.bookingId,\n        show: this.state.showSettlePaymentModal,\n        handleClose: this.handleSettlementPayModal,\n        paybleAmount: settlementData === null || settlementData === void 0 ? void 0 : settlementData.payable_to_franchise.toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ComponentHeader, {\n        breadcrumb: true,\n        currentPage: \"Company Settlement\",\n        title: \"Settlement\",\n        isFilter: false //isPrimaryBtn={() => this.handleAddBookings()}\n        ,\n        isSearch: false,\n        placeholder: \"Search Bookings\",\n        isSettleSearch: true,\n        franchiseOptionsList: franchiseOptionsList,\n        filterSearch: this.filterSearch,\n        isFranchise: this.state.isFranchise //onChangeMethod={this.onChangeMethod}\n        //clearSearch={() => this.clearSearch(page || START_PAGE)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), settlementReport ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settlement-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"red-hat-display-bold f-s-16\",\n            children: \"Revenue & Payment Settlement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settlement-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-info b-right\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"red-hat-display-bold f-s-20\",\n                  children: [\"\\u20B9\", \" \", settlementData !== null && settlementData !== void 0 && settlementData.total_platform_amount ? ((settlementData === null || settlementData === void 0 ? void 0 : settlementData.total_franchise_amount) + (settlementData === null || settlementData === void 0 ? void 0 : settlementData.total_platform_amount)).toFixed(2) : \"0\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"red-hat-display-regular f-s-16\",\n                  children: \"Total Revenue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-info b-right\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"red-hat-display-bold f-s-20\",\n                  children: [\"\\u20B9\", \" \", settlementData ? settlementData.total_platform_amount.toFixed(2) : \"0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"red-hat-display-regular f-s-16\",\n                  children: \"Company Revenue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-info b-right\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"red-hat-display-bold f-s-20\",\n                  children: [\"\\u20B9\", \" \", settlementData ? settlementData.total_franchise_amount.toFixed(2) : \"0\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"red-hat-display-regular f-s-16\",\n                  children: \"Franchise Revenue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-info\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"red-hat-display-bold f-s-20\",\n                  children: [\"\\u20B9\", \" \", settlementData ? settlementData.payable_to_franchise.toFixed(2) : \"0\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"red-hat-display-regular f-s-16\",\n                  children: \"Payable Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this), !this.state.isFranchise && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: (settlementData === null || settlementData === void 0 ? void 0 : settlementData.payable_to_franchise) && /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn black-btn\",\n                onClick: this.handleSettlementPayModal,\n                children: \"Settle Payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settlement-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"red-hat-display-bold f-s-20\",\n            children: \"Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n            id: \"controlled-tab-example\",\n            activeKey: this.state.selectedTab,\n            onSelect: k => this.setKey(k),\n            className: \"pricing-tabs\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"30\",\n              title: \"Unsettled\",\n              children: this.showTable(settlementReport, permissionList)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"default\",\n              title: \"Settled\",\n              children: this.showSettledData(settlementReport, permissionList)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"not-found-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: notFoundImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"red-hat-display-medium f-s-16 black-404\",\n          children: [\" \", \"No Data Found\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  settlementState: state.SettlementState\n});\n\nconst mapDispatchToProps = {\n  getAllFranchiseApi\n};\nSettlement.propTypes = {// getPosts: PropTypes.func\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Settlement);","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/settlement/Settlement.js"],"names":["React","Component","PropTypes","connect","ComponentHeader","Grid","Image","Row","Col","Button","Tab","Tabs","CustomTable","SettlePaymentModal","getSettlementReportApi","OrderStatus","moment","AccountType","PermissionList","START_PAGE","ActionDropdown","getAssignedPermission","replaceHistory","getAllFranchiseApi","notFoundImage","Settlement","constructor","props","filterSearch","fromDate","toDate","franchiseId","setState","getSettlementReport","state","selectedTab","setKey","k","page","conditions","key","value","parseInt","data2","URLSearchParams","history","replace","search","handleSettlementPayModal","showSettlePaymentModal","showSettledData","pricingData","permissionList","coumnWidth","labelName","dataKey","className","isCell","cell","rowData","id","final_amount","settled_on","format","reference_id","showTable","code","vehicle_inventory_details","name","registration_no","start_datetime","end_datetime","total_amount","getText","status","userDetails","JSON","parse","localStorage","getItem","settlementReport","isFranchise","componentDidMount","user_account_type","COMPANY","render","settlementData","franchiseOptionsList","bookingId","payable_to_franchise","toFixed","total_platform_amount","total_franchise_amount","mapStateToProps","settlementState","SettlementState","mapDispatchToProps","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { ComponentHeader } from \"../common\"\nimport { Grid, Image, Row, Col, Button, Tab, Tabs } from \"react-bootstrap\"\nimport CustomTable from \"../../utils/commonComponent/CustomTable\"\nimport SettlePaymentModal from \"./SettlePayment\"\nimport settleIcon from \"../../assets/images/icons/settlement-icon.svg\"\nimport { getSettlementReportApi } from \"./Api\"\nimport { OrderStatus } from \"../../utils/Constant\"\nimport moment from \"moment\"\nimport { AccountType, PermissionList, START_PAGE } from \"../../utils/Constant\"\nimport ActionDropdown from \"../common/_utils/ActionDropdown\"\nimport {\n  getAssignedPermission,\n  replaceHistory\n} from \"../../utils/ReusableFunctions\"\nimport { getAllFranchiseApi } from \"../franchise/Api\"\nimport notFoundImage from \"../../assets/images/empty-table.png\"\n\nclass Settlement extends Component {\n  constructor(props) {\n    super(props)\n    const userDetails = JSON.parse(localStorage.getItem(\"userDetails\"))\n    this.state = {\n      settlementReport: [],\n      selectedTab: \"30\",\n      showSettlePaymentModal: false,\n      userDetails,\n      isFranchise: false\n    }\n  }\n\n  componentDidMount() {\n    // this.getSettlementReport();\n    // API CALL FOR SETTLEMENT FILTER\n    if (this.state.userDetails.user_account_type !== AccountType.COMPANY) {\n      this.setState({ isFranchise: true })\n    } else {\n      this.props.getAllFranchiseApi(this, -1)\n    }\n  }\n\n  filterSearch = (fromDate, toDate, franchiseId) => {\n    this.setState({ fromDate, toDate, franchiseId })\n    this.getSettlementReport(\n      this.state.selectedTab,\n      fromDate,\n      toDate,\n      franchiseId\n    )\n  }\n\n  getSettlementReport = (selectedTab, fromDate, toDate, franchiseId) => {\n    getSettlementReportApi(this, selectedTab, fromDate, toDate, franchiseId)\n  }\n\n  setKey = (k) => {\n    this.setState(\n      {\n        selectedTab: k,\n        page: 1,\n        conditions: [\n          {\n            key: k === \"default\" ? \"Settled\" : \"Unsettled\",\n            value: k === \"default\" ? true : parseInt(k)\n          }\n        ]\n      },\n      () => {\n        const data2 = new URLSearchParams()\n        this.getSettlementReport(\n          this.state.selectedTab,\n          this.state.fromDate,\n          this.state.toDate,\n          this.state.franchiseId\n        )\n      }\n    )\n    this.props.history.replace({\n      search: `?tab=${k}&p=1`\n    })\n  }\n\n  handleSettlementPayModal = () => {\n    this.setState({\n      showSettlePaymentModal: !this.state.showSettlePaymentModal\n    })\n  }\n\n  showSettledData = (pricingData, permissionList) => {\n    return (\n      <div className=\"custom-table-wrapper\">\n        <CustomTable\n          tableData={pricingData}\n          columnList={[\n            {\n              coumnWidth: 280,\n              labelName: \"Settlement ID\",\n              dataKey: \"id\",\n              className: \"red-hat-display-bold\",\n              isCell: true,\n              cell: (rowData, dataKey) => {\n                if (dataKey === \"id\") {\n                  return rowData.id\n                }\n              }\n            },\n            {\n              coumnWidth: 250,\n              labelName: \"Amount (₹)\",\n              dataKey: \"final_amount\",\n              className: \"\",\n              isCell: true,\n              cell: (rowData, dataKey) => {\n                if (dataKey === \"final_amount\") {\n                  return rowData.final_amount\n                }\n              }\n            },\n\n            {\n              coumnWidth: 300,\n              labelName: \"End Time\",\n              dataKey: \"settled_on\",\n              className: \"\",\n              isCell: true,\n              cell: (rowData, dataKey) => {\n                if (dataKey === \"settled_on\") {\n                  return moment(rowData.settled_on).format(\"LLL\")\n                }\n              }\n            },\n            {\n              coumnWidth: 350,\n              labelName: \"Transaction Reference ID\",\n              dataKey: \"reference_id\",\n              className: \"\",\n              isCell: true,\n              cell: (rowData, dataKey) => {\n                if (dataKey === \"reference_id\") {\n                  return rowData.reference_id\n                }\n              }\n            }\n          ]}\n\n        // For Pagination\n        //   history={this.props.history}\n        //   location={this.props.location}\n        //   totalPages={this.state.totalPages}\n        //   currentPage={this.state.page - 1} // because of 0 based indexing\n        //   message={\"Pricing list is empty\"}\n        />\n      </div>\n    )\n  }\n\n  showTable = (pricingData, permissionList) => {\n    return (\n      <div className=\"custom-table-wrapper\">\n        <CustomTable\n          tableData={pricingData}\n          columnList={[\n            {\n              coumnWidth: 150,\n              labelName: \"Order Id\",\n              dataKey: \"code\",\n              className: \"red-hat-display-bold\",\n              isCell: true,\n              cell: (rowData, dataKey) => {\n                if (dataKey === \"code\") {\n                  return rowData.code\n                }\n              }\n            },\n            {\n              coumnWidth: 150,\n              labelName: \"Vehicle\",\n              dataKey: \"status\",\n              className: \"\",\n              isCell: true,\n              cell: (rowData, dataKey) => {\n                if (dataKey === \"status\") {\n                  return (\n                    rowData?.vehicle_inventory_details?.name +\n                    \"-\" +\n                    rowData?.vehicle_inventory_details?.registration_no\n                  )\n                }\n              }\n            },\n            {\n              coumnWidth: 250,\n              labelName: \"Start Time\",\n              dataKey: \"start_datetime\",\n              className: \"\",\n              isCell: true,\n              cell: (rowData, dataKey) => {\n                if (dataKey === \"start_datetime\") {\n                  return moment(rowData.start_datetime).format(\"LLL\")\n                }\n              }\n            },\n            {\n              coumnWidth: 250,\n              labelName: \"End Time\",\n              dataKey: \"end_datetime\",\n              className: \"\",\n              isCell: true,\n              cell: (rowData, dataKey) => {\n                if (dataKey === \"end_datetime\") {\n                  return moment(rowData.end_datetime).format(\"LLL\")\n                }\n              }\n            },\n            // {\n            //   coumnWidth: 300,\n            //   labelName: \"Franchisee Name\",\n            //   dataKey: \"end_datetime\",\n            //   className: \"\",\n            //   isCell: true,\n            //   cell: (rowData, dataKey) => {\n            //     if (dataKey === \"end_datetime\") {\n            //       return moment(rowData.end_datetime).format('LLL')\n            //     }\n            //   }\n            // },\n            {\n              coumnWidth: 150,\n              labelName: \"Total Fare (₹)\",\n              dataKey: \"total_amount\",\n              className: \"red-hat-display-bold\",\n              isCell: true,\n              cell: (rowData, dataKey) => {\n                if (dataKey === \"total_amount\") {\n                  return rowData.total_amount\n                }\n              }\n            },\n            {\n              coumnWidth: 150,\n              labelName: \"Status\",\n              dataKey: \"status\",\n              className: \"\",\n              isCell: true,\n              cell: (rowData, dataKey) => {\n                if (dataKey === \"status\") {\n                  return OrderStatus.getText(rowData.status)\n                }\n              }\n            }\n\n            // {\n            //     coumnWidth: 50,\n            //     labelName: \"\",\n            //     dataKey: \"options\",\n            //     className: \"options-column\",\n            //     isCell: true,\n            //     cell: (rowData, dataKey) => {\n            //         if (dataKey === \"options\") {\n            //             const menuItem = [];\n            //             menuItem.push({\n            //                 title: \"View Details\",\n            //                 type: \"\",\n            //                 linkUrl: `booking-management/view-booking/${rowData.id}`,\n            //             })\n            //             if (permissionList.includes(PermissionList.ADD_UPDATE_TELEMATICS_INVENTORY)) {\n            //                 return (\n            //                     <ActionDropdown\n            //                         menuItem={menuItem}\n            //                     />\n            //                 )\n            //             }\n            //         }\n            //     }\n            // }\n          ]}\n          // For Pagination\n          //   history={this.props.history}\n          //   location={this.props.location}\n          //   totalPages={this.state.totalPages}\n          //   currentPage={this.state.page - 1} // because of 0 based indexing\n          message={\"No Data Found\"}\n        />\n      </div>\n    )\n  }\n\n  render() {\n    const { settlementData, settlementReport, franchiseOptionsList } =\n      this.state\n    const permissionList = getAssignedPermission()\n\n    return (\n      <>\n        {this.state.showSettlePaymentModal && (\n          <SettlePaymentModal\n            bookingId={this.state.bookingId}\n            show={this.state.showSettlePaymentModal}\n            handleClose={this.handleSettlementPayModal}\n            paybleAmount={settlementData?.payable_to_franchise.toFixed(2)}\n          />\n        )}\n\n        <ComponentHeader\n          breadcrumb={true}\n          currentPage={\"Company Settlement\"}\n          title={\"Settlement\"}\n          isFilter={false}\n          //isPrimaryBtn={() => this.handleAddBookings()}\n          isSearch={false}\n          placeholder={\"Search Bookings\"}\n          isSettleSearch={true}\n          franchiseOptionsList={franchiseOptionsList}\n          filterSearch={this.filterSearch}\n          isFranchise={this.state.isFranchise}\n        //onChangeMethod={this.onChangeMethod}\n        //clearSearch={() => this.clearSearch(page || START_PAGE)}\n        />\n        {settlementReport ? (\n          <div className=\"settlement-wrapper\">\n            <div className=\"header\">\n              <h1 className=\"red-hat-display-bold f-s-16\">\n                Revenue & Payment Settlement\n              </h1>\n              <div className=\"settlement-box\">\n                <div className=\"card-info b-right\">\n                  {/* <div>\n                                        <Image src={settleIcon} />\n                                    </div> */}\n                  <div>\n                    <h3 className=\"red-hat-display-bold f-s-20\">\n                      ₹{\" \"}\n                      {settlementData?.total_platform_amount\n                        ? (\n                          settlementData?.total_franchise_amount +\n                          settlementData?.total_platform_amount\n                        ).toFixed(2)\n                        : \"0\"}{\" \"}\n                    </h3>\n                    <p className=\"red-hat-display-regular f-s-16\">\n                      Total Revenue\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"card-info b-right\">\n                  {/* <div>\n                                        <Image src={settleIcon} />\n                                    </div> */}\n                  <div>\n                    <h3 className=\"red-hat-display-bold f-s-20\">\n                      ₹{\" \"}\n                      {settlementData\n                        ? settlementData.total_platform_amount.toFixed(2)\n                        : \"0\"}\n                    </h3>\n                    <p className=\"red-hat-display-regular f-s-16\">\n                      Company Revenue\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"card-info b-right\">\n                  {/* <div>\n                                                <Image src={settleIcon} />\n                                            </div> */}\n                  <div>\n                    <h3 className=\"red-hat-display-bold f-s-20\">\n                      ₹{\" \"}\n                      {settlementData\n                        ? settlementData.total_franchise_amount.toFixed(2)\n                        : \"0\"}{\" \"}\n                    </h3>\n                    <p className=\"red-hat-display-regular f-s-16\">\n                      Franchise Revenue\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"card-info\">\n                  {/* <div>\n                                                <Image src={settleIcon} />\n                                            </div> */}\n                  <div>\n                    <h3 className=\"red-hat-display-bold f-s-20\">\n                      ₹{\" \"}\n                      {settlementData\n                        ? settlementData.payable_to_franchise.toFixed(2)\n                        : \"0\"}{\" \"}\n                    </h3>\n                    <p className=\"red-hat-display-regular f-s-16\">\n                      Payable Amount\n                    </p>\n                  </div>\n                </div>\n                {\n                  !this.state.isFranchise &&\n                  <div>\n                    {settlementData?.payable_to_franchise && (\n                      <Button\n                        className=\"btn black-btn\"\n                        onClick={this.handleSettlementPayModal}\n                      >\n                        Settle Payment\n                      </Button>\n                    )}\n                  </div>\n                }\n\n              </div>\n            </div>\n            <div className=\"settlement-info\">\n              <h2 className=\"red-hat-display-bold f-s-20\">Orders</h2>\n              <Tabs\n                id=\"controlled-tab-example\"\n                activeKey={this.state.selectedTab}\n                onSelect={(k) => this.setKey(k)}\n                className=\"pricing-tabs\"\n              >\n                <Tab eventKey=\"30\" title=\"Unsettled\">\n                  {this.showTable(settlementReport, permissionList)}\n                </Tab>\n                <Tab eventKey=\"default\" title=\"Settled\">\n                  {this.showSettledData(settlementReport, permissionList)}\n                </Tab>\n              </Tabs>\n            </div>\n          </div>\n        ) : (\n          <div className=\"not-found-wrapper\">\n            <Image src={notFoundImage} />\n            <p className=\"red-hat-display-medium f-s-16 black-404\">\n              {\" \"}\n              No Data Found\n            </p>\n          </div>\n        )}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  settlementState: state.SettlementState\n})\nconst mapDispatchToProps = {\n  getAllFranchiseApi\n}\nSettlement.propTypes = {\n  // getPosts: PropTypes.func\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settlement)\n"]},"metadata":{},"sourceType":"module"}