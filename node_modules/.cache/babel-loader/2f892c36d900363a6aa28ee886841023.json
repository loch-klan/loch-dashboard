{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/utils/form/FilePreview.js\";\nimport React, { Fragment } from \"react\";\nimport { ProgressBar, Image } from \"react-bootstrap\"; // import PdfImage from \"../../assets/img/pdf-img.png\"\n\nimport { getExtensionNameWrapper } from \"../ReusableFunctions\";\nimport closeIcon from '../../assets/images/close.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilePreview = props => {\n  const {\n    files,\n    uploadProgress,\n    onRemove\n  } = props;\n  return files.map((fileInfo, index) => {\n    const progress = uploadProgress[fileInfo.id]; // const url = fileInfo.mimeType === \"application/pdf\" ? PdfImage : fileInfo.url;\n    // console.log('fileInfo', fileInfo);\n\n    let attachmentWrapper = getExtensionNameWrapper(fileInfo.name, fileInfo.path, \"option-card-extension \");\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [!progress && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-img-wrapper\",\n        children: [attachmentWrapper, /*#__PURE__*/_jsxDEV(Image, {\n          src: closeIcon,\n          className: \"remove-circle\",\n          onClick: () => onRemove(fileInfo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), progress && /*#__PURE__*/_jsxDEV(ProgressBar, {\n        striped: true,\n        bsStyle: \"info\",\n        now: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  });\n};\n\n_c = FilePreview;\nexport default FilePreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilePreview\");","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/utils/form/FilePreview.js"],"names":["React","Fragment","ProgressBar","Image","getExtensionNameWrapper","closeIcon","FilePreview","props","files","uploadProgress","onRemove","map","fileInfo","index","progress","id","attachmentWrapper","name","path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,iBAAnC,C,CACA;;AACA,SAASC,uBAAT,QAAwC,sBAAxC;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,cAAT;AAAyBC,IAAAA;AAAzB,MAAsCH,KAA5C;AACA,SACEC,KAAK,CAACG,GAAN,CAAU,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC7B,UAAMC,QAAQ,GAAGL,cAAc,CAACG,QAAQ,CAACG,EAAV,CAA/B,CAD6B,CAE7B;AACA;;AACA,QAAIC,iBAAiB,GAAGZ,uBAAuB,CAACQ,QAAQ,CAACK,IAAV,EAAgBL,QAAQ,CAACM,IAAzB,EAA+B,wBAA/B,CAA/C;AAEA,wBACE,QAAC,QAAD;AAAA,iBAEI,CAACJ,QAAD,iBACA;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,mBAEGE,iBAFH,eAGE,QAAC,KAAD;AAAO,UAAA,GAAG,EAAEX,SAAZ;AAAuB,UAAA,SAAS,EAAC,eAAjC;AAAiD,UAAA,OAAO,EAAE,MAAMK,QAAQ,CAACE,QAAD;AAAxE;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAUIE,QAAQ,iBACN,QAAC,WAAD;AACE,QAAA,OAAO,MADT;AAEE,QAAA,OAAO,EAAC,MAFV;AAGE,QAAA,GAAG,EAAEA;AAHP;AAAA;AAAA;AAAA;AAAA,cAXN;AAAA,OAAeD,KAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD,GA3BD,CADF;AA8BD,CAhCD;;KAAMP,W;AAkCN,eAAeA,WAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { ProgressBar, Image } from \"react-bootstrap\";\n// import PdfImage from \"../../assets/img/pdf-img.png\"\nimport { getExtensionNameWrapper } from \"../ReusableFunctions\";\nimport closeIcon from '../../assets/images/close.png';\n\nconst FilePreview = props => {\n  const { files, uploadProgress, onRemove } = props;\n  return (\n    files.map((fileInfo, index) => {\n      const progress = uploadProgress[fileInfo.id];\n      // const url = fileInfo.mimeType === \"application/pdf\" ? PdfImage : fileInfo.url;\n      // console.log('fileInfo', fileInfo);\n      let attachmentWrapper = getExtensionNameWrapper(fileInfo.name, fileInfo.path, \"option-card-extension \");\n\n      return (\n        <Fragment key={index}>\n          {\n            !progress &&\n            <div className=\"uploaded-img-wrapper\">\n              {/* <Image src={url} responsive className=\"image-preview\" /> */}\n              {attachmentWrapper}\n              <Image src={closeIcon} className=\"remove-circle\" onClick={() => onRemove(fileInfo)} />\n            </div>\n          }\n          {\n            progress && (\n              <ProgressBar\n                striped\n                bsStyle=\"info\"\n                now={progress}\n              />\n            )\n          }\n        </Fragment>\n      )\n    })\n  )\n}\n\nexport default FilePreview"]},"metadata":{},"sourceType":"module"}