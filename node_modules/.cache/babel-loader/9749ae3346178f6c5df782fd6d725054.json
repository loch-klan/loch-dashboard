{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { postLoginInstance } from \"../../utils\";\nimport { API_LIMIT, START_PAGE } from \"../../utils/Constant\";\nimport { calculateTotalPageCount } from \"../../utils/ReusableFunctions\";\nexport const getAllAccountApi = function (ctx) {\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : START_PAGE;\n  return function (dispatch, getState) {\n    let data = new URLSearchParams();\n    data.append(\"start\", page * API_LIMIT || START_PAGE);\n    data.append(\"limit\", API_LIMIT);\n    data.append(\"conditions\", JSON.stringify(ctx.state.conditions || []));\n    data.append(\"sorts\", JSON.stringify([]));\n    postLoginInstance.post(\"/organisation/user/search-accounts\", data).then(res => {\n      ctx.setState({\n        data: res.data.data.results,\n        totalCount: res.data.data.total_count,\n        totalPage: calculateTotalPageCount(res.data.data.total_count),\n        page: page\n      });\n    }).catch(err => {\n      console.log(\"Catch\", err);\n    });\n  };\n};\nexport const addUpdateAccountApi = (data, cb) => {\n  return postLoginInstance.post(\"/organisation/user/add-new-account\", data).then(res => {\n    if (!res.data.error) {\n      cb();\n      toast.success(res.data.message || \"Something went wrong\");\n    } else {\n      toast.error(res.data.message || \"Something went wrong\");\n    }\n  }).catch(err => {\n    toast.error(err.message || \"Something went wrong\");\n  });\n};\nexport const getAllUserApi = function (ctx) {\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : START_PAGE;\n  return function (dispatch, getState) {\n    let data = new URLSearchParams();\n    data.append(\"start\", page * API_LIMIT || START_PAGE);\n    data.append(\"limit\", API_LIMIT);\n    data.append(\"conditions\", JSON.stringify(ctx.state.conditions || []));\n    data.append(\"sorts\", JSON.stringify([]));\n    postLoginInstance.post(\"/organisation/user/search-users\", data).then(res => {\n      ctx.setState({\n        data: res.data.data.results,\n        totalCount: res.data.data.total_count,\n        totalPage: calculateTotalPageCount(res.data.data.total_count),\n        page: page\n      });\n    }).catch(err => {\n      console.log(\"Catch\", err);\n    });\n  };\n};\nexport const getAllRolesApi = ctx => {\n  return function (dispatch, getState) {\n    let data = new URLSearchParams();\n    data.append(\"account_type\", ctx.state.userAccountType ? ctx.state.userAccountType : JSON.parse(localStorage.getItem(\"userDetails\")).user_account_type);\n    postLoginInstance.post(\"/organisation/authorization/get-all-roles-by-account-type\", data).then(res => {\n      let rolesOption = res.data.data.roles.map(item => ({\n        label: item.name,\n        value: item.id\n      }));\n      ctx.setState({\n        rolesOption: rolesOption\n      });\n    }).catch(err => {\n      console.log(\"Catch\", err);\n    });\n  };\n};\nexport const addUserApi = (data, cb) => {\n  return postLoginInstance.post(\"/organisation/user/invite-user\", data).then(res => {\n    if (!res.data.error) {\n      cb();\n      toast.success(res.data.message || \"Something went wrong\");\n    } else {\n      toast.error(res.data.message || \"Something went wrong\");\n    }\n  }).catch(err => {\n    toast.error(err.message || \"Something went wrong\");\n  });\n};\nexport const editUserApi = (data, cb) => {\n  return postLoginInstance.post(\"/organisation/user/update-user\", data).then(res => {\n    if (!res.data.error) {\n      cb();\n      toast.success(res.data.message || \"Something went wrong\");\n    } else {\n      toast.error(res.data.message || \"Something went wrong\");\n    }\n  }).catch(err => {\n    toast.error(err.message || \"Something went wrong\");\n  });\n};","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/userManagement/Api.js"],"names":["toast","postLoginInstance","API_LIMIT","START_PAGE","calculateTotalPageCount","getAllAccountApi","ctx","page","dispatch","getState","data","URLSearchParams","append","JSON","stringify","state","conditions","post","then","res","setState","results","totalCount","total_count","totalPage","catch","err","console","log","addUpdateAccountApi","cb","error","success","message","getAllUserApi","getAllRolesApi","userAccountType","parse","localStorage","getItem","user_account_type","rolesOption","roles","map","item","label","name","value","id","addUserApi","editUserApi"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\"\nimport { postLoginInstance } from \"../../utils\"\nimport { API_LIMIT, START_PAGE } from \"../../utils/Constant\"\nimport { calculateTotalPageCount } from \"../../utils/ReusableFunctions\"\n\nexport const getAllAccountApi = (ctx, page = START_PAGE) => {\n  return function (dispatch, getState) {\n    let data = new URLSearchParams()\n    data.append(\"start\", page * API_LIMIT || START_PAGE)\n    data.append(\"limit\", API_LIMIT)\n    data.append(\"conditions\", JSON.stringify(ctx.state.conditions || []))\n    data.append(\"sorts\", JSON.stringify([]))\n\n    postLoginInstance\n      .post(\"/organisation/user/search-accounts\", data)\n      .then((res) => {\n        ctx.setState({\n          data: res.data.data.results,\n          totalCount: res.data.data.total_count,\n          totalPage: calculateTotalPageCount(res.data.data.total_count),\n          page: page\n        })\n      })\n      .catch((err) => {\n        console.log(\"Catch\", err)\n      })\n  }\n}\n\nexport const addUpdateAccountApi = (data, cb) => {\n  return postLoginInstance\n    .post(\"/organisation/user/add-new-account\", data)\n    .then((res) => {\n      if (!res.data.error) {\n        cb()\n        toast.success(res.data.message || \"Something went wrong\")\n      } else {\n        toast.error(res.data.message || \"Something went wrong\")\n      }\n    })\n    .catch((err) => {\n      toast.error(err.message || \"Something went wrong\")\n    })\n}\n\nexport const getAllUserApi = (ctx, page = START_PAGE) => {\n  return function (dispatch, getState) {\n    let data = new URLSearchParams()\n    data.append(\"start\", page * API_LIMIT || START_PAGE)\n    data.append(\"limit\", API_LIMIT)\n    data.append(\"conditions\", JSON.stringify(ctx.state.conditions || []))\n    data.append(\"sorts\", JSON.stringify([]))\n\n    postLoginInstance\n      .post(\"/organisation/user/search-users\", data)\n      .then((res) => {\n        ctx.setState({\n          data: res.data.data.results,\n          totalCount: res.data.data.total_count,\n          totalPage: calculateTotalPageCount(res.data.data.total_count),\n          page: page\n        })\n      })\n      .catch((err) => {\n        console.log(\"Catch\", err)\n      })\n  }\n}\n\nexport const getAllRolesApi = (ctx) => {\n  return function (dispatch, getState) {\n    let data = new URLSearchParams()\n    data.append(\n      \"account_type\",\n      ctx.state.userAccountType\n        ? ctx.state.userAccountType\n        : JSON.parse(localStorage.getItem(\"userDetails\")).user_account_type\n    )\n    postLoginInstance\n      .post(\"/organisation/authorization/get-all-roles-by-account-type\", data)\n      .then((res) => {\n        let rolesOption = res.data.data.roles.map((item) => ({\n          label: item.name,\n          value: item.id\n        }))\n        ctx.setState({\n          rolesOption: rolesOption\n        })\n      })\n      .catch((err) => {\n        console.log(\"Catch\", err)\n      })\n  }\n}\n\nexport const addUserApi = (data, cb) => {\n  return postLoginInstance\n    .post(\"/organisation/user/invite-user\", data)\n    .then((res) => {\n      if (!res.data.error) {\n        cb()\n        toast.success(res.data.message || \"Something went wrong\")\n      } else {\n        toast.error(res.data.message || \"Something went wrong\")\n      }\n    })\n    .catch((err) => {\n      toast.error(err.message || \"Something went wrong\")\n    })\n}\n\nexport const editUserApi = (data, cb) => {\n  return postLoginInstance\n    .post(\"/organisation/user/update-user\", data)\n    .then((res) => {\n      if (!res.data.error) {\n        cb()\n        toast.success(res.data.message || \"Something went wrong\")\n      } else {\n        toast.error(res.data.message || \"Something went wrong\")\n      }\n    })\n    .catch((err) => {\n      toast.error(err.message || \"Something went wrong\")\n    })\n}\n"]},"metadata":{},"sourceType":"module"}