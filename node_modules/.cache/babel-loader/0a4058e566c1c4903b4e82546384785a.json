{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/app/bookingManagement/AssignBike.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { BaseReactComponent, Form, FormElement, FormSubmitButton, CustomTextControl, FormValidator, SelectControl } from '../../utils/form';\nimport { CustomModal } from \"../common\";\nimport { Col, Row, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getVehiclesForOrderApi, reassignVehicleOrder } from './Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AssignBike extends BaseReactComponent {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = () => {\n      this.props.reAssignBike(this.state.bikeId);\n    };\n\n    this.state = {\n      bikeList: [],\n      vehicleOptions: []\n    };\n  }\n\n  componentDidMount() {\n    getVehiclesForOrderApi(this.props.bookingId, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(CustomModal, {\n      show: this.props.show,\n      onHide: () => this.props.handleClose(),\n      title: \"Assign Bike\",\n      modalClass: \"assign-bike\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onValidSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-wrapper \",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(FormElement, {\n              valueLink: this.linkState(this, \"bikeId\"),\n              label: \"Select Bike\",\n              required: true,\n              validations: [{\n                validate: FormValidator.isRequired,\n                message: \"Bike cannot be empty\"\n              }],\n              control: {\n                type: SelectControl,\n                settings: {\n                  placeholder: \"Select Bike\",\n                  options: this.state.vehicleOptions,\n                  multiple: false,\n                  searchable: true,\n                  onChangeCallback: onBlur => {\n                    onBlur(this.state.bikeId);\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-wrapper\",\n          style: {\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(FormSubmitButton, {\n            customClass: `btn black-btn ${!this.state.bikeId && \"inactive-btn\"}`,\n            children: \"Assign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({ ...state\n});\n\nconst mapDispatchToProps = {// getPosts: fetchPosts\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignBike);","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/bookingManagement/AssignBike.js"],"names":["React","PropTypes","BaseReactComponent","Form","FormElement","FormSubmitButton","CustomTextControl","FormValidator","SelectControl","CustomModal","Col","Row","Button","connect","getVehiclesForOrderApi","reassignVehicleOrder","AssignBike","constructor","props","onSubmit","reAssignBike","state","bikeId","bikeList","vehicleOptions","componentDidMount","bookingId","render","show","handleClose","linkState","validate","isRequired","message","type","settings","placeholder","options","multiple","searchable","onChangeCallback","onBlur","justifyContent","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    BaseReactComponent, Form, FormElement, FormSubmitButton, CustomTextControl, FormValidator, SelectControl\n} from '../../utils/form';\nimport { CustomModal } from \"../common\";\nimport { Col, Row, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getVehiclesForOrderApi, reassignVehicleOrder } from './Api';\n\nclass AssignBike extends BaseReactComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bikeList: [],\n            vehicleOptions: []\n        }\n    }\n\n    componentDidMount() {\n        getVehiclesForOrderApi(this.props.bookingId, this)\n    }\n\n    onSubmit = () => {\n        this.props.reAssignBike(this.state.bikeId);\n    }\n\n    render() {\n        return (\n            <CustomModal\n                show={this.props.show}\n                onHide={() => this.props.handleClose()}\n                title={\"Assign Bike\"}\n                modalClass={\"assign-bike\"}\n            >\n                <Form onValidSubmit={this.onSubmit}>\n                    <div className='modal-wrapper '>\n                        <Col md={12}>\n                            <FormElement\n                                valueLink={this.linkState(this, \"bikeId\")}\n                                label=\"Select Bike\"\n                                required\n                                validations={[\n                                    {\n                                        validate: FormValidator.isRequired,\n                                        message: \"Bike cannot be empty\"\n                                    },\n                                ]}\n                                control={{\n                                    type: SelectControl,\n                                    settings: {\n                                        placeholder: \"Select Bike\",\n                                        options: this.state.vehicleOptions,\n                                        multiple: false,\n                                        searchable: true,\n                                        onChangeCallback: (onBlur) => {\n                                            onBlur(this.state.bikeId);\n                                        }\n                                    }\n                                }}\n                            />\n                        </Col>\n                    </div>\n                    <div className=\"submit-wrapper\" style={{ justifyContent: 'center' }}>\n                        <FormSubmitButton customClass={`btn black-btn ${!this.state.bikeId && \"inactive-btn\"}`}>Assign</FormSubmitButton>\n                    </div>\n                </Form>\n            </CustomModal>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    ...state\n});\nconst mapDispatchToProps = {\n    // getPosts: fetchPosts\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignBike);"]},"metadata":{},"sourceType":"module"}