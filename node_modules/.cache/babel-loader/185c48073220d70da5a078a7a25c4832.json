{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { postLoginInstance } from \"../../utils\";\nimport { API_LIMIT } from \"../../utils/Constant\";\nexport const addUpdateIotModelApi = (data, cb) => {\n  return postLoginInstance.post(\"offering/telematics/add-update-telematics-model\", data).then(res => {\n    if (!res.data.error) {\n      cb();\n      toast.success(res.data.message || \"Something went wrong\");\n    } else {\n      toast.error(res.data.message || \"Something went wrong\");\n    }\n  }).catch(err => {\n    toast.error(err.message || \"Something went wrong\");\n  });\n};\nexport const getAllIotModelsApi = ctx => {\n  const {\n    searchText,\n    searchKey\n  } = ctx.state;\n  let data = new URLSearchParams();\n  data.append(\"start\", (ctx.state.page - 1) * API_LIMIT);\n  data.append(\"limit\", API_LIMIT);\n  data.append(\"conditions\", JSON.stringify(searchText ? [{\n    key: searchKey,\n    value: searchText\n  }] : []));\n  data.append(\"sorts\", JSON.stringify([]));\n  postLoginInstance.post('/offering/telematics/search-telematics-model', data).then(res => {\n    if (!res.data.error) {\n      ctx.setState({\n        iotModels: res.data.data.telematics_model.results,\n        totalPages: Math.ceil(res.data.data.telematics_model.totalCount / API_LIMIT)\n      });\n    } else {\n      toast.error(res.data.message || \"Something went wrong\");\n    }\n  }).catch(err => {\n    console.log('Catch', err);\n  });\n};","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/iotModel/Api.js"],"names":["toast","postLoginInstance","API_LIMIT","addUpdateIotModelApi","data","cb","post","then","res","error","success","message","catch","err","getAllIotModelsApi","ctx","searchText","searchKey","state","URLSearchParams","append","page","JSON","stringify","key","value","setState","iotModels","telematics_model","results","totalPages","Math","ceil","totalCount","console","log"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,SAASC,SAAT,QAA0B,sBAA1B;AAEA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,IAAD,EAAOC,EAAP,KAAc;AAC9C,SAAOJ,iBAAiB,CAACK,IAAlB,CAAuB,iDAAvB,EAA0EF,IAA1E,EACFG,IADE,CACIC,GAAD,IAAS;AACX,QAAI,CAACA,GAAG,CAACJ,IAAJ,CAASK,KAAd,EAAqB;AACjBJ,MAAAA,EAAE;AACFL,MAAAA,KAAK,CAACU,OAAN,CAAcF,GAAG,CAACJ,IAAJ,CAASO,OAAT,IAAoB,sBAAlC;AACH,KAHD,MAGO;AACHX,MAAAA,KAAK,CAACS,KAAN,CAAYD,GAAG,CAACJ,IAAJ,CAASO,OAAT,IAAoB,sBAAhC;AACH;AACJ,GARE,EASFC,KATE,CASKC,GAAD,IAAS;AACZb,IAAAA,KAAK,CAACS,KAAN,CAAYI,GAAG,CAACF,OAAJ,IAAe,sBAA3B;AACH,GAXE,CAAP;AAYH,CAbM;AAgBP,OAAO,MAAMG,kBAAkB,GAAIC,GAAD,IAAS;AACvC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA4BF,GAAG,CAACG,KAAtC;AACA,MAAId,IAAI,GAAG,IAAIe,eAAJ,EAAX;AACAf,EAAAA,IAAI,CAACgB,MAAL,CAAY,OAAZ,EAAqB,CAACL,GAAG,CAACG,KAAJ,CAAUG,IAAV,GAAiB,CAAlB,IAAuBnB,SAA5C;AACAE,EAAAA,IAAI,CAACgB,MAAL,CAAY,OAAZ,EAAqBlB,SAArB;AACAE,EAAAA,IAAI,CAACgB,MAAL,CAAY,YAAZ,EAA0BE,IAAI,CAACC,SAAL,CACtBP,UAAU,GAAG,CAAC;AAAEQ,IAAAA,GAAG,EAAEP,SAAP;AAAkBQ,IAAAA,KAAK,EAAET;AAAzB,GAAD,CAAH,GAA6C,EADjC,CAA1B;AAGAZ,EAAAA,IAAI,CAACgB,MAAL,CAAY,OAAZ,EAAqBE,IAAI,CAACC,SAAL,CAAe,EAAf,CAArB;AACAtB,EAAAA,iBAAiB,CAACK,IAAlB,CAAuB,8CAAvB,EAAuEF,IAAvE,EACKG,IADL,CACUC,GAAG,IAAI;AACT,QAAI,CAACA,GAAG,CAACJ,IAAJ,CAASK,KAAd,EAAqB;AACjBM,MAAAA,GAAG,CAACW,QAAJ,CAAa;AACTC,QAAAA,SAAS,EAAEnB,GAAG,CAACJ,IAAJ,CAASA,IAAT,CAAcwB,gBAAd,CAA+BC,OADjC;AAETC,QAAAA,UAAU,EAAEC,IAAI,CAACC,IAAL,CAAUxB,GAAG,CAACJ,IAAJ,CAASA,IAAT,CAAcwB,gBAAd,CAA+BK,UAA/B,GAA4C/B,SAAtD;AAFH,OAAb;AAIH,KALD,MAKO;AACHF,MAAAA,KAAK,CAACS,KAAN,CAAYD,GAAG,CAACJ,IAAJ,CAASO,OAAT,IAAoB,sBAAhC;AACH;AACJ,GAVL,EAWKC,KAXL,CAWYC,GAAD,IAAS;AACZqB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBtB,GAArB;AACH,GAbL;AAcH,CAvBM","sourcesContent":["import { toast } from \"react-toastify\";\nimport { postLoginInstance } from \"../../utils\";\nimport { API_LIMIT } from \"../../utils/Constant\";\n\nexport const addUpdateIotModelApi = (data, cb) => {\n    return postLoginInstance.post(\"offering/telematics/add-update-telematics-model\", data)\n        .then((res) => {\n            if (!res.data.error) {\n                cb();\n                toast.success(res.data.message || \"Something went wrong\")\n            } else {\n                toast.error(res.data.message || \"Something went wrong\")\n            }\n        })\n        .catch((err) => {\n            toast.error(err.message || \"Something went wrong\");\n        });\n};\n\n\nexport const getAllIotModelsApi = (ctx) => {\n    const { searchText, searchKey } = ctx.state;\n    let data = new URLSearchParams();\n    data.append(\"start\", (ctx.state.page - 1) * API_LIMIT);\n    data.append(\"limit\", API_LIMIT);\n    data.append(\"conditions\", JSON.stringify(\n        searchText ? [{ key: searchKey, value: searchText }] : [],\n    ));\n    data.append(\"sorts\", JSON.stringify([]));\n    postLoginInstance.post('/offering/telematics/search-telematics-model', data)\n        .then(res => {\n            if (!res.data.error) {\n                ctx.setState({\n                    iotModels: res.data.data.telematics_model.results,\n                    totalPages: Math.ceil(res.data.data.telematics_model.totalCount / API_LIMIT)\n                });\n            } else {\n                toast.error(res.data.message || \"Something went wrong\")\n            }\n        })\n        .catch((err) => {\n            console.log('Catch', err);\n        })\n}"]},"metadata":{},"sourceType":"module"}