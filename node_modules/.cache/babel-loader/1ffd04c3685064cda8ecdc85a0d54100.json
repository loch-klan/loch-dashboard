{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/utils/form/CustomTextControl.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormControl, InputGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getFormControlData = props => {\n  const {\n    type,\n    disabled,\n    readOnly,\n    placeholder,\n    as,\n    classes,\n    rows,\n    onBlur,\n    valueLink,\n    maxLength,\n    // multiline,\n    isInvalid,\n    isValid\n  } = props;\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    type: type,\n    disabled: disabled,\n    readOnly: readOnly,\n    placeholder: placeholder,\n    as: as,\n    rows: rows,\n    className: classes.inputField,\n    onBlur: () => onBlur(valueLink.value),\n    value: valueLink.value,\n    maxLength: maxLength // multiline={multiline}\n    ,\n    onChange: event => valueLink.requestChange(event.target.value),\n    isValid: isValid,\n    isInvalid: isInvalid\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\nconst CustomTextControl = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.prefix || props.suffix ? /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [props.prefix && /*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n        className: props.classes.prefix,\n        children: props.prefix\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 30\n      }, this), getFormControlData(props), props.suffix && /*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n        className: props.classes.suffix,\n        children: props.suffix\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this) : getFormControlData(props)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomTextControl;\nCustomTextControl.propTypes = {\n  type: PropTypes.oneOf([\"text\", \"password\"]),\n  disabled: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  placeholder: PropTypes.string,\n  as: PropTypes.oneOf([\"input\", \"textarea\"]),\n  rows: PropTypes.number,\n  classes: PropTypes.object,\n  onBlur: PropTypes.func.isRequired,\n  valueLink: PropTypes.object.isRequired,\n  prefix: PropTypes.node,\n  suffix: PropTypes.node,\n  maxLength: PropTypes.number,\n  isValid: PropTypes.bool,\n  isInvalid: PropTypes.bool // multiline: PropTypes.bool,\n\n};\nCustomTextControl.defaultProps = {\n  type: \"text\",\n  as: \"input\",\n  prefix: null,\n  suffix: null,\n  maxLength: 250,\n  placeholder: \"\",\n  // multiline: false,\n  disabled: false,\n  readOnly: false,\n  classes: {},\n  isValid: false,\n  isInvalid: false\n};\nexport default CustomTextControl;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTextControl\");","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/utils/form/CustomTextControl.js"],"names":["React","PropTypes","FormControl","InputGroup","getFormControlData","props","type","disabled","readOnly","placeholder","as","classes","rows","onBlur","valueLink","maxLength","isInvalid","isValid","inputField","value","event","requestChange","target","CustomTextControl","prefix","suffix","propTypes","oneOf","bool","string","number","object","func","isRequired","node","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormControl, InputGroup } from 'react-bootstrap'\n\nconst getFormControlData = props => {\n  const {\n    type,\n    disabled,\n    readOnly,\n    placeholder,\n    as,\n    classes,\n    rows,\n    onBlur,\n    valueLink,\n    maxLength,\n    // multiline,\n    isInvalid,\n    isValid,\n  } = props;\n  return (\n    <FormControl\n      type={type}\n      disabled={disabled}\n      readOnly={readOnly}\n      placeholder={placeholder}\n      as={as}\n      rows={rows}\n      className={classes.inputField}\n      onBlur={() => onBlur(valueLink.value)}\n      value={valueLink.value}\n      maxLength={maxLength}\n      // multiline={multiline}\n      onChange={event => valueLink.requestChange(event.target.value)}\n      isValid={isValid}\n      isInvalid={isInvalid}\n    />\n  );\n};\nconst CustomTextControl = props => {\n  return (\n    <div>\n      {\n        (props.prefix || props.suffix) ? (\n          <InputGroup>\n            {props.prefix && <InputGroup.Prepend className={props.classes.prefix}>{props.prefix}</InputGroup.Prepend>}\n            {getFormControlData(props)}\n            {props.suffix && <InputGroup.Prepend className={props.classes.suffix}>{props.suffix}</InputGroup.Prepend>}\n          </InputGroup>\n        ) : getFormControlData(props)\n\n      }\n    </div >\n  );\n};\n\nCustomTextControl.propTypes = {\n  type: PropTypes.oneOf([\"text\", \"password\"]),\n  disabled: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  placeholder: PropTypes.string,\n  as: PropTypes.oneOf([\"input\", \"textarea\"]),\n  rows: PropTypes.number,\n  classes: PropTypes.object,\n  onBlur: PropTypes.func.isRequired,\n  valueLink: PropTypes.object.isRequired,\n  prefix: PropTypes.node,\n  suffix: PropTypes.node,\n  maxLength: PropTypes.number,\n  isValid: PropTypes.bool,\n  isInvalid: PropTypes.bool,\n  // multiline: PropTypes.bool,\n};\n\nCustomTextControl.defaultProps = {\n  type: \"text\",\n  as: \"input\",\n  prefix: null,\n  suffix: null,\n  maxLength: 250,\n  placeholder: \"\",\n  // multiline: false,\n  disabled: false,\n  readOnly: false,\n  classes: {},\n  isValid: false,\n  isInvalid: false,\n};\n\nexport default CustomTextControl;"]},"metadata":{},"sourceType":"module"}