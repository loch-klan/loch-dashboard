{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/app/userManagement/Users.js\";\nimport React, { Component } from 'react'; // import PropTypes from 'prop-types';\n\nimport { connect } from \"react-redux\";\nimport CustomTable from '../../utils/commonComponent/CustomTable';\nimport { PermissionList, START_PAGE } from '../../utils/Constant';\nimport { getAssignedPermission, replaceHistory } from '../../utils/ReusableFunctions';\nimport { ComponentHeader } from '../common';\nimport ActionDropdown from '../common/_utils/ActionDropdown'; // import ActionDropdown from '../common/_utils/ActionDropdown';\n\nimport { getAllUserApi } from './Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Users extends Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.handleAddEditUser = function () {\n      let rowData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n      if (rowData) {\n        _this.props.history.push({\n          pathname: `/user-management/users/edit-user/${rowData.id}`,\n          state: {\n            data: rowData\n          }\n        });\n      } else {\n        _this.props.history.push(\"/user-management/users/add-user\");\n      }\n    };\n\n    this.handleViewUser = function () {\n      let rowData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n      _this.props.history.push({\n        pathname: `/user-management/users/view-user/${rowData.id}`,\n        state: {\n          data: rowData\n        }\n      });\n    };\n\n    this.onChangeMethod = value => {\n      this.setState({\n        searchValue: value,\n        conditions: [{\n          key: \"SEARCH_BY_TEXT\",\n          value: value.search\n        }]\n      });\n      replaceHistory(this.props.history, START_PAGE, value.search);\n      this.props.getAllUserApi(this, START_PAGE);\n    };\n\n    this.clearSearch = currentPage => {\n      this.setState({\n        searchValue: \"\",\n        conditions: []\n      }, () => {\n        if (currentPage === START_PAGE) {\n          this.props.getAllUserApi(this, START_PAGE);\n        }\n      });\n      replaceHistory(this.props.history, START_PAGE + 1);\n    };\n\n    const search = props.location.search;\n    const params = new URLSearchParams(search);\n    const page = params.get(\"p\");\n    this.state = {\n      data: [],\n      conditions: [],\n      page: page ? parseInt(page, 10) : START_PAGE + 1\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllUserApi(this);\n    this.props.history.replace({\n      search: `?p=${this.state.page}`\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevParams = new URLSearchParams(prevProps.location.search);\n    const prevPage = parseInt(prevParams.get('p'), 10) || 1;\n    const params = new URLSearchParams(this.props.location.search);\n    const page = parseInt(params.get('p'), 10) || 1;\n    const search = params.get('search') || \"\";\n\n    if (prevPage !== page) {\n      // this.setState({ page })\n      if (search) {\n        this.props.getAllUserApi(this);\n      } else {\n        this.props.getAllUserApi(this, page - 1);\n      }\n    }\n  }\n\n  render() {\n    const {\n      data,\n      page,\n      totalPage\n    } = this.state;\n    const permissionList = getAssignedPermission();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ComponentHeader, {\n        backArrowBtn: false,\n        breadcrumb: true,\n        currentPage: \"Users\",\n        title: \"Users\",\n        isFilter: false,\n        isPrimaryBtn: () => this.handleAddEditUser(),\n        primaryBtnText: permissionList.includes(PermissionList.ADD_UPDATE_USER) ? \"+ Add User\" : \"\",\n        isSearch: true,\n        placeholder: \"Search User\",\n        onChangeMethod: this.onChangeMethod,\n        clearSearch: () => this.clearSearch(page || START_PAGE)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-table-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(CustomTable, {\n          tableData: data,\n          columnList: [{\n            coumnWidth: 250,\n            labelName: \"Name\",\n            dataKey: \"first_name\",\n            className: \"red-hat-display-bold\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"first_name\") {\n                return rowData.first_name + \" \" + rowData.last_name;\n              }\n            }\n          },\n          /* {\n            coumnWidth: 250,\n            labelName: \"Contact\",\n            dataKey: \"mobile\",\n            className: \"red-hat-display-bold\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"mobile\") {\n                return rowData.mobile\n              }\n            }\n          }, */\n          {\n            coumnWidth: 250,\n            labelName: \"Email\",\n            dataKey: \"email\",\n            className: \"\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"email\") {\n                return rowData.email;\n              }\n            }\n          }, {\n            coumnWidth: 50,\n            labelName: \"\",\n            dataKey: \"options\",\n            className: \"options-column\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"options\") {\n                const menuItem = [{\n                  title: \"Edit\",\n                  type: \"event\",\n                  handleClick: () => this.handleAddEditUser(rowData)\n                }, {\n                  title: \"View Details\",\n                  type: \"event\",\n                  handleClick: () => this.handleViewUser(rowData)\n                }];\n\n                if (permissionList.includes(PermissionList.ADD_UPDATE_USER)) {\n                  return /*#__PURE__*/_jsxDEV(ActionDropdown, {\n                    menuItem: menuItem\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 25\n                  }, this);\n                }\n              }\n            }\n          }] // For Pagination\n          ,\n          history: this.props.history,\n          location: this.props.location,\n          totalPages: totalPage,\n          currentPage: page,\n          message: \"User list is empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userManagementState: state.UserManagementState\n});\n\nconst mapDispatchToProps = {\n  getAllUserApi\n}; // Customers.propTypes = {\n//   // getPosts: PropTypes.func\n// };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/userManagement/Users.js"],"names":["React","Component","connect","CustomTable","PermissionList","START_PAGE","getAssignedPermission","replaceHistory","ComponentHeader","ActionDropdown","getAllUserApi","Users","constructor","props","handleAddEditUser","rowData","history","push","pathname","id","state","data","handleViewUser","onChangeMethod","value","setState","searchValue","conditions","key","search","clearSearch","currentPage","location","params","URLSearchParams","page","get","parseInt","componentDidMount","replace","componentDidUpdate","prevProps","prevState","prevParams","prevPage","render","totalPage","permissionList","includes","ADD_UPDATE_USER","coumnWidth","labelName","dataKey","className","isCell","cell","first_name","last_name","email","menuItem","title","type","handleClick","mapStateToProps","userManagementState","UserManagementState","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport CustomTable from '../../utils/commonComponent/CustomTable';\nimport { PermissionList, START_PAGE } from '../../utils/Constant';\nimport { getAssignedPermission, replaceHistory } from '../../utils/ReusableFunctions';\nimport { ComponentHeader } from '../common';\nimport ActionDropdown from '../common/_utils/ActionDropdown';\n// import ActionDropdown from '../common/_utils/ActionDropdown';\nimport { getAllUserApi } from './Api';\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    const search = props.location.search;\n    const params = new URLSearchParams(search);\n    const page = params.get(\"p\");\n    this.state = {\n      data: [],\n      conditions: [],\n      page: page ? parseInt(page, 10) : START_PAGE + 1,\n    }\n  }\n\n  componentDidMount() {\n    this.props.getAllUserApi(this)\n    this.props.history.replace({\n      search: `?p=${this.state.page}`\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevParams = new URLSearchParams(prevProps.location.search);\n    const prevPage = parseInt(prevParams.get('p'), 10) || 1;\n\n    const params = new URLSearchParams(this.props.location.search);\n    const page = parseInt(params.get('p'), 10) || 1;\n    const search = params.get('search') || \"\";\n\n    if (prevPage !== page) {\n      // this.setState({ page })\n      if (search) {\n        this.props.getAllUserApi(this);\n      } else {\n        this.props.getAllUserApi(this, page - 1);\n      }\n    }\n  }\n\n  handleAddEditUser = (rowData = \"\") => {\n    if (rowData) {\n      this.props.history.push({\n        pathname: `/user-management/users/edit-user/${rowData.id}`,\n        state: { data: rowData }\n      });\n    } else {\n      this.props.history.push(\"/user-management/users/add-user\");\n    }\n  }\n\n  handleViewUser = (rowData = \"\") => {\n    this.props.history.push({\n      pathname: `/user-management/users/view-user/${rowData.id}`,\n      state: { data: rowData }\n    });\n  }\n\n  onChangeMethod = (value) => {\n    this.setState({\n      searchValue: value,\n      conditions: [{ key: \"SEARCH_BY_TEXT\", value: value.search }]\n    });\n    replaceHistory(this.props.history, START_PAGE, value.search)\n    this.props.getAllUserApi(this, START_PAGE);\n  }\n\n  clearSearch = (currentPage) => {\n    this.setState({ searchValue: \"\", conditions: [] }, () => {\n      if (currentPage === START_PAGE) {\n        this.props.getAllUserApi(this, START_PAGE);\n      }\n    });\n\n    replaceHistory(this.props.history, START_PAGE + 1)\n  }\n\n  render() {\n    const { data, page, totalPage, } = this.state;\n    const permissionList = getAssignedPermission();\n    return (\n      <>\n        <ComponentHeader\n          backArrowBtn={false}\n          breadcrumb={true}\n          currentPage={\"Users\"}\n          title={\"Users\"}\n          isFilter={false}\n          isPrimaryBtn={() => this.handleAddEditUser()}\n          primaryBtnText={permissionList.includes(PermissionList.ADD_UPDATE_USER) ? \"+ Add User\" : \"\"}\n          isSearch={true}\n          placeholder={\"Search User\"}\n          onChangeMethod={this.onChangeMethod}\n          clearSearch={() => this.clearSearch(page || START_PAGE)}\n        />\n        <div className='custom-table-wrapper'>\n          <CustomTable\n            tableData={data}\n            columnList={[\n              {\n                coumnWidth: 250,\n                labelName: \"Name\",\n                dataKey: \"first_name\",\n                className: \"red-hat-display-bold\",\n                isCell: true,\n                cell: (rowData, dataKey) => {\n                  if (dataKey === \"first_name\") {\n                    return rowData.first_name + \" \" + rowData.last_name\n                  }\n                }\n              },\n              /* {\n                coumnWidth: 250,\n                labelName: \"Contact\",\n                dataKey: \"mobile\",\n                className: \"red-hat-display-bold\",\n                isCell: true,\n                cell: (rowData, dataKey) => {\n                  if (dataKey === \"mobile\") {\n                    return rowData.mobile\n                  }\n                }\n              }, */\n              {\n                coumnWidth: 250,\n                labelName: \"Email\",\n                dataKey: \"email\",\n                className: \"\",\n                isCell: true,\n                cell: (rowData, dataKey) => {\n                  if (dataKey === \"email\") {\n                    return rowData.email\n                  }\n                }\n              },\n              {\n                coumnWidth: 50,\n                labelName: \"\",\n                dataKey: \"options\",\n                className: \"options-column\",\n                isCell: true,\n                cell: (rowData, dataKey) => {\n                  if (dataKey === \"options\") {\n                    const menuItem = [\n                      {\n                        title: \"Edit\",\n                        type: \"event\",\n                        handleClick: () => this.handleAddEditUser(rowData),\n                      },\n                      {\n                        title: \"View Details\",\n                        type: \"event\",\n                        handleClick: () => this.handleViewUser(rowData),\n                      },\n                    ];\n                    if (permissionList.includes(PermissionList.ADD_UPDATE_USER)) {\n                      return (\n                        <ActionDropdown\n                          menuItem={menuItem}\n                        />\n                      )\n                    }\n\n                  }\n                }\n              }\n            ]}\n            // For Pagination\n            history={this.props.history}\n            location={this.props.location}\n            totalPages={totalPage}\n            currentPage={page}\n            message={\"User list is empty\"}\n          />\n        </div>\n\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  userManagementState: state.UserManagementState\n});\nconst mapDispatchToProps = {\n  getAllUserApi,\n}\n// Customers.propTypes = {\n//   // getPosts: PropTypes.func\n// };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);"]},"metadata":{},"sourceType":"module"}