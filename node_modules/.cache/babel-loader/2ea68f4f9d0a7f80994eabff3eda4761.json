{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/utils/form/CustomCheckbox.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // import { FormControl, Form } from 'react-bootstrap'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomCheckbox = props => {\n  const {\n    classes,\n    checkboxId,\n    checkboxName,\n    valueLink,\n    options,\n    disabled,\n    isInline\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `checkbox-wrapper ${isInline ? \"inline\" : \"\"}`,\n    children: options && options.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: option.key // defaultChecked={option.isDefault}\n        ,\n        checked: option.key,\n        onChange: e => {\n          // console.log(' valueLink.requestChange', valueLink);\n          // console.log('e.target.value', e.target.value);\n          valueLink.requestCheckboxChange(e.target.value, i);\n        } // onChange={() => {\n        //   option.isChecked = !option.isChecked\n        // }}\n        ,\n        id: checkboxId,\n        name: checkboxName,\n        className: classes.inputField,\n        disabled: disabled\n      }, option.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: option.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomCheckbox;\nCustomCheckbox.propTypes = {\n  checkboxId: PropTypes.string,\n  checkboxName: PropTypes.string,\n  // valueLink: PropTypes.object.isRequired,\n  options: PropTypes.array.isRequired,\n  isInline: PropTypes.bool\n};\nCustomCheckbox.defaultProps = {\n  isInline: false\n};\nexport default CustomCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomCheckbox\");","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/utils/form/CustomCheckbox.js"],"names":["React","PropTypes","CustomCheckbox","props","classes","checkboxId","checkboxName","valueLink","options","disabled","isInline","map","option","i","key","e","requestCheckboxChange","target","value","inputField","label","propTypes","string","array","isRequired","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC9B,QAAM;AACJC,IAAAA,OADI;AACKC,IAAAA,UADL;AACiBC,IAAAA,YADjB;AAC+BC,IAAAA,SAD/B;AAC0CC,IAAAA,OAD1C;AACmDC,IAAAA,QADnD;AAC6DC,IAAAA;AAD7D,MAEFP,KAFJ;AAGA,sBACE;AAAK,IAAA,SAAS,EAAG,oBAAmBO,QAAQ,GAAG,QAAH,GAAc,EAAG,EAA7D;AAAA,cAEIF,OAAO,IACPA,OAAO,CAACG,GAAR,CAAY,CAACC,MAAD,EAASC,CAAT,kBACV;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAGE,QAAA,KAAK,EAAED,MAAM,CAACE,GAHhB,CAIE;AAJF;AAKE,QAAA,OAAO,EAAEF,MAAM,CAACE,GALlB;AAME,QAAA,QAAQ,EAAEC,CAAC,IAAI;AACb;AACA;AACAR,UAAAA,SAAS,CAACS,qBAAV,CAAgCD,CAAC,CAACE,MAAF,CAASC,KAAzC,EAAgDL,CAAhD;AACD,SAVH,CAWE;AACA;AACA;AAbF;AAcE,QAAA,EAAE,EAAER,UAdN;AAeE,QAAA,IAAI,EAAEC,YAfR;AAgBE,QAAA,SAAS,EAAEF,OAAO,CAACe,UAhBrB;AAiBE,QAAA,QAAQ,EAAEV;AAjBZ,SAEOG,MAAM,CAACE,GAFd;AAAA;AAAA;AAAA;AAAA,cADF,eAoBE;AAAA,kBAAOF,MAAM,CAACQ;AAAd;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA,OAAuCP,CAAvC;AAAA;AAAA;AAAA;AAAA,YADF;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAlCD;;KAAMX,c;AAoCNA,cAAc,CAACmB,SAAf,GAA2B;AACzBhB,EAAAA,UAAU,EAAEJ,SAAS,CAACqB,MADG;AAEzBhB,EAAAA,YAAY,EAAEL,SAAS,CAACqB,MAFC;AAGzB;AACAd,EAAAA,OAAO,EAAEP,SAAS,CAACsB,KAAV,CAAgBC,UAJA;AAKzBd,EAAAA,QAAQ,EAAET,SAAS,CAACwB;AALK,CAA3B;AAQAvB,cAAc,CAACwB,YAAf,GAA8B;AAC5BhB,EAAAA,QAAQ,EAAE;AADkB,CAA9B;AAIA,eAAeR,cAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// import { FormControl, Form } from 'react-bootstrap'\n\nconst CustomCheckbox = props => {\n  const {\n    classes, checkboxId, checkboxName, valueLink, options, disabled, isInline\n  } = props;\n  return (\n    <div className={`checkbox-wrapper ${isInline ? \"inline\" : \"\"}`}>\n      {\n        options &&\n        options.map((option, i) => (\n          <div className=\"checkbox-control\" key={i}>\n            <input\n              type=\"checkbox\"\n              key={option.key}\n              value={option.key}\n              // defaultChecked={option.isDefault}\n              checked={option.key}\n              onChange={e => {\n                // console.log(' valueLink.requestChange', valueLink);\n                // console.log('e.target.value', e.target.value);\n                valueLink.requestCheckboxChange(e.target.value, i)\n              }}\n              // onChange={() => {\n              //   option.isChecked = !option.isChecked\n              // }}\n              id={checkboxId}\n              name={checkboxName}\n              className={classes.inputField}\n              disabled={disabled}\n            />\n            <span>{option.label}</span>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nCustomCheckbox.propTypes = {\n  checkboxId: PropTypes.string,\n  checkboxName: PropTypes.string,\n  // valueLink: PropTypes.object.isRequired,\n  options: PropTypes.array.isRequired,\n  isInline: PropTypes.bool,\n};\n\nCustomCheckbox.defaultProps = {\n  isInline: false,\n};\n\nexport default CustomCheckbox;\n"]},"metadata":{},"sourceType":"module"}