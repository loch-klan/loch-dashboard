{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/utils/form/Form.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BaseReactComponent from \"./BaseReactComponent\";\nimport FormContext from \"./FormContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends BaseReactComponent {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      // console.log('onSubmit');\n      event.preventDefault();\n\n      if (this.validateAll()) {\n        this.submitButtons.forEach(submitButton => {\n          submitButton.updateInProgress(true);\n        });\n        this.props.onValidSubmit(this.submitProgressCallback, event);\n      }\n\n      return false;\n    };\n\n    this.validateAll = () => {\n      // console.log('this.elements', this.elements);\n      const failedElements = [];\n      this.elements.forEach(element => {\n        if (!element.validate()) {\n          failedElements.push(element);\n        }\n      });\n      return failedElements.length === 0;\n    };\n\n    this.elements = [];\n    this.submitButtons = [];\n    this.state = {};\n    this.formContextValue = {\n      registerElement: element => {\n        this.elements.push(element);\n      },\n      unRegisterElement: element => {\n        this.elements.splice(this.elements.indexOf(element), 1);\n      },\n      registerSubmitButton: submitButton => {\n        this.submitButtons.push(submitButton);\n      },\n      unRegisterSubmitButton: submitButton => {\n        this.submitButtons.splice(this.submitButtons.indexOf(submitButton));\n      }\n    };\n    this.submitProgressCallback = {\n      done: () => {\n        this.submitButtons.forEach(submitButton => {\n          submitButton.updateInProgress(false);\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(FormContext.Provider, {\n      value: this.formContextValue,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"w-percent-100 flex-full\",\n        autoComplete: \"off\",\n        onSubmit: this.onSubmit,\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nForm.propTypes = {\n  classes: PropTypes.object,\n  onValidSubmit: PropTypes.func.isRequired\n};\nForm.defaultProps = {};\nexport default Form;","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/utils/form/Form.js"],"names":["React","PropTypes","BaseReactComponent","FormContext","Form","constructor","props","onSubmit","event","preventDefault","validateAll","submitButtons","forEach","submitButton","updateInProgress","onValidSubmit","submitProgressCallback","failedElements","elements","element","validate","push","length","state","formContextValue","registerElement","unRegisterElement","splice","indexOf","registerSubmitButton","unRegisterSubmitButton","done","render","children","propTypes","classes","object","func","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,IAAN,SAAmBF,kBAAnB,CAAsC;AACpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA6BnBC,QA7BmB,GA6BRC,KAAK,IAAI;AAClB;AACAA,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAI,KAAKC,WAAL,EAAJ,EAAwB;AACtB,aAAKC,aAAL,CAAmBC,OAAnB,CAA2BC,YAAY,IAAI;AACzCA,UAAAA,YAAY,CAACC,gBAAb,CAA8B,IAA9B;AACD,SAFD;AAGA,aAAKR,KAAL,CAAWS,aAAX,CAAyB,KAAKC,sBAA9B,EAAsDR,KAAtD;AACD;;AACD,aAAO,KAAP;AACD,KAvCkB;;AAAA,SAyCnBE,WAzCmB,GAyCL,MAAM;AAClB;AACA,YAAMO,cAAc,GAAG,EAAvB;AACA,WAAKC,QAAL,CAAcN,OAAd,CAAsBO,OAAO,IAAI;AAC/B,YAAI,CAACA,OAAO,CAACC,QAAR,EAAL,EAAyB;AACvBH,UAAAA,cAAc,CAACI,IAAf,CAAoBF,OAApB;AACD;AACF,OAJD;AAKA,aAAOF,cAAc,CAACK,MAAf,KAA0B,CAAjC;AACD,KAlDkB;;AAEjB,SAAKJ,QAAL,GAAgB,EAAhB;AACA,SAAKP,aAAL,GAAqB,EAArB;AACA,SAAKY,KAAL,GAAa,EAAb;AACA,SAAKC,gBAAL,GAAwB;AACtBC,MAAAA,eAAe,EAAEN,OAAO,IAAI;AAC1B,aAAKD,QAAL,CAAcG,IAAd,CAAmBF,OAAnB;AACD,OAHqB;AAItBO,MAAAA,iBAAiB,EAAEP,OAAO,IAAI;AAC5B,aAAKD,QAAL,CAAcS,MAAd,CAAqB,KAAKT,QAAL,CAAcU,OAAd,CAAsBT,OAAtB,CAArB,EAAqD,CAArD;AACD,OANqB;AAOtBU,MAAAA,oBAAoB,EAAEhB,YAAY,IAAI;AACpC,aAAKF,aAAL,CAAmBU,IAAnB,CAAwBR,YAAxB;AACD,OATqB;AAUtBiB,MAAAA,sBAAsB,EAAEjB,YAAY,IAAI;AACtC,aAAKF,aAAL,CAAmBgB,MAAnB,CAA0B,KAAKhB,aAAL,CAAmBiB,OAAnB,CAA2Bf,YAA3B,CAA1B;AACD;AAZqB,KAAxB;AAeA,SAAKG,sBAAL,GAA8B;AAC5Be,MAAAA,IAAI,EAAE,MAAM;AACV,aAAKpB,aAAL,CAAmBC,OAAnB,CAA2BC,YAAY,IAAI;AACzCA,UAAAA,YAAY,CAACC,gBAAb,CAA8B,KAA9B;AACD,SAFD;AAGD;AAL2B,KAA9B;AAOD;;AAyBDkB,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,KAAKR,gBAAlC;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,yBADZ;AAEE,QAAA,YAAY,EAAC,KAFf;AAGE,QAAA,QAAQ,EAAE,KAAKjB,QAHjB;AAAA,kBAKG,KAAKD,KAAL,CAAW2B;AALd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AApEmC;;AAuEtC7B,IAAI,CAAC8B,SAAL,GAAiB;AACfC,EAAAA,OAAO,EAAElC,SAAS,CAACmC,MADJ;AAEfrB,EAAAA,aAAa,EAAEd,SAAS,CAACoC,IAAV,CAAeC;AAFf,CAAjB;AAKAlC,IAAI,CAACmC,YAAL,GAAoB,EAApB;AAEA,eAAenC,IAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BaseReactComponent from \"./BaseReactComponent\";\nimport FormContext from \"./FormContext\";\n\nclass Form extends BaseReactComponent {\n  constructor(props) {\n    super(props);\n    this.elements = [];\n    this.submitButtons = [];\n    this.state = {};\n    this.formContextValue = {\n      registerElement: element => {\n        this.elements.push(element);\n      },\n      unRegisterElement: element => {\n        this.elements.splice(this.elements.indexOf(element), 1);\n      },\n      registerSubmitButton: submitButton => {\n        this.submitButtons.push(submitButton);\n      },\n      unRegisterSubmitButton: submitButton => {\n        this.submitButtons.splice(this.submitButtons.indexOf(submitButton));\n      }\n    };\n\n    this.submitProgressCallback = {\n      done: () => {\n        this.submitButtons.forEach(submitButton => {\n          submitButton.updateInProgress(false);\n        });\n      }\n    };\n  }\n\n  onSubmit = event => {\n    // console.log('onSubmit');\n    event.preventDefault();\n    if (this.validateAll()) {\n      this.submitButtons.forEach(submitButton => {\n        submitButton.updateInProgress(true);\n      });\n      this.props.onValidSubmit(this.submitProgressCallback, event);\n    }\n    return false;\n  };\n\n  validateAll = () => {\n    // console.log('this.elements', this.elements);\n    const failedElements = [];\n    this.elements.forEach(element => {\n      if (!element.validate()) {\n        failedElements.push(element);\n      }\n    });\n    return failedElements.length === 0;\n  };\n\n  render() {\n    return (\n      <FormContext.Provider value={this.formContextValue}>\n        <form\n          className=\"w-percent-100 flex-full\"\n          autoComplete=\"off\"\n          onSubmit={this.onSubmit}\n        >\n          {this.props.children}\n        </form>\n        {/* <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        {this.props.children}\n        </Form> */}\n      </FormContext.Provider>\n    );\n  }\n}\n\nForm.propTypes = {\n  classes: PropTypes.object,\n  onValidSubmit: PropTypes.func.isRequired\n};\n\nForm.defaultProps = {};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}