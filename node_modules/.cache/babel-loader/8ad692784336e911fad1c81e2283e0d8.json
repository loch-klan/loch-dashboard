{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { postLoginInstance } from \"../../utils\";\nimport { API_LIMIT, START_PAGE } from \"../../utils/Constant\";\nimport { calculateTotalPageCount } from \"../../utils/ReusableFunctions\";\nexport const getAllIotApi = function (ctx) {\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : START_PAGE;\n  return function (dispatch, getState) {\n    let data = new URLSearchParams();\n    data.append(\"start\", page * API_LIMIT || START_PAGE);\n    data.append(\"limit\", API_LIMIT);\n    data.append(\"conditions\", JSON.stringify(ctx.state.conditions || []));\n    data.append(\"sorts\", JSON.stringify([]));\n    postLoginInstance.post('/offering/telematics/search-telematics', data).then(res => {\n      ctx.setState({\n        iotList: res.data.data.telematics.results,\n        totalCount: res.data.data.telematics.totalCount,\n        totalPage: calculateTotalPageCount(res.data.data.telematics.totalCount),\n        page: page\n      });\n    }).catch(err => {\n      console.log('Catch', err);\n    });\n  };\n};\nexport const getIotApi = ctx => {\n  return function (dispatch, getState) {\n    postLoginInstance.post('/offering/telematics/get-all-telematics').then(res => {\n      let iotModalOptions = res.data.data.iot_devices.map(item => ({\n        label: item.serialNo,\n        value: item.id\n      }));\n      ctx.setState({\n        iotModalOptions: iotModalOptions\n      });\n    }).catch(err => {\n      console.log('Catch', err);\n    });\n  };\n};\nexport const getIotModelApi = ctx => {\n  return function (dispatch, getState) {\n    postLoginInstance.post('/offering/telematics/get-all-telematics-model').then(res => {\n      let iotModalOptions = res.data.data.iot_models.map(item => ({\n        label: item.modelCompany + \" - \" + item.modelName,\n        value: item.id\n      }));\n      ctx.setState({\n        iotModalOptions: iotModalOptions\n      });\n    }).catch(err => {\n      console.log('Catch', err);\n    });\n  };\n};\nexport const addUpdateIotApi = (data, cb) => {\n  return postLoginInstance.post(\"/offering/telematics/add-update-telematics\", data).then(res => {\n    if (!res.data.error) {\n      cb();\n      toast.success(res.data.message || \"Something went wrong\");\n    } else {\n      toast.error(res.data.message || \"Something went wrong\");\n    }\n  }).catch(err => {\n    toast.error(err.message || \"Something went wrong\");\n  });\n};","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/iot/Api.js"],"names":["toast","postLoginInstance","API_LIMIT","START_PAGE","calculateTotalPageCount","getAllIotApi","ctx","page","dispatch","getState","data","URLSearchParams","append","JSON","stringify","state","conditions","post","then","res","setState","iotList","telematics","results","totalCount","totalPage","catch","err","console","log","getIotApi","iotModalOptions","iot_devices","map","item","label","serialNo","value","id","getIotModelApi","iot_models","modelCompany","modelName","addUpdateIotApi","cb","error","success","message"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\nimport { postLoginInstance } from \"../../utils\";\nimport { API_LIMIT, START_PAGE } from \"../../utils/Constant\";\nimport { calculateTotalPageCount } from \"../../utils/ReusableFunctions\";\n\nexport const getAllIotApi = (ctx, page = START_PAGE) => {\n  return function (dispatch, getState) {\n    let data = new URLSearchParams();\n    data.append(\"start\", (page * API_LIMIT) || START_PAGE);\n    data.append(\"limit\", API_LIMIT);\n    data.append(\"conditions\", JSON.stringify(ctx.state.conditions || []));\n    data.append(\"sorts\", JSON.stringify([]));\n\n    postLoginInstance.post('/offering/telematics/search-telematics', data)\n      .then(res => {\n        ctx.setState({\n          iotList: res.data.data.telematics.results,\n          totalCount: res.data.data.telematics.totalCount,\n          totalPage: calculateTotalPageCount(res.data.data.telematics.totalCount),\n          page: page\n        })\n      })\n      .catch((err) => {\n        console.log('Catch', err);\n      })\n  };\n}\n\n\nexport const getIotApi = (ctx) => {\n  return function (dispatch, getState) {\n    postLoginInstance.post('/offering/telematics/get-all-telematics')\n      .then(res => {\n        let iotModalOptions = res.data.data.iot_devices.map(item => ({\n          label: item.serialNo,\n          value: item.id,\n        }))\n        ctx.setState({\n          iotModalOptions: iotModalOptions\n        })\n      })\n      .catch((err) => {\n        console.log('Catch', err);\n      })\n  };\n}\n\nexport const getIotModelApi = (ctx) => {\n  return function (dispatch, getState) {\n    postLoginInstance.post('/offering/telematics/get-all-telematics-model')\n      .then(res => {\n        let iotModalOptions = res.data.data.iot_models.map(item => ({\n          label: item.modelCompany + \" - \" + item.modelName,\n          value: item.id,\n        }))\n        ctx.setState({\n          iotModalOptions: iotModalOptions\n        })\n      })\n      .catch((err) => {\n        console.log('Catch', err);\n      })\n  };\n}\n\n\nexport const addUpdateIotApi = (data, cb) => {\n  return postLoginInstance.post(\"/offering/telematics/add-update-telematics\", data)\n    .then((res) => {\n      if (!res.data.error) {\n        cb();\n        toast.success(res.data.message || \"Something went wrong\")\n      } else {\n        toast.error(res.data.message || \"Something went wrong\")\n      }\n    })\n    .catch((err) => {\n      toast.error(err.message || \"Something went wrong\");\n    });\n};\n"]},"metadata":{},"sourceType":"module"}