{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/app/common/ForgotPassword.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { BaseReactComponent, CustomTextControl, Form, FormElement, FormSubmitButton, FormValidator } from '../../utils/form';\nimport { CustomModal } from '../common';\nimport { forgotPasswordApi } from './Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ForgotPassword extends BaseReactComponent {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = () => {\n      const data = new URLSearchParams();\n      data.append('email', this.state.email);\n      forgotPasswordApi(data, this.props.handleClose);\n    };\n\n    this.state = {\n      errorMessage: \"\",\n      email: \"\",\n      inProgress: false\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(CustomModal, {\n      show: this.props.show,\n      onHide: this.props.handleClose,\n      title: \"Forgot Password\",\n      modalClass: \"change-password\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onValidSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormElement, {\n          valueLink: this.linkState(this, \"email\"),\n          label: \"Email\",\n          required: true,\n          validations: [{\n            validate: FormValidator.isRequired,\n            message: \"Please enter email address\"\n          }, {\n            validate: FormValidator.isEmail,\n            message: \"Please enter correct email\"\n          }],\n          control: {\n            type: CustomTextControl,\n            settings: {\n              placeholder: \"Enter Registered Email\"\n            }\n          },\n          classes: {\n            inputField: \"custom-input\",\n            label: \"custom-label\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), this.state.errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: this.state.errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(FormSubmitButton, {\n            customClass: \"btn black-btn\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nForgotPassword.propTypes = {\n  show: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\nexport default ForgotPassword;","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/common/ForgotPassword.js"],"names":["React","PropTypes","BaseReactComponent","CustomTextControl","Form","FormElement","FormSubmitButton","FormValidator","CustomModal","forgotPasswordApi","ForgotPassword","constructor","props","onSubmit","data","URLSearchParams","append","state","email","handleClose","errorMessage","inProgress","componentDidMount","render","show","linkState","validate","isRequired","message","isEmail","type","settings","placeholder","inputField","label","propTypes","bool","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,EAAgDC,IAAhD,EAAsDC,WAAtD,EAAmEC,gBAAnE,EAAqFC,aAArF,QAA0G,kBAA1G;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,iBAAT,QAAkC,OAAlC;;;AAEA,MAAMC,cAAN,SAA6BR,kBAA7B,CAAgD;AAC9CS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,QAVmB,GAUR,MAAM;AACf,YAAMC,IAAI,GAAG,IAAIC,eAAJ,EAAb;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqB,KAAKC,KAAL,CAAWC,KAAhC;AACAT,MAAAA,iBAAiB,CAACK,IAAD,EAAO,KAAKF,KAAL,CAAWO,WAAlB,CAAjB;AACD,KAdkB;;AAEjB,SAAKF,KAAL,GAAa;AACXG,MAAAA,YAAY,EAAE,EADH;AAEXF,MAAAA,KAAK,EAAE,EAFI;AAGXG,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKD;;AACDC,EAAAA,iBAAiB,GAAG,CAAG;;AAOvBC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,WAAD;AACE,MAAA,IAAI,EAAE,KAAKX,KAAL,CAAWY,IADnB;AAEE,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWO,WAFrB;AAGE,MAAA,KAAK,EAAE,iBAHT;AAIE,MAAA,UAAU,EAAE,iBAJd;AAAA,6BAME,QAAC,IAAD;AAAM,QAAA,aAAa,EAAE,KAAKN,QAA1B;AAAA,gCACE,QAAC,WAAD;AACE,UAAA,SAAS,EAAE,KAAKY,SAAL,CAAe,IAAf,EAAqB,OAArB,CADb;AAEE,UAAA,KAAK,EAAC,OAFR;AAGE,UAAA,QAAQ,MAHV;AAIE,UAAA,WAAW,EAAE,CACX;AACEC,YAAAA,QAAQ,EAAEnB,aAAa,CAACoB,UAD1B;AAEEC,YAAAA,OAAO,EAAE;AAFX,WADW,EAKX;AACEF,YAAAA,QAAQ,EAAEnB,aAAa,CAACsB,OAD1B;AAEED,YAAAA,OAAO,EAAE;AAFX,WALW,CAJf;AAcE,UAAA,OAAO,EAAE;AACPE,YAAAA,IAAI,EAAE3B,iBADC;AAEP4B,YAAAA,QAAQ,EAAE;AACRC,cAAAA,WAAW,EAAE;AADL;AAFH,WAdX;AAoBE,UAAA,OAAO,EAAE;AACPC,YAAAA,UAAU,EAAE,cADL;AAEPC,YAAAA,KAAK,EAAE;AAFA;AApBX;AAAA;AAAA;AAAA;AAAA,gBADF,EA4BI,KAAKjB,KAAL,CAAWG,YAAX,iBAA2B;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA,oBAAsB,KAAKH,KAAL,CAAWG;AAAjC;AAAA;AAAA;AAAA;AAAA,gBA5B/B,eA8BE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE,QAAC,gBAAD;AAAkB,YAAA,WAAW,EAAC,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YADF;AA2CD;;AA5D6C;;AA+DhDV,cAAc,CAACyB,SAAf,GAA2B;AACzBX,EAAAA,IAAI,EAAEvB,SAAS,CAACmC,IAAV,CAAeT,UADI;AAEzBR,EAAAA,WAAW,EAAElB,SAAS,CAACoC,IAAV,CAAeV;AAFH,CAA3B;AAIA,eAAejB,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BaseReactComponent, CustomTextControl, Form, FormElement, FormSubmitButton, FormValidator } from '../../utils/form';\nimport { CustomModal } from '../common';\nimport { forgotPasswordApi } from './Api';\n\nclass ForgotPassword extends BaseReactComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorMessage: \"\",\n      email: \"\",\n      inProgress: false\n    }\n  }\n  componentDidMount() { }\n\n  onSubmit = () => {\n    const data = new URLSearchParams();\n    data.append('email', this.state.email);\n    forgotPasswordApi(data, this.props.handleClose);\n  }\n  render() {\n    return (\n      <CustomModal\n        show={this.props.show}\n        onHide={this.props.handleClose}\n        title={\"Forgot Password\"}\n        modalClass={\"change-password\"}\n      >\n        <Form onValidSubmit={this.onSubmit}>\n          <FormElement\n            valueLink={this.linkState(this, \"email\")}\n            label=\"Email\"\n            required\n            validations={[\n              {\n                validate: FormValidator.isRequired,\n                message: \"Please enter email address\"\n              },\n              {\n                validate: FormValidator.isEmail,\n                message: \"Please enter correct email\"\n              }\n            ]}\n            control={{\n              type: CustomTextControl,\n              settings: {\n                placeholder: \"Enter Registered Email\",\n              }\n            }}\n            classes={{\n              inputField: \"custom-input\",\n              label: \"custom-label\"\n            }}\n          />\n\n          {\n            this.state.errorMessage && <p className=\"error\">{this.state.errorMessage}</p>\n          }\n          <div className=\"submit-wrapper\">\n            <FormSubmitButton customClass=\"btn black-btn\">Submit</FormSubmitButton>\n          </div>\n        </Form>\n      </CustomModal>\n    )\n  }\n}\n\nForgotPassword.propTypes = {\n  show: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired\n}\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}