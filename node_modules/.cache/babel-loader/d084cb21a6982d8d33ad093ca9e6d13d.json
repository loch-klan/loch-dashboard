{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/app/franchise/ViewFranchiseLocation.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { AccountType, PermissionList, START_PAGE } from '../../utils/Constant';\nimport { getAssignedPermission, replaceHistory } from '../../utils/ReusableFunctions';\nimport { ComponentHeader } from '../common';\nimport { Col, Row } from \"react-bootstrap\";\nimport { BaseReactComponent, FormElement, FormValidator, SelectControl, Form } from '../../utils/form';\nimport { removeVehiclesFromFranchiseLocationApi } from '../vehicles/Api';\nimport { getFranchiseLocationByIdApi } from './Api';\nimport { Button, Image } from \"react-bootstrap\";\nimport VehicleAllocationModal from './_utils/VehicleAllocationModal';\nimport InformationModal from '../common/InformationModal';\nimport CustomTable from '../../utils/commonComponent/CustomTable';\nimport { getUserAccountType } from '../../utils/ManageToken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ViewFranchiseLocation extends BaseReactComponent {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.handleVehicleAllocation = () => {\n      this.setState({\n        showAllocationModal: !this.state.showAllocationModal\n      });\n    };\n\n    this.handleConfirmation = function () {\n      let rowData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n      _this.setState({\n        showConfirmationModal: !_this.state.showConfirmationModal,\n        vehicleData: rowData\n      });\n    };\n\n    this.removeVehicle = () => {\n      const data = new URLSearchParams();\n      data.append(\"vehicle_id\", this.state.vehicleData.id);\n      data.append(\"franchise_location_id\", this.state.locationId);\n      removeVehiclesFromFranchiseLocationApi(data, this.handleConfirmation, this);\n    };\n\n    const search = props.location.search; // console.log('props',props);\n\n    const params = new URLSearchParams(search);\n    const page = params.get(\"p\");\n    const locationId = props.match.params.locationId;\n    const userDetails = JSON.parse(localStorage.getItem('userDetails')); // const data = props.location.state ? props.location.state.data : null;\n\n    this.state = {\n      userDetails,\n      locationId,\n      vehiclesList: [],\n      totalPages: \"\",\n      data: \"\",\n      // conditions: [{\"key\": \"SEARCH_BY_FRANCHISE_LOCATION_ID\", \"value\": data.id}],\n      page: page ? parseInt(page, 10) : START_PAGE + 1,\n      showAllocationModal: false,\n      showConfirmationModal: false\n    };\n  }\n\n  componentDidMount() {\n    // if(this.state.userDetails.user_account_type !== AccountType.COMPANY){\n    //   this.props.getAllFranchiseLocationApi(this);\n    // } else {\n    //   this.props.getAllFranchiseApi(this, -1);\n    // }\n    getFranchiseLocationByIdApi(this);\n    this.props.history.replace({\n      search: `?p=${this.state.page}`\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevParams = new URLSearchParams(prevProps.location.search);\n    const prevPage = parseInt(prevParams.get('p'), 10) || 1;\n    const params = new URLSearchParams(this.props.location.search);\n    const page = parseInt(params.get('p'), 10) || 1;\n    const search = params.get('search') || \"\";\n\n    if (prevPage !== page) {\n      // this.setState({ page })\n      if (search) {// this.props.getAllFranchiseLocationApi(this);\n      } else {// this.props.getAllFranchiseLocationApi(this, page - 1);\n      }\n    }\n  }\n\n  render() {\n    const {\n      data,\n      page,\n      totalPage,\n      userDetails,\n      franchiseOptionsList,\n      vehiclesList\n    } = this.state;\n    const permissionList = getAssignedPermission();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ComponentHeader, {\n        backArrowBtn: true,\n        history: this.props.history,\n        title: \"View Franchise Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 18\n      }, this), this.state.showAllocationModal && /*#__PURE__*/_jsxDEV(VehicleAllocationModal, {\n        show: this.state.showAllocationModal,\n        handleClose: this.handleVehicleAllocation,\n        franchiseId: this.state.data.franchise_account_id,\n        locationId: this.state.data.id,\n        isFranchiseLocation: true,\n        ctx: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), this.state.showConfirmationModal && /*#__PURE__*/_jsxDEV(InformationModal, {\n        show: this.state.showConfirmationModal,\n        handleClose: this.handleConfirmation,\n        type: \"warning\",\n        actionText: \"remove\",\n        handleArchive: this.removeVehicle,\n        text: this.state.vehicleData && this.state.vehicleData.registrationNo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-details-wrapper add-edit-customer-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content view-detail-page\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"basic-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Basic Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"regular\",\n                    children: \"Franchise Id\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"regular lg\",\n                    children: data ? data.franchise_account_id : \"NA\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 3,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"regular\",\n                    children: \"Area Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"regular lg\",\n                    children: data ? data.area_details.name : \"NA\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 5,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"regular\",\n                    children: \"Area Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"regular lg\",\n                    children: data ? data.location_details.formatted_address : \"NA\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"basic-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"map-vehicle-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Assigned Vechicles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), getUserAccountType() === AccountType.FRANCHISE && /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn black-btn\",\n                onClick: this.handleVehicleAllocation,\n                children: \"Add Vehicle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-table-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(CustomTable, {\n                tableData: vehiclesList,\n                columnList: [{\n                  coumnWidth: 250,\n                  labelName: \"Model Name\",\n                  dataKey: \"modelInfo\",\n                  className: \"red-hat-display-bold\",\n                  isCell: true,\n                  cell: (rowData, dataKey) => {\n                    if (dataKey === \"modelInfo\") {\n                      return rowData.modelInfo ? rowData.modelInfo.modelName : \"-\";\n                    }\n                  }\n                }, {\n                  coumnWidth: 250,\n                  labelName: \"Chassis Number\",\n                  dataKey: \"chassisNo\",\n                  className: \"\",\n                  isCell: true,\n                  cell: (rowData, dataKey) => {\n                    if (dataKey === \"chassisNo\") {\n                      return rowData.chassisNo;\n                    }\n                  }\n                }, {\n                  coumnWidth: 250,\n                  labelName: \"Registration number\",\n                  dataKey: \"registrationNo\",\n                  className: \"\",\n                  isCell: true,\n                  cell: (rowData, dataKey) => {\n                    if (dataKey === \"registrationNo\") {\n                      return rowData.registrationNo || \"NA\";\n                    }\n                  }\n                }, {\n                  coumnWidth: 250,\n                  labelName: \"\",\n                  dataKey: \"options\",\n                  className: \"options-column\",\n                  isCell: true,\n                  cell: (rowData, dataKey) => {\n                    if (dataKey === \"options\" && permissionList.includes(PermissionList.DELETE_FRANCHISE_LOCATION)) {\n                      return /*#__PURE__*/_jsxDEV(Button, {\n                        className: \"btn secondary-btn option-btn\",\n                        onClick: () => this.handleConfirmation(rowData),\n                        children: \"Remove\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 212,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  }\n                }] // For Pagination\n                ,\n                history: this.props.history,\n                location: this.props.location,\n                totalPages: this.state.totalPages,\n                currentPage: this.state.page - 1 // because of 0 based indexing\n                ,\n                message: \"Vehicle list is empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  franchiseState: state.FranchiseState\n});\n\nconst mapDispatchToProps = {\n  getFranchiseLocationByIdApi\n};\nViewFranchiseLocation.propTypes = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewFranchiseLocation);","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/franchise/ViewFranchiseLocation.js"],"names":["React","connect","AccountType","PermissionList","START_PAGE","getAssignedPermission","replaceHistory","ComponentHeader","Col","Row","BaseReactComponent","FormElement","FormValidator","SelectControl","Form","removeVehiclesFromFranchiseLocationApi","getFranchiseLocationByIdApi","Button","Image","VehicleAllocationModal","InformationModal","CustomTable","getUserAccountType","ViewFranchiseLocation","constructor","props","handleVehicleAllocation","setState","showAllocationModal","state","handleConfirmation","rowData","showConfirmationModal","vehicleData","removeVehicle","data","URLSearchParams","append","id","locationId","search","location","params","page","get","match","userDetails","JSON","parse","localStorage","getItem","vehiclesList","totalPages","parseInt","componentDidMount","history","replace","componentDidUpdate","prevProps","prevState","prevParams","prevPage","render","totalPage","franchiseOptionsList","permissionList","franchise_account_id","registrationNo","area_details","name","location_details","formatted_address","FRANCHISE","coumnWidth","labelName","dataKey","className","isCell","cell","modelInfo","modelName","chassisNo","includes","DELETE_FRANCHISE_LOCATION","mapStateToProps","franchiseState","FranchiseState","mapDispatchToProps","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport { AccountType, PermissionList, START_PAGE } from '../../utils/Constant';\nimport { getAssignedPermission, replaceHistory } from '../../utils/ReusableFunctions';\nimport { ComponentHeader } from '../common';\nimport { Col, Row } from \"react-bootstrap\";\nimport { BaseReactComponent,FormElement, FormValidator, SelectControl, Form } from '../../utils/form';\nimport { removeVehiclesFromFranchiseLocationApi } from '../vehicles/Api';\nimport { getFranchiseLocationByIdApi } from './Api';\nimport { Button, Image } from \"react-bootstrap\";\nimport VehicleAllocationModal from './_utils/VehicleAllocationModal';\nimport InformationModal from '../common/InformationModal';\nimport CustomTable from '../../utils/commonComponent/CustomTable';\nimport { getUserAccountType } from '../../utils/ManageToken';\n\nclass ViewFranchiseLocation extends BaseReactComponent {\n    constructor(props) {\n        super(props);\n        const search = props.location.search;\n        // console.log('props',props);\n        const params = new URLSearchParams(search);\n        const page = params.get(\"p\");\n        const locationId = props.match.params.locationId;\n        const userDetails = JSON.parse(localStorage.getItem('userDetails'));\n        // const data = props.location.state ? props.location.state.data : null;\n        this.state = {\n          userDetails,\n            locationId,\n            vehiclesList: [],\n            totalPages: \"\",\n            data: \"\",\n            // conditions: [{\"key\": \"SEARCH_BY_FRANCHISE_LOCATION_ID\", \"value\": data.id}],\n            page: page ? parseInt(page, 10) : START_PAGE + 1,\n            showAllocationModal: false,\n      showConfirmationModal: false,\n        }\n    }\n\n    componentDidMount() {\n      // if(this.state.userDetails.user_account_type !== AccountType.COMPANY){\n      //   this.props.getAllFranchiseLocationApi(this);\n      // } else {\n      //   this.props.getAllFranchiseApi(this, -1);\n      // }\n      getFranchiseLocationByIdApi(this);\n\n        this.props.history.replace({\n            search: `?p=${this.state.page}`\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const prevParams = new URLSearchParams(prevProps.location.search);\n        const prevPage = parseInt(prevParams.get('p'), 10) || 1;\n\n        const params = new URLSearchParams(this.props.location.search);\n        const page = parseInt(params.get('p'), 10) || 1;\n        const search = params.get('search') || \"\";\n\n        if (prevPage !== page) {\n            // this.setState({ page })\n            if (search) {\n                // this.props.getAllFranchiseLocationApi(this);\n            } else {\n                // this.props.getAllFranchiseLocationApi(this, page - 1);\n            }\n        }\n    }\n    handleVehicleAllocation = () => {\n      this.setState({\n        showAllocationModal: !this.state.showAllocationModal,\n      });\n    };\n    handleConfirmation = (rowData = \"\") => {\n      this.setState({\n        showConfirmationModal: !this.state.showConfirmationModal,\n        vehicleData: rowData,\n      });\n    };\n\n    removeVehicle = () => {\n      const data = new URLSearchParams();\n      data.append(\"vehicle_id\", this.state.vehicleData.id);\n      data.append(\"franchise_location_id\", this.state.locationId);\n      removeVehiclesFromFranchiseLocationApi(data, this.handleConfirmation, this);\n    };\n\n\n    render() {\n        const { data, page, totalPage, userDetails, franchiseOptionsList, vehiclesList } = this.state;\n        const permissionList = getAssignedPermission();\n        return (\n            <>\n                 <ComponentHeader\n          backArrowBtn={true}\n          history={this.props.history}\n          title={\"View Franchise Location\"}\n        />\n         {this.state.showAllocationModal && (\n          <VehicleAllocationModal\n            show={this.state.showAllocationModal}\n            handleClose={this.handleVehicleAllocation}\n            franchiseId={this.state.data.franchise_account_id}\n            locationId={this.state.data.id}\n            isFranchiseLocation={true}\n            ctx={this}\n          />\n        )}\n        {this.state.showConfirmationModal && (\n          <InformationModal\n            show={this.state.showConfirmationModal}\n            handleClose={this.handleConfirmation}\n            type=\"warning\"\n            actionText=\"remove\"\n            handleArchive={this.removeVehicle}\n            text={\n              this.state.vehicleData && this.state.vehicleData.registrationNo\n            }\n          />\n        )}\n        {\n\n          <div className=\"order-details-wrapper add-edit-customer-wrapper\">\n          <div className=\"content view-detail-page\">\n            <div className=\"basic-details\">\n              <h2>Basic Details</h2>\n              <Row>\n              <Col sm={4} xs={12}>\n                    <div className=\"detail\">\n                      <h4 className=\"regular\">Franchise Id</h4>\n                      <h3 className=\"regular lg\">{data ? data.franchise_account_id : \"NA\"}</h3>\n                    </div>\n                  </Col>\n                  <Col sm={3} xs={12}>\n                    <div className=\"detail\">\n                      <h4 className=\"regular\">Area Name</h4>\n                      <h3 className=\"regular lg\">{data ? data.area_details.name : \"NA\"}</h3>\n                    </div>\n                  </Col>\n                  <Col sm={5} xs={12}>\n                    <div className=\"detail\">\n                      <h4 className=\"regular\">Area Name</h4>\n                      <h3 className=\"regular lg\">{data ? data.location_details.formatted_address : \"NA\"}</h3>\n                    </div>\n                  </Col>\n                  </Row>\n              </div>\n<hr/>\n<div className=\"basic-details\">\n<div className=\"map-vehicle-wrapper\">\n                  <h2>Assigned Vechicles</h2>\n                  {\n                    getUserAccountType() === AccountType.FRANCHISE &&\n                    <Button\n                    className=\"btn black-btn\"\n                    onClick={this.handleVehicleAllocation}\n                  >\n                    Add Vehicle\n                  </Button>}\n                </div>\n                <div className=\"custom-table-wrapper\">\n                  <CustomTable\n                    tableData={vehiclesList}\n                    columnList={[\n                      {\n                        coumnWidth: 250,\n                        labelName: \"Model Name\",\n                        dataKey: \"modelInfo\",\n                        className: \"red-hat-display-bold\",\n                        isCell: true,\n                        cell: (rowData, dataKey) => {\n                          if (dataKey === \"modelInfo\") {\n                            return rowData.modelInfo\n                              ? rowData.modelInfo.modelName\n                              : \"-\";\n                          }\n                        },\n                      },\n                      {\n                        coumnWidth: 250,\n                        labelName: \"Chassis Number\",\n                        dataKey: \"chassisNo\",\n                        className: \"\",\n                        isCell: true,\n                        cell: (rowData, dataKey) => {\n                          if (dataKey === \"chassisNo\") {\n                            return rowData.chassisNo;\n                          }\n                        },\n                      },\n                      {\n                        coumnWidth: 250,\n                        labelName: \"Registration number\",\n                        dataKey: \"registrationNo\",\n                        className: \"\",\n                        isCell: true,\n                        cell: (rowData, dataKey) => {\n                          if (dataKey === \"registrationNo\") {\n                            return rowData.registrationNo || \"NA\";\n                          }\n                        },\n                      },\n                      {\n                        coumnWidth: 250,\n                        labelName: \"\",\n                        dataKey: \"options\",\n                        className: \"options-column\",\n                        isCell: true,\n                        cell: (rowData, dataKey) => {\n                          if (dataKey === \"options\" &&  permissionList.includes(PermissionList.DELETE_FRANCHISE_LOCATION)) {\n                            return (\n                              <Button\n                                className=\"btn secondary-btn option-btn\"\n                                onClick={() => this.handleConfirmation(rowData)}\n                              >\n                                Remove\n                              </Button>\n                            );\n                          }\n                        },\n                      },\n                    ]}\n                    // For Pagination\n                    history={this.props.history}\n                    location={this.props.location}\n                    totalPages={this.state.totalPages}\n                    currentPage={this.state.page - 1} // because of 0 based indexing\n                    message={\"Vehicle list is empty\"}\n                  />\n                  </div>\n</div>\n              </div>\n              </div>\n        }\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    franchiseState: state.FranchiseState\n});\nconst mapDispatchToProps = {\n  getFranchiseLocationByIdApi\n}\nViewFranchiseLocation.propTypes = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewFranchiseLocation);"]},"metadata":{},"sourceType":"module"}