{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/app/coupons/Coupons.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport CustomTable from '../../utils/commonComponent/CustomTable';\nimport { PermissionList, START_PAGE, CouponTypes } from '../../utils/Constant';\nimport { getAssignedPermission, replaceHistory, formatDate } from '../../utils/ReusableFunctions';\nimport { ComponentHeader } from '../common';\nimport ActionDropdown from '../common/_utils/ActionDropdown';\nimport { getAllCouponsApi } from './Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Coupons extends Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.handleFilter = () => {\n      this.setState({\n        showFilter: !this.state.showFilter\n      });\n    };\n\n    this.handleAddCoupons = function () {\n      let rowData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n      if (rowData) {\n        _this.props.history.push({\n          pathname: `/coupons/edit-coupon/${rowData.id}`,\n          state: {\n            data: rowData\n          }\n        });\n      } else {\n        _this.props.history.push(\"/coupons/add-coupon\");\n      }\n    };\n\n    this.onChangeMethod = value => {\n      this.setState({\n        searchValue: value,\n        conditions: [{\n          key: \"SEARCH_BY_TEXT\",\n          value: value.search\n        }]\n      });\n      replaceHistory(this.props.history, START_PAGE, value.search);\n      this.props.getAllCouponsApi(this, START_PAGE);\n    };\n\n    this.clearSearch = currentPage => {\n      this.setState({\n        searchValue: \"\",\n        conditions: []\n      }, () => {\n        if (currentPage === START_PAGE) {\n          this.props.getAllCouponsApi(this, START_PAGE);\n        }\n\n        replaceHistory(this.props.history, START_PAGE);\n      });\n    };\n\n    const search = props.location.search;\n    const params = new URLSearchParams(search);\n    const page = params.get(\"p\");\n    this.state = {\n      page: page ? parseInt(page, 10) : START_PAGE + 1,\n      couponList: [],\n      showFilter: false,\n      conditions: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllCouponsApi(this);\n    this.props.history.replace({\n      search: `?p=${this.state.page}`\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevParams = new URLSearchParams(prevProps.location.search);\n    const prevPage = parseInt(prevParams.get('p'), 10) || 1;\n    const params = new URLSearchParams(this.props.location.search);\n    const page = parseInt(params.get('p'), 10) || 1;\n    const search = params.get('search') || \"\";\n\n    if (prevPage !== page) {\n      if (search) {\n        this.props.getAllCouponsApi(this);\n      } else {\n        this.props.getAllCouponsApi(this, page - 1);\n      }\n    }\n  }\n\n  render() {\n    const {\n      page,\n      totalPage,\n      couponList\n    } = this.state;\n    const permissionList = getAssignedPermission();\n    console.log(this.state.couponList);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ComponentHeader, {\n        breadcrumb: true,\n        currentPage: \"Coupons\",\n        title: \"Coupons\",\n        isFilter: false,\n        isPrimaryBtn: () => this.handleAddCoupons(),\n        primaryBtnText: permissionList.includes(PermissionList.ADD_UPDATE_TELEMATICS_INVENTORY) ? \"+ Add Coupons\" : \"\",\n        isSearch: true,\n        placeholder: \"Search Coupons\",\n        onChangeMethod: this.onChangeMethod,\n        clearSearch: () => this.clearSearch(page || START_PAGE)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-table-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(CustomTable, {\n          tableData: couponList,\n          columnList: [{\n            coumnWidth: 200,\n            labelName: \"Coupon Title\",\n            dataKey: \"coupon_code\",\n            className: \"red-hat-display-bold\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"coupon_code\") {\n                return rowData.coupon_code;\n              }\n            }\n          }, {\n            coumnWidth: 200,\n            labelName: \"Type\",\n            dataKey: \"type\",\n            className: \"\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"type\") {\n                return CouponTypes.getText(rowData.type);\n              }\n            }\n          }, {\n            coumnWidth: 150,\n            labelName: \"Value (Rs.)\",\n            dataKey: \"value\",\n            className: \"\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"value\") {\n                return rowData.value;\n              }\n            }\n          }, {\n            coumnWidth: 200,\n            labelName: \"Expiry\",\n            dataKey: \"valid_till\",\n            className: \"\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"valid_till\") {\n                return formatDate(rowData.valid_till);\n              }\n            }\n          }, {\n            coumnWidth: 250,\n            labelName: \"\",\n            dataKey: \"options\",\n            className: \"options-column\",\n            isCell: true,\n            cell: (rowData, dataKey) => {\n              if (dataKey === \"options\") {\n                const menuItem = [];\n                menuItem.push({\n                  title: \"Edit\",\n                  type: \"event\",\n                  handleClick: () => this.handleAddCoupons(rowData)\n                });\n\n                if (permissionList.includes(PermissionList.ADD_UPDATE_BATTERY_INVENTORY)) {\n                  return /*#__PURE__*/_jsxDEV(ActionDropdown, {\n                    menuItem: menuItem\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 25\n                  }, this);\n                }\n              }\n            }\n          }] // For Pagination\n          ,\n          history: this.props.history,\n          location: this.props.location,\n          totalPages: totalPage,\n          currentPage: page,\n          message: \"Coupons list is empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  couponsState: state.CouponsState\n});\n\nconst mapDispatchToProps = {\n  getAllCouponsApi\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Coupons);","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/coupons/Coupons.js"],"names":["React","Component","connect","CustomTable","PermissionList","START_PAGE","CouponTypes","getAssignedPermission","replaceHistory","formatDate","ComponentHeader","ActionDropdown","getAllCouponsApi","Coupons","constructor","props","handleFilter","setState","showFilter","state","handleAddCoupons","rowData","history","push","pathname","id","data","onChangeMethod","value","searchValue","conditions","key","search","clearSearch","currentPage","location","params","URLSearchParams","page","get","parseInt","couponList","componentDidMount","replace","componentDidUpdate","prevProps","prevState","prevParams","prevPage","render","totalPage","permissionList","console","log","includes","ADD_UPDATE_TELEMATICS_INVENTORY","coumnWidth","labelName","dataKey","className","isCell","cell","coupon_code","getText","type","valid_till","menuItem","title","handleClick","ADD_UPDATE_BATTERY_INVENTORY","mapStateToProps","couponsState","CouponsState","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport CustomTable from '../../utils/commonComponent/CustomTable';\nimport { PermissionList, START_PAGE, CouponTypes } from '../../utils/Constant';\nimport { getAssignedPermission, replaceHistory, formatDate } from '../../utils/ReusableFunctions';\nimport { ComponentHeader } from '../common';\nimport ActionDropdown from '../common/_utils/ActionDropdown';\nimport { getAllCouponsApi } from './Api'\nclass Coupons extends Component {\n  constructor(props) {\n    super(props);\n    const search = props.location.search;\n    const params = new URLSearchParams(search);\n    const page = params.get(\"p\");\n    this.state = {\n      page: page ? parseInt(page, 10) : START_PAGE + 1,\n      couponList: [],\n      showFilter: false,\n      conditions: []\n    }\n  }\n\n  componentDidMount() {\n    this.props.getAllCouponsApi(this);\n    this.props.history.replace({\n      search: `?p=${this.state.page}`\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevParams = new URLSearchParams(prevProps.location.search);\n    const prevPage = parseInt(prevParams.get('p'), 10) || 1;\n\n    const params = new URLSearchParams(this.props.location.search);\n    const page = parseInt(params.get('p'), 10) || 1;\n    const search = params.get('search') || \"\";\n\n    if (prevPage !== page) {\n      if (search) {\n        this.props.getAllCouponsApi(this);\n      } else {\n        this.props.getAllCouponsApi(this, page - 1);\n      }\n    }\n  }\n\n  handleFilter = () => {\n    this.setState({\n      showFilter: !this.state.showFilter\n    })\n  }\n\n  handleAddCoupons = (rowData = \"\") => {\n    if (rowData) {\n      this.props.history.push({\n        pathname: `/coupons/edit-coupon/${rowData.id}`,\n        state: { data: rowData }\n      });\n    } else {\n      this.props.history.push(\"/coupons/add-coupon\");\n    }\n  }\n\n  onChangeMethod = (value) => {\n    this.setState({\n      searchValue: value,\n      conditions: [{ key: \"SEARCH_BY_TEXT\", value: value.search }]\n    });\n    replaceHistory(this.props.history, START_PAGE, value.search)\n    this.props.getAllCouponsApi(this, START_PAGE);\n  }\n\n  clearSearch = (currentPage) => {\n    this.setState({ searchValue: \"\", conditions: [] },()=>{\n      if (currentPage === START_PAGE) {\n        this.props.getAllCouponsApi(this, START_PAGE);\n      }\n      replaceHistory(this.props.history, START_PAGE)\n    });\n\n  }\n\n  render() {\n    const { page, totalPage, couponList } = this.state;\n    const permissionList = getAssignedPermission();\n    console.log(this.state.couponList)\n    return (\n      <>\n        <ComponentHeader\n          breadcrumb={true}\n          currentPage={\"Coupons\"}\n          title={\"Coupons\"}\n          isFilter={false}\n          isPrimaryBtn={() => this.handleAddCoupons()}\n          primaryBtnText={permissionList.includes(PermissionList.ADD_UPDATE_TELEMATICS_INVENTORY) ? \"+ Add Coupons\" : \"\"}\n          isSearch={true}\n          placeholder={\"Search Coupons\"}\n          onChangeMethod={this.onChangeMethod}\n          clearSearch={() => this.clearSearch(page || START_PAGE)}\n        />\n        <div className='custom-table-wrapper'>\n          <CustomTable\n            tableData={couponList}\n            columnList={[\n              {\n                coumnWidth: 200,\n                labelName: \"Coupon Title\",\n                dataKey: \"coupon_code\",\n                className: \"red-hat-display-bold\",\n                isCell: true,\n                cell: (rowData, dataKey) => {\n                  if (dataKey === \"coupon_code\") {\n                    return rowData.coupon_code\n                  }\n                }\n              },\n              {\n                coumnWidth: 200,\n                labelName: \"Type\",\n                dataKey: \"type\",\n                className: \"\",\n                isCell: true,\n                cell: (rowData, dataKey) => {\n                  if (dataKey === \"type\") {\n                    return CouponTypes.getText(rowData.type)\n                  }\n                }\n              },\n              {\n                coumnWidth: 150,\n                labelName: \"Value (Rs.)\",\n                dataKey: \"value\",\n                className: \"\",\n                isCell: true,\n                cell: (rowData, dataKey) => {\n                  if (dataKey === \"value\") {\n                    return rowData.value\n                  }\n                }\n              },\n              {\n                coumnWidth: 200,\n                labelName: \"Expiry\",\n                dataKey: \"valid_till\",\n                className: \"\",\n                isCell: true,\n                cell: (rowData, dataKey) => {\n                  if (dataKey === \"valid_till\") {\n                    return formatDate(rowData.valid_till)\n                  }\n                }\n              },\n              {\n                coumnWidth: 250,\n                labelName: \"\",\n                dataKey: \"options\",\n                className: \"options-column\",\n                isCell: true,\n                cell: (rowData, dataKey) => {\n                  if (dataKey === \"options\") {\n                    const menuItem = [];\n\n                    menuItem.push({\n                      title: \"Edit\",\n                      type: \"event\",\n                      handleClick: () => this.handleAddCoupons(rowData),\n                    })\n                    if (permissionList.includes(PermissionList.ADD_UPDATE_BATTERY_INVENTORY)) {\n                      return (\n                        <ActionDropdown\n                          menuItem={menuItem}\n                        />\n                      )\n                    }\n                  }\n                }\n              }\n            ]}\n            // For Pagination\n            history={this.props.history}\n            location={this.props.location}\n            totalPages={totalPage}\n            currentPage={page}\n            message={\"Coupons list is empty\"}\n          />\n        </div>\n\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  couponsState: state.CouponsState\n});\nconst mapDispatchToProps = {\n  getAllCouponsApi\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Coupons);"]},"metadata":{},"sourceType":"module"}