{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { postLoginInstance } from \"../../utils\";\nimport { API_LIMIT, START_PAGE } from \"../../utils/Constant\";\nimport { calculateTotalPageCount } from \"../../utils/ReusableFunctions\";\nexport const getAllBatteryApi = function (ctx) {\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : START_PAGE;\n  return function (dispatch, getState) {\n    let data = new URLSearchParams();\n    data.append(\"start\", page * API_LIMIT || START_PAGE);\n    data.append(\"limit\", API_LIMIT);\n    data.append(\"conditions\", JSON.stringify(ctx.state.conditions || []));\n    data.append(\"sorts\", JSON.stringify([]));\n    postLoginInstance.post('/offering/battery/search-battery', data).then(res => {\n      /* let data = res.data.data.batteries.results.map(item => ({\n        modelInfo: item.modelInfo,\n        batteryModel: item.modelInfo.modelName,\n        batteryDeviceId: item.id,\n        orderDate: item.createdOn,\n        status: item.active ? \"Attached\" : \"InActive\"\n      })) */\n      ctx.setState({\n        // data: data,\n        batteryList: res.data.data.batteries.results,\n        totalCount: res.data.data.batteries.totalCount,\n        totalPage: calculateTotalPageCount(res.data.data.batteries.totalCount),\n        page: page\n      });\n    }).catch(err => {\n      console.log('Catch', err);\n    });\n  };\n};\nexport const getBatteryModelApi = ctx => {\n  return function (dispatch, getState) {\n    postLoginInstance.post('/offering/battery/get-all-battery-models').then(res => {\n      let batteryModalOptions = res.data.data.battery_models.map(item => ({\n        label: item.modelCompany + \" - \" + item.modelName,\n        value: item.id\n      }));\n      ctx.setState({\n        batteryModalOptions: batteryModalOptions\n      });\n    }).catch(err => {\n      console.log('Catch', err);\n    });\n  };\n};\nexport const addUpdateBatteryApi = (data, cb) => {\n  return postLoginInstance.post(\"/offering/battery/add-update-battery\", data).then(res => {\n    if (!res.data.error) {\n      cb();\n      toast.success(res.data.message || \"Something went wrong\");\n    } else {\n      toast.error(res.data.message || \"Something went wrong\");\n    }\n  }).catch(err => {\n    toast.error(err.message || \"Something went wrong\");\n  });\n};","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/battery/Api.js"],"names":["toast","postLoginInstance","API_LIMIT","START_PAGE","calculateTotalPageCount","getAllBatteryApi","ctx","page","dispatch","getState","data","URLSearchParams","append","JSON","stringify","state","conditions","post","then","res","setState","batteryList","batteries","results","totalCount","totalPage","catch","err","console","log","getBatteryModelApi","batteryModalOptions","battery_models","map","item","label","modelCompany","modelName","value","id","addUpdateBatteryApi","cb","error","success","message"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\nimport { postLoginInstance } from \"../../utils\";\nimport { API_LIMIT, START_PAGE } from \"../../utils/Constant\";\nimport { calculateTotalPageCount } from \"../../utils/ReusableFunctions\";\n\nexport const getAllBatteryApi = (ctx, page = START_PAGE) => {\n  return function (dispatch, getState) {\n    let data = new URLSearchParams();\n    data.append(\"start\", (page * API_LIMIT) || START_PAGE);\n    data.append(\"limit\", API_LIMIT);\n    data.append(\"conditions\", JSON.stringify(ctx.state.conditions || []));\n    data.append(\"sorts\", JSON.stringify([]));\n\n    postLoginInstance.post('/offering/battery/search-battery', data)\n      .then(res => {\n        /* let data = res.data.data.batteries.results.map(item => ({\n          modelInfo: item.modelInfo,\n          batteryModel: item.modelInfo.modelName,\n          batteryDeviceId: item.id,\n          orderDate: item.createdOn,\n          status: item.active ? \"Attached\" : \"InActive\"\n        })) */\n        ctx.setState({\n          // data: data,\n          batteryList: res.data.data.batteries.results,\n          totalCount: res.data.data.batteries.totalCount,\n          totalPage: calculateTotalPageCount(res.data.data.batteries.totalCount),\n          page: page\n        })\n      })\n      .catch((err) => {\n        console.log('Catch', err);\n      })\n  };\n}\n\n\nexport const getBatteryModelApi = (ctx) => {\n  return function (dispatch, getState) {\n    postLoginInstance.post('/offering/battery/get-all-battery-models')\n      .then(res => {\n        let batteryModalOptions = res.data.data.battery_models.map(item => ({\n          label: item.modelCompany + \" - \" + item.modelName,\n          value: item.id,\n        }))\n        ctx.setState({\n          batteryModalOptions: batteryModalOptions\n        })\n      })\n      .catch((err) => {\n        console.log('Catch', err);\n      })\n  };\n}\n\nexport const addUpdateBatteryApi = (data, cb) => {\n  return postLoginInstance.post(\"/offering/battery/add-update-battery\", data)\n    .then((res) => {\n      if (!res.data.error) {\n        cb();\n        toast.success(res.data.message || \"Something went wrong\")\n      } else {\n        toast.error(res.data.message || \"Something went wrong\")\n      }\n    })\n    .catch((err) => {\n      toast.error(err.message || \"Something went wrong\");\n    });\n};\n\n"]},"metadata":{},"sourceType":"module"}