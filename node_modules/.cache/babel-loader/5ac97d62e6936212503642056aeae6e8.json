{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/utils/form/CustomButton.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from 'react-bootstrap/Button';\nimport { Image } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomButton = props => {\n  const {\n    isActive,\n    isBlock,\n    isDisabled,\n    href,\n    variant,\n    handleClick,\n    type,\n    buttonText,\n    buttonImage,\n    className = \"\"\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Button, {\n    type: type,\n    variant: variant,\n    block: isBlock,\n    active: isActive,\n    disabled: isDisabled,\n    href: href,\n    onClick: handleClick,\n    className: className,\n    children: buttonText || /*#__PURE__*/_jsxDEV(Image, {\n      src: buttonImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 22\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomButton;\nCustomButton.propTypes = {\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isActive: PropTypes.bool,\n  isBlock: PropTypes.bool,\n  href: PropTypes.string,\n  handleClick: PropTypes.func.isRequired,\n  buttonText: PropTypes.string,\n  className: PropTypes.string // valueLink: PropTypes.object.isRequired,\n\n};\nCustomButton.defaultProps = {\n  type: \"button\",\n  variant: \"primary\",\n  isDisabled: false,\n  isActive: false\n};\nexport default CustomButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomButton\");","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/utils/form/CustomButton.js"],"names":["React","PropTypes","Button","Image","CustomButton","props","isActive","isBlock","isDisabled","href","variant","handleClick","type","buttonText","buttonImage","className","propTypes","string","bool","func","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,KAAT,QAAsB,iBAAtB;;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAM;AACJC,IAAAA,QADI;AACMC,IAAAA,OADN;AACeC,IAAAA,UADf;AAC2BC,IAAAA,IAD3B;AACiCC,IAAAA,OADjC;AAC0CC,IAAAA,WAD1C;AACuDC,IAAAA,IADvD;AAC6DC,IAAAA,UAD7D;AACyEC,IAAAA,WADzE;AACsFC,IAAAA,SAAS,GAAG;AADlG,MAEFV,KAFJ;AAGA,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAEO,IADR;AAEE,IAAA,OAAO,EAAEF,OAFX;AAGE,IAAA,KAAK,EAAEH,OAHT;AAIE,IAAA,MAAM,EAAED,QAJV;AAKE,IAAA,QAAQ,EAAEE,UALZ;AAME,IAAA,IAAI,EAAEC,IANR;AAOE,IAAA,OAAO,EAAEE,WAPX;AAQE,IAAA,SAAS,EAAEI,SARb;AAAA,cAUGF,UAAU,iBAAI,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEC;AAAZ;AAAA;AAAA;AAAA;AAAA;AAVjB;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlBD;;KAAMV,Y;AAoBNA,YAAY,CAACY,SAAb,GAAyB;AACvBJ,EAAAA,IAAI,EAAEX,SAAS,CAACgB,MADO;AAEvBP,EAAAA,OAAO,EAAET,SAAS,CAACgB,MAFI;AAGvBT,EAAAA,UAAU,EAAEP,SAAS,CAACiB,IAHC;AAIvBZ,EAAAA,QAAQ,EAAEL,SAAS,CAACiB,IAJG;AAKvBX,EAAAA,OAAO,EAAEN,SAAS,CAACiB,IALI;AAMvBT,EAAAA,IAAI,EAAER,SAAS,CAACgB,MANO;AAOvBN,EAAAA,WAAW,EAAEV,SAAS,CAACkB,IAAV,CAAeC,UAPL;AAQvBP,EAAAA,UAAU,EAAEZ,SAAS,CAACgB,MARC;AASvBF,EAAAA,SAAS,EAAEd,SAAS,CAACgB,MATE,CAUvB;;AAVuB,CAAzB;AAaAb,YAAY,CAACiB,YAAb,GAA4B;AAC1BT,EAAAA,IAAI,EAAE,QADoB;AAE1BF,EAAAA,OAAO,EAAE,SAFiB;AAG1BF,EAAAA,UAAU,EAAE,KAHc;AAI1BF,EAAAA,QAAQ,EAAE;AAJgB,CAA5B;AAOA,eAAeF,YAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from 'react-bootstrap/Button'\nimport { Image } from \"react-bootstrap\";\n\nconst CustomButton = props => {\n  const {\n    isActive, isBlock, isDisabled, href, variant, handleClick, type, buttonText, buttonImage, className = \"\"\n  } = props;\n  return (\n    <Button\n      type={type}\n      variant={variant}\n      block={isBlock}\n      active={isActive}\n      disabled={isDisabled}\n      href={href}\n      onClick={handleClick}\n      className={className}\n    >\n      {buttonText || <Image src={buttonImage} />}\n    </Button>\n  );\n};\n\nCustomButton.propTypes = {\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isActive: PropTypes.bool,\n  isBlock: PropTypes.bool,\n  href: PropTypes.string,\n  handleClick: PropTypes.func.isRequired,\n  buttonText: PropTypes.string,\n  className: PropTypes.string,\n  // valueLink: PropTypes.object.isRequired,\n};\n\nCustomButton.defaultProps = {\n  type: \"button\",\n  variant: \"primary\",\n  isDisabled: false,\n  isActive: false,\n};\n\nexport default CustomButton;\n"]},"metadata":{},"sourceType":"module"}