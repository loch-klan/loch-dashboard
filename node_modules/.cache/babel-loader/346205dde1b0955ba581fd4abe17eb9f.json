{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { postLoginInstance } from \"../../utils\";\nimport { API_LIMIT, START_PAGE } from \"../../utils/Constant\";\nexport const addUpdateBatteryModelApi = (data, cb) => {\n  return postLoginInstance.post(\"offering/battery/add-update-battery-model\", data).then(res => {\n    if (!res.data.error) {\n      cb();\n      toast.success(res.data.message || \"Something went wrong\");\n    } else {\n      toast.error(res.data.message || \"Something went wrong\");\n    }\n  }).catch(err => {\n    toast.error(err.message || \"Something went wrong\");\n  });\n};\nexport const getAllBatteryModelsApi = function (ctx) {\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : START_PAGE;\n  let data = new URLSearchParams();\n  data.append(\"start\", page * API_LIMIT || START_PAGE);\n  data.append(\"limit\", API_LIMIT);\n  data.append(\"conditions\", JSON.stringify(ctx.state.conditions || []));\n  data.append(\"sorts\", JSON.stringify([]));\n  postLoginInstance.post('/offering/battery/search-battery-model', data).then(res => {\n    if (!res.data.error) {\n      ctx.setState({\n        BatteryModels: res.data.data.battery_models.results,\n        totalPage: Math.ceil(res.data.data.battery_models.totalCount / API_LIMIT),\n        page: page\n      });\n    } else {\n      toast.error(res.data.message || \"Something went wrong\");\n    }\n  }).catch(err => {\n    console.log('Catch', err);\n  });\n};","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/app/batteryModel/Api.js"],"names":["toast","postLoginInstance","API_LIMIT","START_PAGE","addUpdateBatteryModelApi","data","cb","post","then","res","error","success","message","catch","err","getAllBatteryModelsApi","ctx","page","URLSearchParams","append","JSON","stringify","state","conditions","setState","BatteryModels","battery_models","results","totalPage","Math","ceil","totalCount","console","log"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,sBAAtC;AAEA,OAAO,MAAMC,wBAAwB,GAAG,CAACC,IAAD,EAAOC,EAAP,KAAc;AACpD,SAAOL,iBAAiB,CAACM,IAAlB,CAAuB,2CAAvB,EAAoEF,IAApE,EACJG,IADI,CACEC,GAAD,IAAS;AACb,QAAI,CAACA,GAAG,CAACJ,IAAJ,CAASK,KAAd,EAAqB;AACnBJ,MAAAA,EAAE;AACFN,MAAAA,KAAK,CAACW,OAAN,CAAcF,GAAG,CAACJ,IAAJ,CAASO,OAAT,IAAoB,sBAAlC;AACD,KAHD,MAGO;AACLZ,MAAAA,KAAK,CAACU,KAAN,CAAYD,GAAG,CAACJ,IAAJ,CAASO,OAAT,IAAoB,sBAAhC;AACD;AACF,GARI,EASJC,KATI,CASGC,GAAD,IAAS;AACdd,IAAAA,KAAK,CAACU,KAAN,CAAYI,GAAG,CAACF,OAAJ,IAAe,sBAA3B;AACD,GAXI,CAAP;AAYD,CAbM;AAgBP,OAAO,MAAMG,sBAAsB,GAAG,UAACC,GAAD,EAA4B;AAAA,MAAtBC,IAAsB,uEAAfd,UAAe;AAChE,MAAIE,IAAI,GAAG,IAAIa,eAAJ,EAAX;AACAb,EAAAA,IAAI,CAACc,MAAL,CAAY,OAAZ,EAAsBF,IAAI,GAAGf,SAAR,IAAsBC,UAA3C;AACAE,EAAAA,IAAI,CAACc,MAAL,CAAY,OAAZ,EAAqBjB,SAArB;AACAG,EAAAA,IAAI,CAACc,MAAL,CAAY,YAAZ,EAA0BC,IAAI,CAACC,SAAL,CAAeL,GAAG,CAACM,KAAJ,CAAUC,UAAV,IAAwB,EAAvC,CAA1B;AACAlB,EAAAA,IAAI,CAACc,MAAL,CAAY,OAAZ,EAAqBC,IAAI,CAACC,SAAL,CAAe,EAAf,CAArB;AACApB,EAAAA,iBAAiB,CAACM,IAAlB,CAAuB,wCAAvB,EAAiEF,IAAjE,EACGG,IADH,CACQC,GAAG,IAAI;AACX,QAAI,CAACA,GAAG,CAACJ,IAAJ,CAASK,KAAd,EAAqB;AACnBM,MAAAA,GAAG,CAACQ,QAAJ,CAAa;AACXC,QAAAA,aAAa,EAAEhB,GAAG,CAACJ,IAAJ,CAASA,IAAT,CAAcqB,cAAd,CAA6BC,OADjC;AAEXC,QAAAA,SAAS,EAAEC,IAAI,CAACC,IAAL,CAAUrB,GAAG,CAACJ,IAAJ,CAASA,IAAT,CAAcqB,cAAd,CAA6BK,UAA7B,GAA0C7B,SAApD,CAFA;AAGXe,QAAAA,IAAI,EAAEA;AAHK,OAAb;AAKD,KAND,MAMO;AACLjB,MAAAA,KAAK,CAACU,KAAN,CAAYD,GAAG,CAACJ,IAAJ,CAASO,OAAT,IAAoB,sBAAhC;AACD;AACF,GAXH,EAYGC,KAZH,CAYUC,GAAD,IAAS;AACdkB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBnB,GAArB;AACD,GAdH;AAeD,CArBM","sourcesContent":["import { toast } from \"react-toastify\";\nimport { postLoginInstance } from \"../../utils\";\nimport { API_LIMIT, START_PAGE } from \"../../utils/Constant\";\n\nexport const addUpdateBatteryModelApi = (data, cb) => {\n  return postLoginInstance.post(\"offering/battery/add-update-battery-model\", data)\n    .then((res) => {\n      if (!res.data.error) {\n        cb();\n        toast.success(res.data.message || \"Something went wrong\")\n      } else {\n        toast.error(res.data.message || \"Something went wrong\")\n      }\n    })\n    .catch((err) => {\n      toast.error(err.message || \"Something went wrong\");\n    });\n};\n\n\nexport const getAllBatteryModelsApi = (ctx, page = START_PAGE) => {\n  let data = new URLSearchParams();\n  data.append(\"start\", (page * API_LIMIT) || START_PAGE);\n  data.append(\"limit\", API_LIMIT);\n  data.append(\"conditions\", JSON.stringify(ctx.state.conditions || []));\n  data.append(\"sorts\", JSON.stringify([]));\n  postLoginInstance.post('/offering/battery/search-battery-model', data)\n    .then(res => {\n      if (!res.data.error) {\n        ctx.setState({\n          BatteryModels: res.data.data.battery_models.results,\n          totalPage: Math.ceil(res.data.data.battery_models.totalCount / API_LIMIT),\n          page: page\n        });\n      } else {\n        toast.error(res.data.message || \"Something went wrong\")\n      }\n    })\n    .catch((err) => {\n      console.log('Catch', err);\n    })\n}"]},"metadata":{},"sourceType":"module"}