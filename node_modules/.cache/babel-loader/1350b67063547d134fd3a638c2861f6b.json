{"ast":null,"code":"var _jsxFileName = \"/opt/projects/loch-dashboard/src/utils/PrivateRoute.js\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { getToken } from \"./ManageToken\";\nimport { Sidenav, Navbar } from '../app/common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      // ON EVERY ROUTE GET PARAMS FROM URL AND SET TO LOCAL STORAGE.\n      // const scope = {};\n      // scope.account_id = props.match.params.accountId ? parseInt(props.match.params.accountId, 10) : 0;\n      // scope.project_id = props.match.params.projectId ? parseInt(props.match.params.projectId, 10) : 0;\n      // scope.department_id = props.match.params.departmentId ? parseInt(props.match.params.departmentId, 10) : 0;\n      // localStorage.setItem('scope', JSON.stringify(scope));\n      return requireAuth() ?\n      /*#__PURE__*/\n      // key ADDED TO MAKE EVERY ROUTE WITH DIFFERENT PARAMS ID UNIQUE AND CALL DID MOUNT\n      // WHEN PARAM ID CHANGES.\n      _jsxDEV(\"div\", {\n        className: \"main-section\",\n        children: [/*#__PURE__*/_jsxDEV(Sidenav, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-section-right\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-content-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(Component, { ...props\n            }, props.location.pathname, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n\n_c = PrivateRoute;\n\nconst requireAuth = () => {\n  const token = getToken();\n  return token;\n};\n\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/opt/projects/loch-dashboard/src/utils/PrivateRoute.js"],"names":["React","Redirect","Route","getToken","Sidenav","Navbar","PrivateRoute","component","Component","rest","props","requireAuth","location","pathname","state","from","token"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,eAAhC;;;AAEA,MAAMC,YAAY,GAAG;AAAA,MAAC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAD;AAAA,sBACnB,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAEC,KAAK,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AAEA,aAAOC,WAAW;AAAA;AAEd;AACA;AACA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,OAAD,OAAaD;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACE,QAAC,SAAD,OAA6CA;AAA7C,eAAgBA,KAAK,CAACE,QAAN,CAAeC,QAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJc,gBAkBd,QAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFA,UAAAA,QAAQ,EAAE,QADR;AAEFC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEL,KAAK,CAACE;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAyBD;AAnCH;AAAA;AAAA;AAAA;AAAA,UADmB;AAAA,CAArB;;KAAMN,Y;;AAyCN,MAAMK,WAAW,GAAG,MAAM;AACxB,QAAMK,KAAK,GAAGb,QAAQ,EAAtB;AACA,SAAOa,KAAP;AACD,CAHD;;AAKA,eAAeV,YAAf","sourcesContent":["import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { getToken } from \"./ManageToken\";\nimport { Sidenav, Navbar } from '../app/common'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      // ON EVERY ROUTE GET PARAMS FROM URL AND SET TO LOCAL STORAGE.\n      // const scope = {};\n      // scope.account_id = props.match.params.accountId ? parseInt(props.match.params.accountId, 10) : 0;\n      // scope.project_id = props.match.params.projectId ? parseInt(props.match.params.projectId, 10) : 0;\n      // scope.department_id = props.match.params.departmentId ? parseInt(props.match.params.departmentId, 10) : 0;\n      // localStorage.setItem('scope', JSON.stringify(scope));\n\n      return requireAuth() ?\n        (\n          // key ADDED TO MAKE EVERY ROUTE WITH DIFFERENT PARAMS ID UNIQUE AND CALL DID MOUNT\n          // WHEN PARAM ID CHANGES.\n          <div className='main-section'>\n            <Sidenav {...props} />\n            <div className='main-section-right'>\n              <Navbar />\n              <div className='main-content-wrapper'>\n                <Component key={props.location.pathname} {...props} />\n              </div>\n\n            </div>\n          </div>\n\n        )\n        :\n        (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n    }\n    }\n  />\n);\n\nconst requireAuth = () => {\n  const token = getToken();\n  return token;\n}\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}